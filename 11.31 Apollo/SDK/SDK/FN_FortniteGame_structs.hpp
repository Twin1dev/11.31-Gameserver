#pragma once

// Dumped by Twin1dev || Dumper-8

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// ENUMS
//---------------------------------------------------------------------------------------------------------------------

enum class EBuildingReplacementType : uint8
{
	BRT_None                       = 0,
	BRT_Edited                     = 1,
	BRT_Upgrade                    = 2,
	BRT_MAX                        = 3,
};

enum class EFortAIDirectorEvent : uint8
{
	PlayerAIEnemies                = 0,
	PlayerTakeDamage               = 1,
	PlayerHealth                   = 2,
	PlayerDeath                    = 3,
	PlayerLookAtAIEnemy            = 4,
	PlayerDamageAIEnemy            = 5,
	PlayerKillAIEnemy              = 6,
	PlayerHealingPotential         = 7,
	PlayerAmmoLight                = 8,
	PlayerAmmoMedium               = 9,
	PlayerAmmoHeavy                = 10,
	PlayerAmmoShells               = 11,
	PlayerAmmoEnergy               = 12,
	PlayerAINear                   = 13,
	PlayerMovement                 = 14,
	ObjectiveTakeDamage            = 15,
	ObjectiveHealth                = 16,
	ObjectiveDestroyed             = 17,
	TrapFired                      = 18,
	TrapDamagedAIEnemy             = 19,
	ObjectivePathCost              = 20,
	PlayerPathCost                 = 21,
	ObjectiveNearbyBuildingDamaged = 22,
	Max_None                       = 23,
	EFortAIDirectorEvent_MAX       = 24,
};

enum class EFortWeaponReloadType : uint8
{
	ReloadWholeClip                = 0,
	ReloadIndividualBullets        = 1,
	ReloadBasedOnAmmoCostPerFire   = 2,
	ReloadBasedOnCartridgePerFire  = 3,
	EFortWeaponReloadType_MAX      = 4,
};

enum class EFortCustomPartType : uint8
{
	Head                           = 0,
	Body                           = 1,
	Hat                            = 2,
	Backpack                       = 3,
	Charm                          = 4,
	Face                           = 5,
	NumTypes                       = 6,
	EFortCustomPartType_MAX        = 7,
};

enum class EFortDayPhase : uint8
{
	Morning                        = 0,
	Day                            = 1,
	Evening                        = 2,
	Night                          = 3,
	NumPhases                      = 4,
	EFortDayPhase_MAX              = 5,
};

enum class EFortInventoryType : uint8
{
	World                          = 0,
	Account                        = 1,
	Outpost                        = 2,
	MAX                            = 3,
};

enum class EXPEventPriorityType : uint8
{
	NearReticle                    = 0,
	XPBarOnly                      = 1,
	TopCenter                      = 2,
	Feed                           = 3,
	EXPEventPriorityType_MAX       = 4,
};

enum class EOfferPurchaseError : uint8
{
	NoError                        = 0,
	PendingServerConfirmation      = 1,
	CannotAffordItem               = 2,
	InvalidOfferID                 = 3,
	InvalidPriceIndex              = 4,
	NoneLeft                       = 5,
	PurchaseAlreadyPending         = 6,
	NoConnection                   = 7,
	AccountNotEligible             = 8,
	CannotGiftItem                 = 9,
	MFANotEnabled                  = 10,
	EOfferPurchaseError_MAX        = 11,
};

enum class EFortAlteration : uint8
{
	AttributeSlot                  = 0,
	GameplaySlot                   = 1,
	ComplexCosmeticSlot            = 2,
	UserPickedCosmeticSlot         = 3,
	ColorSlot                      = 4,
	HeroSpecializationTier1Slot    = 5,
	HeroSpecializationTier2Slot    = 6,
	HeroSpecializationTier3Slot    = 7,
	HeroSpecializationTier4Slot    = 8,
	HeroSpecializationTier5Slot    = 9,
	EFortAlteration_MAX            = 10,
};

enum class EPlayerCompetitiveBanReasons : uint8
{
	None                           = 0,
	Cheating                       = 1,
	Collusion                      = 2,
	Toxicity                       = 3,
	Harassment                     = 4,
	Ringing                        = 5,
	Gambling                       = 6,
	Exploiting                     = 7,
	IntentionalDisconnect          = 8,
	Other                          = 9,
	AccountSharing                 = 10,
	CircumventingRegionLock        = 11,
	CircumventingBan               = 12,
	EPlayerCompetitiveBanReasons_MAX = 13,
};

enum class EPlayerBanReasons : uint8
{
	Teaming                        = 0,
	Afk_Leeching                   = 1,
	Harassment                     = 2,
	TradeScamming                  = 3,
	Exploiting                     = 4,
	Competitive                    = 5,
	Creative                       = 6,
	TeamingWithCheater             = 7,
	EPlayerBanReasons_MAX          = 8,
};

enum class EFortItemType : uint8
{
	WorldItem                      = 0,
	Ammo                           = 1,
	Badge                          = 2,
	BackpackPickup                 = 3,
	BuildingPiece                  = 4,
	CharacterPart                  = 5,
	Consumable                     = 6,
	Deco                           = 7,
	EditTool                       = 8,
	Ingredient                     = 9,
	ItemCache                      = 10,
	Food                           = 11,
	Gadget                         = 12,
	AthenaGadget                   = 13,
	HomebaseGadget                 = 14,
	BattleLabDevice                = 15,
	HeroAbility                    = 16,
	MissionItem                    = 17,
	Trap                           = 18,
	Weapon                         = 19,
	WeaponMelee                    = 20,
	WeaponRanged                   = 21,
	WeaponHarvest                  = 22,
	WeaponCreativePhone            = 23,
	WorldResource                  = 24,
	CreativeUserPrefab             = 25,
	CreativePlayset                = 26,
	Vehicle                        = 27,
	AccountItem                    = 28,
	AccountResource                = 29,
	CollectedResource              = 30,
	Alteration                     = 31,
	CardPack                       = 32,
	Currency                       = 33,
	Hero                           = 34,
	Schematic                      = 35,
	Worker                         = 36,
	TeamPerk                       = 37,
	Token                          = 38,
	DailyRewardScheduleToken       = 39,
	CodeToken                      = 40,
	Stat                           = 41,
	Buff                           = 42,
	BuffCredit                     = 43,
	Quest                          = 44,
	Accolades                      = 45,
	MedalsPunchCard                = 46,
	ChallengeBundle                = 47,
	ChallengeBundleSchedule        = 48,
	ChallengeBundleCompletionToken = 49,
	GameplayModifier               = 50,
	Outpost                        = 51,
	HomebaseNode                   = 52,
	Defender                       = 53,
	ConversionControl              = 54,
	DeployableBaseCloudSave        = 55,
	ConsumableAccountItem          = 56,
	Quota                          = 57,
	Expedition                     = 58,
	HomebaseBannerIcon             = 59,
	HomebaseBannerColor            = 60,
	AthenaSkyDiveContrail          = 61,
	PersonalVehicle                = 62,
	AthenaGlider                   = 63,
	AthenaPickaxe                  = 64,
	AthenaHat                      = 65,
	AthenaBackpack                 = 66,
	AthenaCharacter                = 67,
	AthenaDance                    = 68,
	AthenaConsumableEmote          = 69,
	AthenaLoadingScreen            = 70,
	AthenaBattleBus                = 71,
	AthenaVehicleCosmetic          = 72,
	AthenaItemWrap                 = 73,
	AthenaCallingCard              = 74,
	AthenaMapMarker                = 75,
	AthenaMusicPack                = 76,
	AthenaPetCosmetic              = 77,
	AthenaCharmCosmetic            = 78,
	AthenaVictoryPose              = 79,
	AthenaSeasonTreasure           = 80,
	AthenaSeason                   = 81,
	AthenaRewardGraph              = 82,
	EventDescription               = 83,
	BattleLabDeviceAccount         = 84,
	MatchAward                     = 85,
	AthenaEventToken               = 86,
	EventPurchaseTracker           = 87,
	CosmeticVariantToken           = 88,
	CampaignHeroLoadout            = 89,
	Playset                        = 90,
	PrerollData                    = 91,
	CreativePlot                   = 92,
	PlayerSurveyToken              = 93,
	CosmeticLocker                 = 94,
	BannerToken                    = 95,
	RestedXpBoosterToken           = 96,
	RewardEventGraphPurchaseToken  = 97,
	SpecialItem                    = 98,
	Emote                          = 99,
	Stack                          = 100,
	CollectionBookPage             = 101,
	BGAConsumableWrapper           = 102,
	GiftBox                        = 103,
	GiftBoxUnlock                  = 104,
	PlaysetProp                    = 105,
	RegCosmeticDef                 = 106,
	Profile                        = 107,
	Max_None                       = 108,
	EFortItemType_MAX              = 109,
};

enum class EAthenaTravelLogPlayerType : uint8
{
	Self                           = 0,
	Ally                           = 1,
	Enemy                          = 2,
	Invalid                        = 3,
	EAthenaTravelLogPlayerType_MAX = 4,
};

enum class EAthenaTravelEventType : uint8
{
	GroundMove                     = 0,
	AirMove                        = 1,
	BattleBusJump                  = 2,
	LaunchJump                     = 3,
	Landed                         = 4,
	OpenChest                      = 5,
	OpenAmmo                       = 6,
	GotAssist                      = 7,
	GotKnockdown                   = 8,
	GotKill                        = 9,
	PlayerDowned                   = 10,
	PlayerDied                     = 11,
	Won                            = 12,
	DealtDamage                    = 13,
	HealthChange                   = 14,
	GotItem                        = 15,
	DroppedItem                    = 16,
	ShieldChange                   = 17,
	WeaponExecuted                 = 18,
	EnteredVehicle                 = 19,
	ExitedVehicle                  = 20,
	TrapBuilt                      = 21,
	UsedItem                       = 22,
	ZoneUpdate                     = 23,
	PlacedBuilding                 = 24,
	EmoteUsed                      = 25,
	UpgradedBuilding               = 26,
	EditedBuilding                 = 27,
	Count                          = 28,
	EAthenaTravelEventType_MAX     = 29,
};

enum class ERewardSource : uint8
{
	Invalid                        = 0,
	MinutesPlayed                  = 1,
	FirstKill                      = 2,
	TeamKills                      = 3,
	FirstRevive                    = 4,
	AdditionalRevives              = 5,
	Placement                      = 6,
	Medals                         = 7,
	FirstWin                       = 8,
	SeasonLevelUp                  = 9,
	BookLevelUp                    = 10,
	MatchXP                        = 11,
	MAX_COUNT                      = 12,
	ERewardSource_MAX              = 13,
};

enum class EAthenaMatchXpMultiplierSource : uint8
{
	Invalid                        = 0,
	BattlePassSelf                 = 1,
	BattlePassFriends              = 2,
	CosmeticSet                    = 3,
	AntiAddictionPenalty           = 4,
	BonusXpEvent                   = 5,
	MAX_COUNT                      = 6,
	EAthenaMatchXpMultiplierSource_MAX = 7,
};

enum class EFortBudgetCategory : uint8
{
	Memory                         = 0,
	Simulation                     = 1,
	Rendering                      = 2,
	Network                        = 3,
	Audio                          = 4,
	Max                            = 5,
};

enum class EVolumeState : uint8
{
	Uninitialized                  = 0,
	ReadOnly                       = 1,
	Initializing                   = 2,
	Ready                          = 3,
	EVolumeState_MAX               = 4,
};

enum class EAthenaGameMsgType : uint8
{
	None                           = 0,
	DefaultIntro                   = 1,
	DefaultMessage                 = 2,
	DefaultCriticalMessage         = 3,
	CommIntro                      = 4,
	CommMessage                    = 5,
	CommCriticalMessage            = 6,
	CornerIntro                    = 7,
	CornerMessage                  = 8,
	CornerCriticalMessage          = 9,
	RespawnTurningOffWarning       = 10,
	RespawnOffWarning              = 11,
	CenterMessage                  = 12,
	CenterImportantMessage         = 13,
	CenterCriticalMessage          = 14,
	EAthenaGameMsgType_MAX         = 15,
};

enum class EHUDMessageMessageTargets : uint8
{
	All                            = 0,
	TeamOne                        = 1,
	TeamTwo                        = 2,
	TeamThree                      = 3,
	TeamFour                       = 4,
	TeamFive                       = 5,
	TeamSix                        = 6,
	TeamSeven                      = 7,
	TeamEight                      = 8,
	TeamNine                       = 9,
	TeamTen                        = 10,
	TeamEleven                     = 11,
	TeamTwelve                     = 12,
	TeamThirteen                   = 13,
	TeamFourteen                   = 14,
	TeamFifthteen                  = 15,
	TeamSixteen                    = 16,
	TriggeringPlayer               = 17,
	Friendlies                     = 18,
	Hostiles                       = 19,
	EHUDMessageMessageTargets_MAX  = 20,
};

enum class EHUDMessagePlacement : uint8
{
	None                           = 0,
	BottomCenter                   = 1,
	TopCenter                      = 2,
	CenterRight                    = 3,
	EHUDMessagePlacement_MAX       = 4,
};

enum class EInteractionBeingAttempted : uint8
{
	FirstInteraction               = 0,
	SecondInteraction              = 1,
	AllInteraction                 = 2,
	EInteractionBeingAttempted_MAX = 3,
};

enum class EFortBuildingPersistentState : uint8
{
	Default                        = 0,
	New                            = 1,
	Constructed                    = 2,
	Destroyed                      = 3,
	Searched                       = 4,
	None                           = 5,
	EFortBuildingPersistentState_MAX = 6,
};

enum class EFortBuildingInitializationReason : uint8
{
	StaticallyPlaced               = 0,
	Spawned                        = 1,
	Replaced                       = 2,
	LoadedFromSave                 = 3,
	DynamicBuilderPlaced           = 4,
	PlacementTool                  = 5,
	TrapTool                       = 6,
	None                           = 7,
	EFortBuildingInitializationReason_MAX = 8,
};

enum class EFortTeam : uint8
{
	Spectator                      = 0,
	HumanCampaign                  = 1,
	Monster                        = 2,
	HumanPvP_Team1                 = 3,
	HumanPvP_Team2                 = 4,
	MAX                            = 255,
};

enum class EFortBuildingType : uint8
{
	Wall                           = 0,
	Floor                          = 1,
	Corner                         = 2,
	Deco                           = 3,
	Prop                           = 4,
	Stairs                         = 5,
	Roof                           = 6,
	Pillar                         = 7,
	SpawnedItem                    = 8,
	Container                      = 9,
	Trap                           = 10,
	GenericCenterCellActor         = 11,
	None                           = 12,
	EFortBuildingType_MAX          = 13,
};

enum class ENavigationObstacleOverride : uint8
{
	UseMeshSettings                = 0,
	ForceEnabled                   = 1,
	ForceDisabled                  = 2,
	ENavigationObstacleOverride_MAX = 3,
};

enum class EDynamicBuildingPlacementType : uint8
{
	CountsTowardsBounds            = 0,
	DestroyIfColliding             = 1,
	DestroyAnythingThatCollides    = 2,
	EDynamicBuildingPlacementType_MAX = 3,
};

enum class EFortBaseWeaponDamage : uint8
{
	Combat                         = 0,
	Environmental                  = 1,
	EFortBaseWeaponDamage_MAX      = 2,
};

enum class EAbilitySystemComponentCreationPolicy : uint8
{
	Never                          = 0,
	Lazy                           = 1,
	Always                         = 2,
	EAbilitySystemComponentCreationPolicy_MAX = 3,
};

enum class EAttributeInitLevelSource : uint8
{
	WorldDifficulty                = 0,
	PlayerBuildingSkill            = 1,
	AthenaPlaylist                 = 2,
	EAttributeInitLevelSource_MAX  = 3,
};

enum class EFortMarkedActorScreenClamping : uint8
{
	Default                        = 0,
	Clamp                          = 1,
	ClampWhileNew                  = 2,
	DontClamp                      = 3,
	EFortMarkedActorScreenClamping_MAX = 4,
};

enum class EFortAbilityTargetingSource : uint8
{
	Camera                         = 0,
	PawnForward                    = 1,
	PawnTowardsFocus               = 2,
	WeaponForward                  = 3,
	WeaponTowardsFocus             = 4,
	Custom                         = 5,
	Max_None                       = 6,
	EFortAbilityTargetingSource_MAX = 7,
};

enum class EFortDeliveryInfoBuildingActorSpecification : uint8
{
	All                            = 0,
	PlayerBuildable                = 1,
	NonPlayerBuildable             = 2,
	EFortDeliveryInfoBuildingActorSpecification_MAX = 3,
};

enum class EFortTeamAffiliation : uint8
{
	Friendly                       = 0,
	Neutral                        = 1,
	Hostile                        = 2,
	EFortTeamAffiliation_MAX       = 3,
};

enum class EFortProximityBasedGEApplicationType : uint8
{
	ApplyOnProximityPulse          = 0,
	ApplyOnProximityTouch          = 1,
	ApplyOnlyDuringProximityTouch  = 2,
	ApplyOnProximityExit           = 3,
	ApplyOnProximityPrePulse       = 4,
	EFortProximityBasedGEApplicationType_MAX = 5,
};

enum class EFortVolumeType : uint8
{
	None                           = 0,
	Island                         = 1,
	Published                      = 2,
	Featured                       = 3,
	Prefab                         = 4,
	Hub                            = 5,
	EFortVolumeType_MAX            = 6,
};

enum class EVolumeShape : uint8
{
	Sphere                         = 0,
	Box                            = 1,
	EVolumeShape_MAX               = 2,
};

enum class EAthenaScoringEvent : uint8
{
	None                           = 0,
	Elimination                    = 1,
	ChestOpened                    = 2,
	AmmoCanOpened                  = 3,
	SupplyDropOpened               = 4,
	SupplyLlamaOpened              = 5,
	ForagedItemConsumed            = 6,
	SurvivalInMinutes              = 7,
	CollectedCoinBronze            = 8,
	CollectedCoinSilver            = 9,
	CollectedCoinGold              = 10,
	AIKilled                       = 11,
	EAthenaScoringEvent_MAX        = 12,
};

enum class EMatchAbandonState : uint8
{
	None                           = 0,
	Joining                        = 1,
	CanAbandon                     = 2,
	TeamLocked                     = 3,
	EMatchAbandonState_MAX         = 4,
};

enum class ETrustedPlatformType : uint8
{
	Unknown                        = 0,
	Untrusted                      = 1,
	PS4                            = 2,
	XboxOne                        = 3,
	Switch                         = 4,
	ETrustedPlatformType_MAX       = 5,
};

enum class EReadyCheckState : uint8
{
	CheckStarted                   = 0,
	Ready                          = 1,
	NotReady                       = 2,
	EReadyCheckState_MAX           = 3,
};

enum class EFortCustomBodyType : uint8
{
	Small                          = 1,
	Medium                         = 2,
	MediumAndSmall                 = 3,
	Large                          = 4,
	LargeAndSmall                  = 5,
	LargeAndMedium                 = 6,
	All                            = 7,
	Deprecated                     = 8,
	EFortCustomBodyType_MAX        = 9,
};

enum class EFortCustomGender : uint8
{
	Invalid                        = 0,
	Male                           = 1,
	Female                         = 2,
	Both                           = 3,
	EFortCustomGender_MAX          = 4,
};

enum class EFortIsFinalXpUpdate : uint8
{
	Uninitialized                  = 0,
	NotFinal                       = 1,
	Final                          = 2,
	EFortIsFinalXpUpdate_MAX       = 3,
};

enum class EFortPlayerRole : int32
{
	Player                         = 0,
	LiveSpectator                  = 1,
	ReplaySpectator                = 2,
	InactivePlayer                 = 3,
	EFortPlayerRole_MAX            = 4,
};

enum class EFortKickReason : uint8
{
	NotKicked                      = 0,
	GenericKick                    = 1,
	WasBanned                      = 2,
	EncryptionRequired             = 3,
	CrossPlayRestriction           = 4,
	ClientIdRestriction            = 5,
	EFortKickReason_MAX            = 6,
};

enum class EMessageDispatcherErrorMessageType : uint8
{
	FailedToSetTrigger_TooManyTriggers = 0,
	FailedToSetReceiver_TooManyReceivers = 1,
	FailedToSetReceiver_TooManyReceiversOnOneChannel = 2,
	FailedToSetTriggerReceiver_InvalidChannel = 3,
	FailedToEnqueueMessage         = 4,
	BuildLimitReached              = 5,
	UnknownError                   = 6,
	EMessageDispatcherErrorMessageType_MAX = 7,
};

enum class EDeathCause : uint8
{
	OutsideSafeZone                = 0,
	FallDamage                     = 1,
	Pistol                         = 2,
	Shotgun                        = 3,
	Rifle                          = 4,
	SMG                            = 5,
	Sniper                         = 6,
	SniperNoScope                  = 7,
	Melee                          = 8,
	InfinityBlade                  = 9,
	Grenade                        = 10,
	C4                             = 11,
	GrenadeLauncher                = 12,
	RocketLauncher                 = 13,
	Minigun                        = 14,
	Bow                            = 15,
	Trap                           = 16,
	DBNOTimeout                    = 17,
	Banhammer                      = 18,
	RemovedFromGame                = 19,
	MassiveMelee                   = 20,
	MassiveDiveBomb                = 21,
	MassiveRanged                  = 22,
	Vehicle                        = 23,
	ShoppingCart                   = 24,
	ATK                            = 25,
	QuadCrasher                    = 26,
	Biplane                        = 27,
	BiplaneGun                     = 28,
	LMG                            = 29,
	GasGrenade                     = 30,
	InstantEnvironmental           = 31,
	Turret                         = 32,
	ShipCannon                     = 33,
	Cube                           = 34,
	Balloon                        = 35,
	StormSurge                     = 36,
	Lava                           = 37,
	BasicFiend                     = 38,
	EliteFiend                     = 39,
	RangedFiend                    = 40,
	BasicBrute                     = 41,
	EliteBrute                     = 42,
	MegaBrute                      = 43,
	SilentSwitchingToSpectate      = 44,
	LoggedOut                      = 45,
	TeamSwitchSuicide              = 46,
	WonMatch                       = 47,
	Unspecified                    = 48,
	EDeathCause_MAX                = 49,
};

enum class ETeamMemberState : uint8
{
	None                           = 0,
	FIRST_CHAT_MESSAGE             = 1,
	NeedAmmoHeavy                  = 1,
	NeedAmmoLight                  = 2,
	NeedAmmoMedium                 = 3,
	NeedAmmoShells                 = 4,
	NeedAmmoRocket                 = 5,
	ChatBubble                     = 6,
	EnemySpotted                   = 7,
	NeedBandages                   = 8,
	NeedMaterials                  = 9,
	NeedShields                    = 10,
	NeedWeapon                     = 11,
	LAST_CHAT_MESSAGE              = 11,
	MAX                            = 12,
};

enum class EFortVoteStatus : uint8
{
	Begin                          = 0,
	Update                         = 1,
	End                            = 2,
	BeginLockout                   = 3,
	EndLockout                     = 4,
	EFortVoteStatus_MAX            = 5,
};

enum class EFortVoteType : uint8
{
	SurvivalVote                   = 0,
	DifficultyIncrease             = 1,
	MissionActivation              = 2,
	ContinueOrExtract              = 3,
	EFortVoteType_MAX              = 4,
};

enum class EFortItemEntryState : uint8
{
	NoneState                      = 0,
	NewItemCount                   = 1,
	ShouldShowItemToast            = 2,
	DurabilityInitialized          = 3,
	DoNotShowSpawnParticles        = 4,
	FromRecoveredBackpack          = 5,
	FromGift                       = 6,
	PendingUpgradeCriteriaProgress = 7,
	OwnerBuildingHandle            = 8,
	FromDroppedPickup              = 9,
	JustCrafted                    = 10,
	CraftAndSlotTarget             = 11,
	GenericAttributeValueSet       = 12,
	PickupInstigatorHandle         = 13,
	EFortItemEntryState_MAX        = 14,
};

enum class EFortQuickBars : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Creative                       = 2,
	Max_None                       = 3,
	EFortQuickBars_MAX             = 4,
};

enum class EAthenaCustomizationCategory : uint8
{
	None                           = 0,
	Glider                         = 1,
	Pickaxe                        = 2,
	Hat                            = 3,
	Backpack                       = 4,
	Character                      = 5,
	LoadingScreen                  = 6,
	BattleBus                      = 7,
	VehicleDecoration              = 8,
	CallingCard                    = 9,
	MapMarker                      = 10,
	Dance                          = 11,
	ConsumableEmote                = 12,
	VictoryPose                    = 13,
	SkyDiveContrail                = 14,
	MusicPack                      = 15,
	ItemWrap                       = 16,
	PetSkin                        = 17,
	Charm                          = 18,
	RegCosmeticDef                 = 19,
	MAX                            = 20,
};

enum class EFortObjectiveStatus : uint8
{
	Created                        = 0,
	InProgress                     = 1,
	Succeeded                      = 2,
	Failed                         = 3,
	NeutralCompletion              = 4,
	Max_None                       = 5,
	EFortObjectiveStatus_MAX       = 6,
};

enum class EStatCategory : uint8
{
	Combat                         = 0,
	Building                       = 1,
	Utility                        = 2,
	Max_None                       = 3,
	EStatCategory_MAX              = 4,
};

enum class EFortResourceType : uint8
{
	Wood                           = 0,
	Stone                          = 1,
	Metal                          = 2,
	Permanite                      = 3,
	GoldCurrency                   = 4,
	None                           = 5,
	EFortResourceType_MAX          = 6,
};

enum class ERichPresenceStateChange : uint8
{
	AutoUpdate                     = 0,
	Idle                           = 1,
	Active                         = 2,
	Busy                           = 3,
	NotBusy                        = 4,
	ERichPresenceStateChange_MAX   = 5,
};

enum class ESubGame : uint8
{
	Campaign                       = 0,
	Athena                         = 1,
	Invalid                        = 2,
	Count                          = 2,
	ESubGame_MAX                   = 3,
};

enum class ELockOnState : uint8
{
	NoTarget                       = 0,
	TargetAcquired                 = 1,
	LockingOnToTarget              = 2,
	TargetLockedOn                 = 3,
	Cooldown                       = 4,
	COUNT                          = 5,
	ELockOnState_MAX               = 6,
};

enum class EStatRecordingPeriod : uint8
{
	Frame                          = 0,
	Minute                         = 1,
	AthenaSafeZonePhase            = 2,
	Life                           = 3,
	Map                            = 4,
	Campaign                       = 5,
	Persistent                     = 6,
	Max                            = 7,
};

enum class EStatMod : uint8
{
	Delta                          = 0,
	Set                            = 1,
	Maximum                        = 2,
	EStatMod_MAX                   = 3,
};

enum class EFortDamageZone : uint8
{
	Light                          = 0,
	Normal                         = 1,
	Critical                       = 2,
	Vulnerability                  = 3,
	Max                            = 4,
};

enum class EFortItemTier : uint8
{
	No_Tier                        = 0,
	I                              = 1,
	II                             = 2,
	III                            = 3,
	IV                             = 4,
	V                              = 5,
	VI                             = 6,
	VII                            = 7,
	VIII                           = 8,
	IX                             = 9,
	X                              = 10,
	NumItemTierValues              = 11,
	EFortItemTier_MAX              = 12,
};

enum class EFortResourceLevel : uint8
{
	First                          = 0,
	Second                         = 1,
	Third                          = 2,
	Fourth                         = 3,
	Fifth                          = 4,
	Sixth                          = 5,
	NumLevels                      = 6,
	Invalid                        = 7,
	EFortResourceLevel_MAX         = 8,
};

enum class EFortRequestedGameplayAction : uint8
{
	ContinuePlaying                = 0,
	StartPlaying                   = 1,
	StopPlaying                    = 2,
	EnterZone                      = 3,
	LeaveZone                      = 4,
	ReturnToMainMenu               = 5,
	QuitGame                       = 6,
	Invalid                        = 7,
	EFortRequestedGameplayAction_MAX = 8,
};

enum class EFortGameplayState : uint8
{
	NormalGameplay                 = 0,
	WaitingToStart                 = 1,
	EndOfZone                      = 2,
	EnteringZone                   = 3,
	LeavingZone                    = 4,
	Invalid                        = 5,
	EFortGameplayState_MAX         = 6,
};

enum class EBuildingHighlightType : uint8
{
	Primary                        = 0,
	Interact                       = 1,
	WillBeDestroyed                = 2,
	Quest                          = 3,
	MAX_None                       = 4,
	EBuildingHighlightType_MAX     = 5,
};

enum class EFortPawnStasisMode : uint8
{
	None                           = 0,
	NoMovement                     = 1,
	NoMovementOrTurning            = 2,
	NoMovementOrFalling            = 3,
	EFortPawnStasisMode_MAX        = 4,
};

enum class EFortJumpStaminaCost : uint8
{
	None                           = 0,
	Trigger                        = 1,
	SprintTrigger                  = 2,
	SprintAir                      = 3,
	EFortJumpStaminaCost_MAX       = 4,
};

enum class EFortPCTutorialCompletedState : uint8
{
	Unknown                        = 0,
	Incomplete                     = 1,
	Complete                       = 2,
	EFortPCTutorialCompletedState_MAX = 3,
};

enum class EFortCompletionResult : uint8
{
	Win                            = 0,
	Loss                           = 1,
	Draw                           = 2,
	Undefined                      = 3,
	EFortCompletionResult_MAX      = 4,
};

enum class EFortRewardActivityType : uint8
{
	General                        = 0,
	MissionPrimary                 = 1,
	MissionSecondary               = 2,
	AccountLevelUp                 = 3,
	Max_None                       = 4,
	EFortRewardActivityType_MAX    = 5,
};

enum class EFortDelayedQuickBarAction : uint8
{
	Add                            = 0,
	Remove                         = 1,
	Replace                        = 2,
	Invalid                        = 3,
	EFortDelayedQuickBarAction_MAX = 4,
};

enum class EFortElementalDamageType : uint8
{
	None                           = 0,
	Fire                           = 1,
	Ice                            = 2,
	Lightning                      = 3,
	Energy                         = 4,
	MAX                            = 5,
};

enum class EFortDamageNumberType : uint8
{
	None                           = 0,
	Pawn                           = 1,
	Building                       = 2,
	Player                         = 3,
	Shield                         = 4,
	Score                          = 5,
	DBNO                           = 6,
	EFortDamageNumberType_MAX      = 7,
};

enum class EFortCostInfoTypes : uint8
{
	Placement                      = 0,
	Repair                         = 1,
	Conversion                     = 2,
	Ability                        = 3,
	None                           = 4,
	EFortCostInfoTypes_MAX         = 5,
};

enum class EFortBuildPreviewMarkerOptionalAdjustment : uint8
{
	None                           = 0,
	FreeWallPieceOnTop             = 1,
	FreeWallPieceOnBottom          = 2,
	EFortBuildPreviewMarkerOptionalAdjustment_MAX = 3,
};

enum class ECreativeItemCategory : uint8
{
	Prefabs                        = 0,
	Devices                        = 1,
	Weapons                        = 2,
	Consumables                    = 3,
	Gallery                        = 4,
	None                           = 5,
	ECreativeItemCategory_MAX      = 6,
};

enum class EFortVoteArbitratorType : uint8
{
	Invalid                        = 0,
	Majority                       = 1,
	Unanimous                      = 2,
	EFortVoteArbitratorType_MAX    = 3,
};

enum class ELeecherStatus : uint8
{
	NotReady                       = 0,
	NonLeecher                     = 1,
	Leecher                        = 2,
	ELeecherStatus_MAX             = 3,
};

enum class EAthenaGamePhase : uint8
{
	None                           = 0,
	Setup                          = 1,
	Warmup                         = 2,
	Aircraft                       = 3,
	SafeZones                      = 4,
	EndGame                        = 5,
	Count                          = 6,
	EAthenaGamePhase_MAX           = 7,
};

enum class EAthenaGamePhaseStep : uint8
{
	None                           = 0,
	Setup                          = 1,
	Warmup                         = 2,
	GetReady                       = 3,
	BusLocked                      = 4,
	BusFlying                      = 5,
	StormForming                   = 6,
	StormHolding                   = 7,
	StormShrinking                 = 8,
	Countdown                      = 9,
	FinalCountdown                 = 10,
	EndGame                        = 11,
	Count                          = 12,
	EAthenaGamePhaseStep_MAX       = 13,
};

enum class EAthenaStormCapState : uint8
{
	None                           = 0,
	Clear                          = 1,
	Warning                        = 2,
	Damaging                       = 3,
	EAthenaStormCapState_MAX       = 4,
};

enum class EWaveRules : uint8
{
	KillAllEnemies                 = 0,
	Timed                          = 1,
	KillPoints                     = 2,
	KillSpecificEnemy              = 3,
	Mission                        = 4,
	EWaveRules_MAX                 = 5,
};

enum class EServerStability : uint8
{
	Stable                         = 0,
	LowUnstability                 = 1,
	HighUnstability                = 2,
	Count                          = 3,
	EServerStability_MAX           = 4,
};

enum class EAthenaAerialPhase : uint8
{
	None                           = 0,
	BusCantExit                    = 1,
	BusCanExit                     = 2,
	BusCanExitEndZebulonDrone      = 3,
	Skydiving                      = 4,
	Parachuting                    = 5,
	EAthenaAerialPhase_MAX         = 6,
};

enum class EFortPlaylistType : uint8
{
	Default                        = 0,
	Playground                     = 1,
	Creative                       = 2,
	Creative_LTM                   = 3,
	BattleLab                      = 4,
	EFortPlaylistType_MAX          = 5,
};

enum class EMapLocationStateType : uint8
{
	Normal                         = 0,
	Golden                         = 1,
	Undiscovered                   = 2,
	Max                            = 3,
};

enum class ESpawnMachineState : uint8
{
	Default                        = 0,
	WaitingForUse                  = 1,
	Active                         = 2,
	Complete                       = 3,
	OnCooldown                     = 4,
	ESpawnMachineState_MAX         = 5,
};

enum class ESafeZoneStartUp : uint8
{
	UseDefaultGameBehavior         = 0,
	StartsWithWarmUp               = 1,
	StartsWithAirCraft             = 2,
	StartsWithNoAirCraft           = 3,
	ESafeZoneStartUp_MAX           = 4,
};

enum class EEventTournamentRound : uint8
{
	Qualifiers                     = 0,
	SemiFinals                     = 1,
	Finals                         = 2,
	Unknown                        = 3,
	Arena                          = 4,
	EEventTournamentRound_MAX      = 5,
};

enum class EFriendlyFireType : uint8
{
	Off                            = 0,
	On                             = 1,
	EFriendlyFireType_MAX          = 2,
};

enum class EAirCraftBehavior : uint8
{
	Default                        = 0,
	OpposingAirCraftForEachTeam    = 1,
	FlyTowardFirstCircleCenter     = 2,
	NoAircraft                     = 3,
	EAirCraftBehavior_MAX          = 4,
};

enum class EFortReportDayPhase : uint8
{
	Dawn                           = 0,
	Dusk                           = 1,
	ZoneFinished                   = 2,
	PlayerLogout                   = 3,
	EFortReportDayPhase_MAX        = 4,
};

enum class EEndOfMatchReason : uint8
{
	LastManStanding                = 0,
	ScoreReached                   = 1,
	TimeRanOut                     = 2,
	WinEventOccurred               = 3,
	AllLoggedOut                   = 4,
	AllEliminated                  = 5,
	EEndOfMatchReason_MAX          = 6,
};

enum class EFortWorldMarkerType : uint8
{
	None                           = 0,
	Location                       = 1,
	Enemy                          = 2,
	Item                           = 3,
	SpecialLocal                   = 4,
	MAX                            = 5,
};

enum class EBuildingGameplayActorAircraftSpawnSide : uint8
{
	None                           = 0,
	Side1                          = 1,
	Side2                          = 2,
	EBuildingGameplayActorAircraftSpawnSide_MAX = 3,
};

enum class EForceKickAfterDeathMode : uint8
{
	Disabled                       = 0,
	KickAll                        = 1,
	KickPrivate                    = 2,
	EForceKickAfterDeathMode_MAX   = 3,
};

enum class ECapturePointState : uint8
{
	Idle                           = 0,
	Capturing                      = 1,
	Contested                      = 2,
	Resetting                      = 3,
	Captured                       = 4,
	Reset                          = 5,
	ECapturePointState_MAX         = 6,
};

enum class EBackupSaveState : uint8
{
	Ready                          = 0,
	InProgress                     = 1,
	OnCooldown                     = 2,
	EBackupSaveState_MAX           = 3,
};

enum class EPropertyOverrideTargetType : uint8
{
	None                           = 0,
	Default                        = 1,
	ImmutableTarget                = 2,
	EPropertyOverrideTargetType_MAX = 3,
};

enum class EHudVisibilityState : uint8
{
	FullyVisible                   = 0,
	FullyHidden                    = 1,
	GameOnly                       = 2,
	ReplayOnly                     = 3,
	MAX                            = 4,
};

enum class EFortReplayEventType : uint8
{
	Elimination                    = 0,
	Eliminated                     = 1,
	DBNO                           = 2,
	UserPlaced                     = 3,
	MAX                            = 4,
};

enum class ESpectatorCameraType : uint8
{
	ThirdPerson                    = 0,
	DroneFree                      = 1,
	Gameplay                       = 2,
	ReverseShot                    = 3,
	FollowShot                     = 4,
	DroneFollow                    = 5,
	DroneAttach                    = 6,
	BattleMap                      = 7,
	ARDrone                        = 8,
	MAX                            = 9,
};

enum class EFortMinigameState : uint8
{
	PreGame                        = 0,
	Setup                          = 1,
	Transitioning                  = 2,
	WaitingForCameras              = 3,
	Warmup                         = 4,
	InProgress                     = 5,
	PostGameTimeDilation           = 6,
	PostRoundEnd                   = 7,
	PostGameEnd                    = 8,
	PostGameAbandon                = 9,
	PostGameReset                  = 10,
	EFortMinigameState_MAX         = 11,
};

enum class ELockState : uint8
{
	INVALID                        = 0,
	UNLOCKED                       = 1,
	LOCKED                         = 2,
	ELockState_MAX                 = 3,
};

enum class EHeldObjectState : uint8
{
	Unheld                         = 0,
	Held                           = 1,
	Thrown                         = 2,
	Placed                         = 3,
	Dropped                        = 4,
	EHeldObjectState_MAX           = 5,
};

enum class ELinkToDirection : uint8
{
	Up                             = 0,
	Down                           = 1,
	Right                          = 2,
	Left                           = 3,
	Forward                        = 4,
	Backward                       = 5,
	ELinkToDirection_MAX           = 6,
};

enum class EFortHomingStyle : uint8
{
	None                           = 0,
	LockOn                         = 1,
	LaserTargeted                  = 2,
	LaserTargeted_NoTrace          = 3,
	DrunkArtillery                 = 4,
	EFortHomingStyle_MAX           = 5,
};

enum class ECaptureState : uint8
{
	Neutral                        = 0,
	Capturing                      = 1,
	Contested                      = 2,
	Disabled                       = 3,
	Decapturing                    = 4,
	Neutralizing                   = 5,
	Deneutralizing                 = 6,
	Captured                       = 7,
	ECaptureState_MAX              = 8,
};

enum class ECreativeKeyLockState : uint8
{
	LOCKED                         = 0,
	UNLOCKED                       = 1,
	INVALID                        = 2,
	ECreativeKeyLockState_MAX      = 3,
};

enum class EJoinInProgress : int32
{
	Spectate                       = 0,
	JoinImmediately                = -1,
	JoinOnNextRound                = 1,
	EJoinInProgress_MAX            = 2,
};

enum class EFortPrototypingStatus : uint8
{
	Unknown                        = 0,
	Disabled                       = 1,
	Enabled                        = 2,
	EFortPrototypingStatus_MAX     = 3,
};

enum class EFortQuestObjectiveStatEvent : uint8
{
	Kill                           = 0,
	TeamKill                       = 1,
	KillContribution               = 2,
	Damage                         = 3,
	SquadDamage                    = 4,
	Visit                          = 5,
	Land                           = 6,
	Emote                          = 7,
	Spray                          = 8,
	Toy                            = 9,
	Build                          = 10,
	BuildingEdit                   = 11,
	BuildingRepair                 = 12,
	BuildingUpgrade                = 13,
	PlaceTrap                      = 14,
	Complete                       = 15,
	Craft                          = 16,
	Collect                        = 17,
	Win                            = 18,
	Interact                       = 19,
	TeamInteract                   = 20,
	Destroy                        = 21,
	Ability                        = 22,
	WaveComplete                   = 23,
	Custom                         = 24,
	ComplexCustom                  = 25,
	Client                         = 26,
	AthenaRank                     = 27,
	AthenaOutlive                  = 28,
	RevivePlayer                   = 29,
	Heal                           = 30,
	EarnVehicleTrickPoints         = 31,
	VehicleAirTime                 = 32,
	TimeElapsed                    = 33,
	Death                          = 34,
	AthenaMarker                   = 35,
	PlacementUpdate                = 36,
	StormPhase                     = 37,
	DistanceTraveled               = 38,
	DownOrElim                     = 39,
	Accolade                       = 40,
	NumGameplayEvents              = 41,
	Acquire                        = 42,
	Consume                        = 43,
	OpenCardPack                   = 44,
	PurchaseCardPack               = 45,
	Convert                        = 46,
	Upgrade                        = 47,
	UpgradeRarity                  = 48,
	QuestComplete                  = 49,
	AssignWorker                   = 50,
	CollectExpedition              = 51,
	CollectSuccessfulExpedition    = 52,
	LevelUpCollectionBook          = 53,
	LevelUpAthenaSeason            = 54,
	LevelUpBattlePass              = 55,
	GainAthenaSeasonXp             = 56,
	HasItem                        = 57,
	HasAccumulatedItem             = 58,
	SlotInCollection               = 59,
	AlterationRespec               = 60,
	AlterationUpgrade              = 61,
	HasCompletedQuest              = 62,
	HasAssignedWorker              = 63,
	HasUpgraded                    = 64,
	HasConverted                   = 65,
	HasUpgradedRarity              = 66,
	HasLeveledUpCollectionBook     = 67,
	SlotHeroInLoadout              = 68,
	HasLeveledUpAthenaSeason       = 69,
	HasLeveledUpBattlePass         = 70,
	HasGainedAthenaSeasonXp        = 71,
	MinigameDynamicEvent           = 72,
	MinigameComplete               = 73,
	MinigameDeath                  = 74,
	MinigameAssist                 = 75,
	Max_None                       = 76,
	EFortQuestObjectiveStatEvent_MAX = 77,
};

enum class EFortMinigameEnd : uint8
{
	AbandonGame                    = 0,
	EndGame                        = 1,
	EndRound                       = 2,
	EFortMinigameEnd_MAX           = 3,
};

enum class EFortMissionVisibilityOverride : uint8
{
	Visible                        = 0,
	Invisible                      = 1,
	Max_None                       = 2,
	EFortMissionVisibilityOverride_MAX = 3,
};

enum class EMatchmakingCompleteResult : uint8
{
	NotStarted                     = 0,
	UpdateNeeded                   = 1,
	OutpostNotFound                = 2,
	Cancelled                      = 3,
	NoResults                      = 4,
	Failure                        = 5,
	CreateFailure                  = 6,
	Success                        = 7,
	EMatchmakingCompleteResult_MAX = 8,
};

enum class EMatchmakingState : uint8
{
	NotMatchmaking                 = 0,
	CancelingMatchmaking           = 1,
	ReleasingLock                  = 2,
	AcquiringLock                  = 3,
	LockAcquistionFailure          = 4,
	FindingEmptyServer             = 5,
	FindingExistingSession         = 6,
	TestingEmptyServers            = 7,
	TestingExistingSessions        = 8,
	JoiningExistingSession         = 9,
	NoMatchesAvailable             = 10,
	CleaningUpExisting             = 11,
	HandlingFailure                = 12,
	JoinSuccess                    = 13,
	EMatchmakingState_MAX          = 14,
};

enum class EAthenaPartyMemberReadyType : uint8
{
	Ready                          = 0,
	NotReady                       = 1,
	Playing                        = 2,
	Spectating                     = 3,
	WatchingReplay                 = 4,
	EAthenaPartyMemberReadyType_MAX = 5,
};

enum class EFortFriendRequestStatus : uint8
{
	None                           = 0,
	Accepted                       = 1,
	PendingReceived                = 2,
	PendingSent                    = 3,
	EFortFriendRequestStatus_MAX   = 4,
};

enum class EFortPartyMemberLocation : uint8
{
	PreLobby                       = 0,
	ConnectingToLobby              = 1,
	Lobby                          = 2,
	JoiningGame                    = 3,
	ProcessingRejoin               = 4,
	InGame                         = 5,
	Spectating                     = 6,
	WatchingReplay                 = 7,
	ReturningToFrontEnd            = 8,
	EFortPartyMemberLocation_MAX   = 9,
};

enum class EFortPartyState : uint8
{
	Undetermined                   = 0,
	WorldView                      = 1,
	TheaterView                    = 2,
	Matchmaking                    = 3,
	PostMatchmaking                = 4,
	ReturningToFrontEnd            = 5,
	BattleRoyaleView               = 6,
	BattleRoyalePreloading         = 7,
	BattleRoyaleMatchmaking        = 8,
	BattleRoyalePostMatchmaking    = 9,
	EFortPartyState_MAX            = 10,
};

enum class EFortPartyMemberDisplayState : uint8
{
	Open                           = 0,
	Connecting                     = 1,
	Connected                      = 2,
	Max                            = 3,
};

enum class ESpectateBlendEasing : uint8
{
	Linear                         = 0,
	EaseOutQuad                    = 1,
	ESpectateBlendEasing_MAX       = 2,
};

enum class EFortSpectatorBlendType : uint8
{
	None                           = 0,
	Orbit                          = 1,
	Default                        = 2,
	EFortSpectatorBlendType_MAX    = 3,
};

enum class ESpectatorSquadIdMode : uint8
{
	AlwaysOff                      = 0,
	AlwaysOn                       = 1,
	HoldToDisplay                  = 2,
	ESpectatorSquadIdMode_MAX      = 3,
};

enum class EPlayEventType : int32
{
	None                           = 0,
	TeamFlight                     = 1,
	Zone                           = 2,
	Elimination                    = 3,
	PlayerMoves                    = 4,
	SinglePlayerMove               = 5,
	ActorsPosition                 = 6,
	GameHighlights                 = 7,
	EPlayEventType_MAX             = 8,
};

enum class ECameraShotNotificationTypes : uint8
{
	Notification                   = 0,
	HighlightAnnotation            = 1,
	ECameraShotNotificationTypes_MAX = 2,
};

enum class EThirdPersonAutoFollowMode : uint8
{
	Off                            = 0,
	Auto                           = 1,
	Lazy                           = 2,
	EThirdPersonAutoFollowMode_MAX = 3,
};

enum class EFortPlayerSurveyAnswerContainerChangeReason : uint8
{
	AnswerChange                   = 0,
	QuestionChange                 = 1,
	ProxyChange                    = 2,
	EFortPlayerSurveyAnswerContainerChangeReason_MAX = 3,
};

enum class EFortPlayerSurveyFinishReason : uint8
{
	Submitted                      = 0,
	Canceled                       = 1,
	Disallowed                     = 2,
	EFortPlayerSurveyFinishReason_MAX = 3,
};

enum class ECollectionBookRewardType : uint8
{
	Uninitialized                  = 0,
	Book                           = 1,
	Page                           = 2,
	Section                        = 3,
	ECollectionBookRewardType_MAX  = 4,
};

enum class ECampaignCustomizationCategory : uint8
{
	None                           = 0,
	PersonalVehicle                = 1,
	ECampaignCustomizationCategory_MAX = 2,
};

enum class EFortDialogFeedbackType : uint8
{
	FriendRequestSent              = 0,
	FriendRequestReceived          = 1,
	FriendRequestAccepted          = 2,
	Default                        = 3,
	EFortDialogFeedbackType_MAX    = 4,
};

enum class EPontoonType : uint8
{
	None                           = 0,
	LeftTurn                       = 1,
	RightTurn                      = 2,
	CenterLine                     = 3,
	PushForce                      = 4,
	Nose                           = 5,
	EPontoonType_MAX               = 6,
};

enum class EFortWeaponOverheatState : uint8
{
	None                           = 0,
	Heating                        = 1,
	Cooling                        = 2,
	Overheated                     = 3,
	EFortWeaponOverheatState_MAX   = 4,
};

enum class EHitTraceRule : uint8
{
	Visibility                     = 0,
	Terrain                        = 1,
	None                           = 2,
	EHitTraceRule_MAX              = 3,
};

enum class ETransformationType : uint8
{
	Translation                    = 0,
	Rotation                       = 1,
	Scale                          = 2,
	None                           = 3,
	ETransformationType_MAX        = 4,
};

enum class EScaleAxis : uint8
{
	All                            = 0,
	X                              = 1,
	Y                              = 2,
	Z                              = 3,
	EScaleAxis_MAX                 = 4,
};

enum class ESelectionProperty : uint8
{
	SingleObject                   = 0,
	MultipleObjects                = 1,
	MultipleObjectsMoveOnGrid      = 2,
	None                           = 3,
	ESelectionProperty_MAX         = 4,
};

enum class EDualWeaponHand : uint8
{
	LEFT                           = 0,
	RIGHT                          = 1,
	MAX                            = 2,
};

enum class EFortEncounterDirection : uint8
{
	North                          = 0,
	NorthEast                      = 1,
	East                           = 2,
	SouthEast                      = 3,
	South                          = 4,
	SouthWest                      = 5,
	West                           = 6,
	NorthWest                      = 7,
	Max_None                       = 8,
	EFortEncounterDirection_MAX    = 9,
};

enum class EItemWrapMaterialType : uint8
{
	WeaponWrap                     = 0,
	VehicleWrap_Opaque             = 1,
	VehicleWrap_Masked             = 2,
	EItemWrapMaterialType_MAX      = 3,
};

enum class EAIHotSpotAssignmentFilter : uint8
{
	All                            = 0,
	WithSlots                      = 1,
	WaitingList                    = 2,
	EAIHotSpotAssignmentFilter_MAX = 3,
};

enum class EAIHotSpotSlotFilter : uint8
{
	All                            = 0,
	AvailableOnly                  = 1,
	UnavailableOnly                = 2,
	EAIHotSpotSlotFilter_MAX       = 3,
};

enum class EAIHotSpotSlot : uint8
{
	Free                           = 0,
	Claimed                        = 1,
	Occupied                       = 2,
	Blocked                        = 3,
	Disabled                       = 4,
	EAIHotSpotSlot_MAX             = 5,
};

enum class EBoundingBoxSlotDirectionCalculation : uint8
{
	Auto                           = 0,
	FaceWall                       = 1,
	FaceAwayFromWall               = 2,
	FaceCenter                     = 3,
	EBoundingBoxSlotDirectionCalculation_MAX = 4,
};

enum class EBarrierFlagState : uint8
{
	FlagUp                         = 0,
	FlagDown                       = 1,
	EBarrierFlagState_MAX          = 2,
};

enum class EBarrierState : uint8
{
	BarrierUp                      = 0,
	BarrierComingDown              = 1,
	BarrierDown                    = 2,
	EBarrierState_MAX              = 3,
};

enum class EAthenaBroadcastKillFeedEntryType : uint8
{
	Elimination                    = 0,
	Storm                          = 1,
	FallDamage                     = 2,
	Explosion                      = 3,
	DBNO                           = 4,
	EAthenaBroadcastKillFeedEntryType_MAX = 5,
};

enum class ECapturePointUnlockRules : uint8
{
	Reset                          = 0,
	MaintainState                  = 1,
	ResetDeactivate                = 2,
	ECapturePointUnlockRules_MAX   = 3,
};

enum class EContentionRuleType : uint8
{
	MajorityWins                   = 0,
	OneTeamOnlyWins                = 1,
	EContentionRuleType_MAX        = 2,
};

enum class EAthenaPIEStartupMode : uint8
{
	UseDefaults                    = 0,
	Warmup                         = 1,
	WarmupPaused                   = 2,
	Aircraft                       = 3,
	AircraftPaused                 = 4,
	Gameplay                       = 5,
	EAthenaPIEStartupMode_MAX      = 6,
};

enum class EEventTokenType : uint8
{
	Invite                         = 0,
	Creation                       = 1,
	EEventTokenType_MAX            = 2,
};

enum class EGoosePickupState : uint8
{
	None                           = 0,
	Falling                        = 1,
	Deployed                       = 2,
	ImpactedByPlane                = 3,
	DeployTimerUp                  = 4,
	EGoosePickupState_MAX          = 5,
};

enum class EItemWrapSectionNames : uint8
{
	Section_0                      = 0,
	Section_1                      = 1,
	Section_2                      = 2,
	Section_3                      = 3,
	Section_4                      = 4,
	Section_5                      = 5,
	Section_6                      = 6,
	Section_7                      = 7,
	Section_8                      = 8,
	Section_9                      = 9,
	Section_10                     = 10,
	Section_11                     = 11,
	Section_12                     = 12,
	Section_13                     = 13,
	Section_14                     = 14,
	Section_15                     = 15,
	Section_16                     = 16,
	Section_17                     = 17,
	Section_18                     = 18,
	Section_19                     = 19,
	Section_20                     = 20,
	Section_21                     = 21,
	Section_22                     = 22,
	Section_23                     = 23,
	Section_24                     = 24,
	Section_25                     = 25,
	Section_26                     = 26,
	Section_27                     = 27,
	Section_28                     = 28,
	Section_29                     = 29,
	Section_30                     = 30,
	Section_31                     = 31,
	Section_MAX                    = 32,
};

enum class ECancelMarkerReason : int32
{
	Ping                           = 0,
	MapOrDeath                     = 1,
	ECancelMarkerReason_MAX        = 2,
};

enum class EInBoundsState : uint8
{
	NoBounds                       = 0,
	NotInBounds                    = 1,
	InBounds                       = 2,
	EInBoundsState_MAX             = 3,
};

enum class EAthenaQuickChatFilteringType : uint8
{
	AlwaysVisible                  = 0,
	ActiveMaterial                 = 1,
	FacingPickup                   = 2,
	ActiveHotbarItem               = 3,
	ActiveHotbarItemAmmo           = 4,
	FacingPickupOrActiveHotbarItem = 5,
	NoWeaponEquippedRequiringAmmo  = 6,
	WeaponEquippedOfAmmoType       = 7,
	EAthenaQuickChatFilteringType_MAX = 8,
};

enum class EAthenaSeasonRewardTrack : uint8
{
	Invalid                        = 0,
	SeasonProgressionTrack         = 1,
	CompendiumFreeTrack            = 2,
	CompendiumPaidTrack            = 3,
	EAthenaSeasonRewardTrack_MAX   = 4,
};

enum class EAthenaRewardVisualImportanceType : uint8
{
	Normal                         = 0,
	Hot                            = 1,
	CrazyHot                       = 2,
	EAthenaRewardVisualImportanceType_MAX = 3,
};

enum class EAthenaRewardItemType : uint8
{
	Normal                         = 0,
	HiddenReward                   = 1,
	GiftboxHiddenReward            = 2,
	NonExportedFakeReward          = 3,
	EAthenaRewardItemType_MAX      = 4,
};

enum class EAthenaChallengeTabVisibility : uint8
{
	Hide                           = 0,
	ShowAlways                     = 1,
	EAthenaChallengeTabVisibility_MAX = 2,
};

enum class EAthenaSeasonShopVisibility : uint8
{
	Hide                           = 0,
	ShowIfOffersAvailable          = 1,
	ShowAlways                     = 2,
	EAthenaSeasonShopVisibility_MAX = 3,
};

enum class EBattlePassRewardSource : uint8
{
	None                           = 0,
	ChallengeBundle                = 1,
	Quest                          = 2,
	EBattlePassRewardSource_MAX    = 3,
};

enum class ETraversePointState : uint8
{
	None                           = 0,
	Hidden                         = 1,
	Active                         = 2,
	TouchedByPlayer                = 3,
	Finished                       = 4,
	ETraversePointState_MAX        = 5,
};

enum class EFortVehicleDecoType : uint8
{
	Unknown                        = 0,
	Flag                           = 1,
	HoodOrnament                   = 2,
	Wings                          = 3,
	EFortVehicleDecoType_MAX       = 4,
};

enum class EWrapPreviewCamera : uint8
{
	Weapon                         = 0,
	LargeWeapon                    = 1,
	Vehicle                        = 2,
	EWrapPreviewCamera_MAX         = 3,
};

enum class EAutoFrameMode : uint8
{
	Off                            = 0,
	ManualOverride                 = 1,
	AutoFrame                      = 2,
	EAutoFrameMode_MAX             = 3,
};

enum class EBacchusHUDStateType : uint8
{
	DoNothing                      = 0,
	Hide                           = 1,
	Show                           = 2,
	FallbackToDefault              = 3,
	EBacchusHUDStateType_MAX       = 4,
};

enum class EBattleMapHoveredReason : int32
{
	None                           = 0,
	Mouse                          = 1,
	Code                           = 2,
	BattleMapHoveredReason_MAX     = 3,
};

enum class ECalendarDrivenState : uint8
{
	ForceEnable                    = 0,
	ForceDisable                   = 1,
	ECalendarDrivenState_MAX       = 2,
};

enum class EBinaryToggleValues : uint8
{
	BTV_Active                     = 0,
	BTV_Inactive                   = 1,
	BTV_Either                     = 2,
	BTV_MAX                        = 3,
};

enum class EAuxIndicatorStates : uint8
{
	AIS_GuidingArrow               = 0,
	AIS_ConfirmedArrow             = 1,
	AIS_Inactive                   = 2,
	AIS_Active                     = 3,
	AIS_MAX                        = 4,
};

enum class EDynamicFoundationEnabledState : uint8
{
	Unknown                        = 0,
	Enabled                        = 1,
	Disabled                       = 2,
	EDynamicFoundationEnabledState_MAX = 3,
};

enum class EDynamicFoundationType : uint8
{
	Static                         = 0,
	StartEnabled_Stationary        = 1,
	StartEnabled_Dynamic           = 2,
	StartDisabled                  = 3,
	EDynamicFoundationType_MAX     = 4,
};

enum class EBuildingFoundationType : uint8
{
	BFT_3x3                        = 0,
	BFT_5x5                        = 1,
	BFT_5x10                       = 2,
	BFT_None                       = 3,
	BFT_MAX                        = 4,
};

enum class ESpawnMachineSubTextState : uint8
{
	NoCards                        = 0,
	VanInUse                       = 1,
	None                           = 2,
	ESpawnMachineSubTextState_MAX  = 3,
};

enum class EFortItemCollectorTrackingType : uint8
{
	Player                         = 0,
	Team                           = 1,
	EFortItemCollectorTrackingType_MAX = 2,
};

enum class EFortItemCollectorBehavior : uint8
{
	FirstToGoal                    = 0,
	FreeForAll                     = 1,
	EFortItemCollectorBehavior_MAX = 2,
};

enum class EFortItemCollectorState : uint8
{
	CanInteract                    = 0,
	Active                         = 1,
	Inactive                       = 2,
	Captured                       = 3,
	Invalid                        = 4,
	EFortItemCollectorState_MAX    = 5,
};

enum class EFortWeaponUpgradeDirection : uint8
{
	NotSet                         = 0,
	Vertical                       = 1,
	Horizontal                     = 2,
	EFortWeaponUpgradeDirection_MAX = 3,
};

enum class EFortWeaponUpgradeCosts : uint8
{
	NotSet                         = 0,
	WoodUncommon                   = 1,
	WoodRare                       = 2,
	WoodVeryRare                   = 3,
	WoodSuperRare                  = 4,
	MetalUncommon                  = 5,
	MetalRare                      = 6,
	MetalVeryRare                  = 7,
	MetalSuperRare                 = 8,
	BrickUncommon                  = 9,
	BrickRare                      = 10,
	BrickVeryRare                  = 11,
	BrickSuperRare                 = 12,
	HorizontalWoodCommon           = 13,
	HorizontalWoodUncommon         = 14,
	HorizontalWoodRare             = 15,
	HorizontalWoodVeryRare         = 16,
	HorizontalWoodSuperRare        = 17,
	HorizontalMetalCommon          = 18,
	HorizontalMetalUncommon        = 19,
	HorizontalMetalRare            = 20,
	HorizontalMetalVeryRare        = 21,
	HorizontalMetalSuperRare       = 22,
	HorizontalBrickCommon          = 23,
	HorizontalBrickUncommon        = 24,
	HorizontalBrickRare            = 25,
	HorizontalBrickVeryRare        = 26,
	HorizontalBrickSuperRare       = 27,
	EFortWeaponUpgradeCosts_MAX    = 28,
};

enum class EFortWeaponUpgradeInteractionResult : uint8
{
	Upgradable                     = 0,
	NotEnoughResources             = 1,
	CannotUpgrade                  = 2,
	CannotInteract                 = 3,
	EFortWeaponUpgradeInteractionResult_MAX = 4,
};

enum class ELayoutRequirementStatus : uint8
{
	Inactive_Invisible             = 0,
	Active_Invisible               = 1,
	Active_Visible                 = 2,
	ELayoutRequirementStatus_MAX   = 3,
};

enum class ECaptureAreaItemFilters : uint8
{
	None                           = 0,
	Both                           = 1,
	ForPeriodicScoring             = 2,
	ToTakeControl                  = 3,
	ECaptureAreaItemFilters_MAX    = 4,
};

enum class EPlayerCaptureKnobOptions : uint8
{
	Off                            = 0,
	EachPlayer                     = 1,
	OnePlayerPerTeam               = 2,
	OwningTeam                     = 3,
	EPlayerCaptureKnobOptions_MAX  = 4,
};

enum class ECreativeVendingMachineState : uint8
{
	DisplayingItem                 = 0,
	AcceptingItem                  = 1,
	AcceptedItem                   = 2,
	RejectedItem                   = 3,
	ECreativeVendingMachineState_MAX = 4,
};

enum class EMusicTrackPlayback : uint8
{
	Disabled                       = 0,
	Enabled                        = 1,
	EMusicTrackPlayback_MAX        = 2,
};

enum class ERiftCosmeticState : uint8
{
	None                           = 0,
	Intro                          = 1,
	Idle                           = 2,
	RampUp                         = 3,
	ShouldDie                      = 4,
	ERiftCosmeticState_MAX         = 5,
};

enum class EFortRiftSpawnSlotSelectionMode : uint8
{
	Random                         = 0,
	BestScore                      = 1,
	EFortRiftSpawnSlotSelectionMode_MAX = 2,
};

enum class EFortRiftSlotStatus : uint8
{
	Reserved                       = 0,
	Occupied                       = 1,
	Max_None                       = 2,
	EFortRiftSlotStatus_MAX        = 3,
};

enum class EBuildingNavObstacleType : uint8
{
	UnwalkableAll                  = 0,
	UnwalkableHuskOnly             = 1,
	SmashWhenLowHeight             = 2,
	SmashOnlyLowHeight             = 3,
	SmashSmasherOnly               = 4,
	SmashAll                       = 5,
	EBuildingNavObstacleType_MAX   = 6,
};

enum class EFortDamageVisualsState : uint8
{
	UnDamaged                      = 0,
	DamagedAndAnimating            = 1,
	DamagedAndStatic               = 2,
	EFortDamageVisualsState_MAX    = 3,
};

enum class EStructuralSupportCheck : uint8
{
	Stable                         = 0,
	Unstable                       = 1,
	Max_None                       = 2,
	EStructuralSupportCheck_MAX    = 3,
};

enum class ESavedSupportStatus : uint8
{
	UnknownState                   = 0,
	Supported                      = 1,
	UnSupported                    = 2,
	ESavedSupportStatus_MAX        = 3,
};

enum class EPlacementType : uint8
{
	Free                           = 0,
	Grid                           = 1,
	None                           = 2,
	EPlacementType_MAX             = 3,
};

enum class EBuildingAttachmentSide : uint8
{
	Front                          = 0,
	Back                           = 1,
	Any                            = 2,
	EBuildingAttachmentSide_MAX    = 3,
};

enum class EBuildingAttachmentSlot : uint8
{
	SLOT_Floor                     = 0,
	SLOT_Wall                      = 1,
	SLOT_Ceiling                   = 2,
	SLOT_None                      = 3,
	SLOT_MAX                       = 4,
};

enum class EBuildingAnim : uint8
{
	EBA_None                       = 0,
	EBA_Building                   = 1,
	EBA_Breaking                   = 2,
	EBA_Destruction                = 3,
	EBA_Placement                  = 4,
	EBA_DynamicLOD                 = 5,
	EBA_DynamicShrink              = 6,
	EBA_MAX                        = 7,
};

enum class EStructuralFloorPosition : uint8
{
	Top                            = 0,
	Bottom                         = 1,
	EStructuralFloorPosition_MAX   = 2,
};

enum class EStructuralWallPosition : uint8
{
	Left                           = 0,
	Right                          = 1,
	Front                          = 2,
	Back                           = 3,
	EStructuralWallPosition_MAX    = 4,
};

enum class EFortDefenderInteractionError : uint8
{
	None                           = 0,
	Obstructed                     = 1,
	NoEditPermission               = 2,
	UsedByAnotherPlayer            = 3,
	EFortDefenderInteractionError_MAX = 4,
};

enum class EFortBounceType : uint8
{
	Hit                            = 0,
	Interact                       = 1,
	EditPlaced                     = 2,
	EFortBounceType_MAX            = 3,
};

enum class EFortConnectivityCubeFace : uint8
{
	Front                          = 0,
	Left                           = 1,
	Back                           = 2,
	Right                          = 3,
	Upper                          = 4,
	Lower                          = 5,
	MAX                            = 6,
};

enum class EFortDecoPlacementQueryResults : uint8
{
	CanAdd                         = 0,
	ExistingTrap                   = 1,
	ExistingObject                 = 2,
	Obstructed                     = 3,
	NoLocation                     = 4,
	WrongType                      = 5,
	WrongShape                     = 6,
	BeingModified                  = 7,
	WrongTeam                      = 8,
	BlueprintFailure               = 9,
	AbilityFailure                 = 10,
	RequiresPlayerBuildableActor   = 11,
	NoEditPermission               = 12,
	WrongZone                      = 13,
	EFortDecoPlacementQueryResults_MAX = 14,
};

enum class EFortStructuralGridQueryResults : uint8
{
	CanAdd                         = 0,
	ExistingActor                  = 1,
	Obstructed                     = 2,
	NoStructuralSupport            = 3,
	InvalidActor                   = 4,
	ReachedLimit                   = 5,
	NoEditPermission               = 6,
	PatternNotPermittedByLayoutRequirement = 7,
	ResourceTypeNotPermittedByLayoutRequirement = 8,
	BuildingAtRequirementsDisabled = 9,
	BuildingOtherThanRequirementsDisabled = 10,
	EFortStructuralGridQueryResults_MAX = 11,
};

enum class EFortBuildingState : uint8
{
	Placement                      = 0,
	EditMode                       = 1,
	None                           = 2,
	EFortBuildingState_MAX         = 3,
};

enum class EFortTextureDataSlot : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Tertiary                       = 2,
	Fourth                         = 3,
	NumSlots                       = 4,
	EFortTextureDataSlot_MAX       = 5,
};

enum class EFortTextureDataType : uint8
{
	Any                            = 0,
	OuterWall                      = 1,
	InnerWall                      = 2,
	Corner                         = 3,
	Floor                          = 4,
	Ceiling                        = 5,
	Trim                           = 6,
	Roof                           = 7,
	Pillar                         = 8,
	Shingle                        = 9,
	None                           = 10,
	EFortTextureDataType_MAX       = 11,
};

enum class EBuildingAttachmentType : uint8
{
	ATTACH_Floor                   = 0,
	ATTACH_Wall                    = 1,
	ATTACH_Ceiling                 = 2,
	ATTACH_Corner                  = 3,
	ATTACH_All                     = 4,
	ATTACH_WallThenFloor           = 5,
	ATTACH_FloorAndStairs          = 6,
	ATTACH_CeilingAndStairs        = 7,
	ATTACH_None                    = 8,
	ATTACH_MAX                     = 9,
};

enum class EDoorOpenStyle : uint8
{
	Open                           = 0,
	SlamOpen                       = 1,
	SmashOpen                      = 2,
	Close                          = 3,
	EDoorOpenStyle_MAX             = 4,
};

enum class ESmoothProgressState : uint8
{
	Enabled                        = 0,
	DisabledByForceProgress        = 1,
	DisabledByState                = 2,
	ESmoothProgressState_MAX       = 3,
};

enum class ECreativeMinimapComponentIconColorType : uint8
{
	None                           = 0,
	White                          = 1,
	Red                            = 2,
	Orange                         = 3,
	Yellow                         = 4,
	Green                          = 5,
	Teal                           = 6,
	Blue                           = 7,
	Purple                         = 8,
	ECreativeMinimapComponentIconColorType_MAX = 9,
};

enum class EShowProgressMode : uint8
{
	Total                          = 0,
	Remaining                      = 1,
	Off                            = 2,
	MAX                            = 3,
};

enum class ECreativeQuestSharing : uint8
{
	Individual                     = 0,
	Team                           = 1,
	All                            = 2,
	MAX                            = 3,
};

enum class ECreativeQuestStat : uint8
{
	None                           = 0,
	Eliminations                   = 1,
	Eliminated                     = 2,
	Score                          = 3,
	MAX                            = 4,
};

enum class EAccessoryColorName : uint8
{
	EAccessoryColorName_AccessoryColor1 = 0,
	EAccessoryColorName_AccessoryColor2 = 1,
	EAccessoryColorName_AccessoryColor3 = 2,
	EAccessoryColorName_NumTypes   = 3,
	EAccessoryColorName_MAX        = 4,
};

enum class ECustomHatType : uint8
{
	ECustomHatType_None            = 0,
	ECustomHatType_Cap             = 1,
	ECustomHatType_Helmet          = 2,
	ECustomHatType_Mask            = 3,
	ECustomHatType_Hat             = 4,
	ECustomHatType_HeadReplacement = 5,
	ECustomHatType_MAX             = 6,
};

enum class EClothingColorName : uint8
{
	EClothingColorName_AccessoryColor1 = 0,
	EClothingColorName_AccessoryColor2 = 1,
	EClothingColorName_NumTypes    = 2,
	EClothingColorName_MAX         = 3,
};

enum class EColorSwatchType : uint8
{
	EColorSwatchType_Skin          = 0,
	EColorSwatchType_Hair          = 1,
	EColorSwatchType_BodyAccessory = 2,
	EColorSwatchType_Accessory     = 3,
	EColorSwatchType_NumTypes      = 4,
	EColorSwatchType_MAX           = 5,
};

enum class ECharacterColorSwatchType : uint8
{
	ECharacterColorSwatchType_Skin = 0,
	ECharacterColorSwatchType_Hair = 1,
	ECharacterColorSwatchType_NumTypes = 2,
	ECharacterColorSwatchType_MAX  = 3,
};

enum class EDadBroHealthType : uint8
{
	None                           = 0,
	Weakpoints                     = 1,
	Horn                           = 2,
	Guy                            = 3,
	EDadBroHealthType_MAX          = 4,
};

enum class EDeployableBaseConstructionStatus : uint8
{
	Constructing                   = 0,
	Destroying                     = 1,
	Finished                       = 2,
	EDeployableBaseConstructionStatus_MAX = 3,
};

enum class EDeployableBaseBuildingState : uint8
{
	Empty                          = 0,
	Built                          = 1,
	Unoccupied                     = 2,
	WaitingToBuild                 = 3,
	Building                       = 4,
	WaitingToDestroy               = 5,
	Destroying                     = 6,
	WaitingToReset                 = 7,
	Resetting                      = 8,
	EDeployableBaseBuildingState_MAX = 9,
};

enum class EDeployableBaseBoxType : uint8
{
	BuildSpace                     = 0,
	SaveSpace                      = 1,
	PlotSpace                      = 2,
	NumSpaceTypes                  = 3,
	EDeployableBaseBoxType_MAX     = 4,
};

enum class EFortSharedAnimationState : uint8
{
	Anim_Walk                      = 0,
	Anim_Run                       = 1,
	Anim_Turn                      = 2,
	Anim_Attack                    = 3,
	Anim_Death                     = 4,
	Anim_Knockback                 = 5,
	Anim_FullBodyHit               = 6,
	Anim_Pushed                    = 7,
	Anim_Dance                     = 8,
	Anim_Idle                      = 9,
	Anim_RangedAttack              = 10,
	Anim_MAX                       = 11,
};

enum class EFortStatDisplayType : uint8
{
	Category                       = 0,
	Buff                           = 1,
	Debuff                         = 2,
	Neutral                        = 3,
	DoNotDisplay                   = 4,
	EFortStatDisplayType_MAX       = 5,
};

enum class EFortAbilityTargetSelectionUsage : uint8
{
	BothTargetingAndCanHit         = 0,
	OnlyTargeting                  = 1,
	OnlyCanHit                     = 2,
	EFortAbilityTargetSelectionUsage_MAX = 3,
};

enum class EFortDirectedMovementSpace : uint8
{
	WorldSpace                     = 0,
	ActorLocRelative               = 1,
	ActorLocRotRelative            = 2,
	CameraRelative                 = 3,
	EFortDirectedMovementSpace_MAX = 4,
};

enum class EFortAbilityTargetDataPolicy : uint8
{
	ReplicateToServer              = 0,
	SimulateOnServer               = 1,
	EFortAbilityTargetDataPolicy_MAX = 2,
};

enum class EFortAccoladeType : uint8
{
	Acknowledgement                = 0,
	Accolade                       = 1,
	Medal                          = 2,
	EFortAccoladeType_MAX          = 3,
};

enum class EDespawnAIType : uint8
{
	Relevancy                      = 0,
	Distance                       = 1,
	EDespawnAIType_MAX             = 2,
};

enum class EFortEncounterUtilityDesire : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	VeryHigh                       = 3,
	Max_None                       = 4,
	EFortEncounterUtilityDesire_MAX = 5,
};

enum class EFortAIDirectorFactorContribution : uint8
{
	Direct                         = 0,
	Inverse                        = 1,
	EFortAIDirectorFactorContribution_MAX = 2,
};

enum class EFortAIDirectorEventContribution : uint8
{
	Increment                      = 0,
	Set                            = 1,
	EFortAIDirectorEventContribution_MAX = 2,
};

enum class EFortAIWaveProgressSection : uint8
{
	SectionOne                     = 0,
	SectionTwo                     = 1,
	Max_None                       = 2,
	EFortAIWaveProgressSection_MAX = 3,
};

enum class EFortEncounterState : uint8
{
	Uninitialized                  = 0,
	InitializingProperties         = 1,
	InitializingRiftManager        = 2,
	AwaitingActivation             = 3,
	Active                         = 4,
	ReplacingRifts                 = 5,
	Max_None                       = 6,
	EFortEncounterState_MAX        = 7,
};

enum class EFortEncounterPacingState : uint8
{
	Ramp                           = 0,
	Peak                           = 1,
	Fade                           = 2,
	Rest                           = 3,
	Max_None                       = 4,
	EFortEncounterPacingState_MAX  = 5,
};

enum class EFortEncounterSequenceResult : uint8
{
	Success                        = 0,
	FailedEncounterInProgress      = 1,
	Failed                         = 2,
	EFortEncounterSequenceResult_MAX = 3,
};

enum class EAssignmentCreationResult : uint8
{
	AssignmentNotFoundOrCreated    = 0,
	AssignmentCreated              = 1,
	AssignmentFound                = 2,
	EAssignmentCreationResult_MAX  = 3,
};

enum class ETagGoalScoringCategory : uint8
{
	Ignore                         = 0,
	HighInterest                   = 1,
	NumCategories                  = 2,
	ETagGoalScoringCategory_MAX    = 3,
};

enum class EFortAIPawnGender : uint8
{
	FAPG_Default                   = 0,
	FAPG_Female                    = 1,
	FAPG_Male                      = 2,
	FAPG_MAX                       = 3,
};

enum class EFortAILevelRatingDisplayType : uint8
{
	DisplayRatingBasedOnDifficulty = 0,
	DisplayAIDifficultyAsRating    = 1,
	DontDisplayRating              = 2,
	EFortAILevelRatingDisplayType_MAX = 3,
};

enum class EFortressAIType : uint8
{
	FAT_Dormant                    = 0,
	FAT_Cleaner                    = 1,
	FAT_DayWanderer                = 2,
	FAT_NightWanderer              = 3,
	FAT_DebugOnly                  = 4,
	FAT_Encounter                  = 5,
	FAT_MAX                        = 6,
};

enum class ECorePerceptionTypes : uint8
{
	Sight                          = 0,
	Hearing                        = 1,
	Damage                         = 2,
	Touch                          = 3,
	Team                           = 4,
	Prediction                     = 5,
	MAX                            = 6,
};

enum class ETargetDistanceComparisonType : uint8
{
	TwoDimensions                  = 0,
	ThreeDimensions                = 1,
	CollisionHalfHeightMultiplier  = 2,
	ETargetDistanceComparisonType_MAX = 3,
};

enum class EFortPartialPathUsage : uint8
{
	Always                         = 0,
	OnlyGoalsOnDestructible        = 1,
	Never                          = 2,
	EFortPartialPathUsage_MAX      = 3,
};

enum class EHotspotTypeConfigMode : uint8
{
	AlwaysAdd                      = 0,
	WhenNotDefined                 = 1,
	WhenNotValid                   = 2,
	EHotspotTypeConfigMode_MAX     = 3,
};

enum class EFortHotSpotPreview : uint8
{
	None                           = 0,
	Smashing                       = 1,
	Shooting                       = 2,
	EFortHotSpotPreview_MAX        = 3,
};

enum class EFortHotSpotDirection : uint8
{
	PositiveX                      = 0,
	NegativeX                      = 1,
	PositiveY                      = 2,
	NegativeY                      = 3,
	PositiveZ                      = 4,
	NegativeZ                      = 5,
	Any                            = 6,
	EFortHotSpotDirection_MAX      = 7,
};

enum class EFortHotSpotSlot : uint8
{
	Melee                          = 0,
	MeleeHuge                      = 1,
	Ranged                         = 2,
	None                           = 3,
	EFortHotSpotSlot_MAX           = 4,
};

enum class EBuildingFloorRailing : uint8
{
	None                           = 0,
	Balcony                        = 1,
	EBuildingFloorRailing_MAX      = 2,
};

enum class EBuildingStairsRailing : uint8
{
	None                           = 0,
	Partial                        = 1,
	Full                           = 2,
	EBuildingStairsRailing_MAX     = 3,
};

enum class EBuildingWallArea : uint8
{
	Regular                        = 0,
	Flat                           = 1,
	Special                        = 2,
	EBuildingWallArea_MAX          = 3,
};

enum class EAssignmentType : uint8
{
	Invalid                        = 0,
	Encounter                      = 1,
	World                          = 2,
	Enemy                          = 3,
	NumAssignmentTypes             = 4,
	EAssignmentType_MAX            = 5,
};

enum class EFortAILODLevel : uint8
{
	Invalid                        = 0,
	Lowest                         = 1,
	Lower                          = 2,
	BelowNormal                    = 3,
	Normal                         = 4,
	AboveNormal                    = 5,
	MAX                            = 6,
};

enum class EFortAnalyticsClientEngagementEventType : uint8
{
	None                           = 0,
	DamageReceivedFromPlayerPawn   = 1,
	DamageDealtToPlayerPawn        = 2,
	DamageDealtToPlayerBuild       = 3,
	DamageDealtToOther             = 4,
	EngagementTimeout              = 5,
	PlayerWon                      = 6,
	PlayerDeathOnWin               = 7,
	TeamWon                        = 8,
	TeamLost                       = 9,
	PlayerLost                     = 10,
	PlayerKilledPlayer             = 11,
	PlayerFiredWeapon              = 12,
	ManagerStopped                 = 13,
	PlayerPawnDied                 = 14,
	PlayerPawnSpawned              = 15,
	Count                          = 16,
	EFortAnalyticsClientEngagementEventType_MAX = 17,
};

enum class EAlphaFromDeltaTypes : uint8
{
	TranslationX                   = 0,
	TranslationY                   = 1,
	TranslationZ                   = 2,
	Scale                          = 3,
	ScaleX                         = 4,
	ScaleY                         = 5,
	ScaleZ                         = 6,
	EulerX                         = 7,
	EulerY                         = 8,
	EulerZ                         = 9,
	QuaternionTwist                = 10,
	EAlphaFromDeltaTypes_MAX       = 11,
};

enum class ESkydivingDirection : uint8
{
	Center                         = 0,
	Right                          = 1,
	Left                           = 2,
	Forward                        = 3,
	Back                           = 4,
	ESkydivingDirection_MAX        = 5,
};

enum class EAnimRelaxedState : uint8
{
	None                           = 0,
	WeaponRaised                   = 1,
	RelaxedLevel1                  = 2,
	RelaxedLevel2                  = 3,
	EAnimRelaxedState_MAX          = 4,
};

enum class ESourceSelectionMode : uint8
{
	MaxDifference                  = 0,
	ESourceSelectionMode_MAX       = 1,
};

enum class ESpeedWarpingAxisMode : uint8
{
	IKFootRootLocalX               = 0,
	IKFootRootLocalY               = 1,
	IKFootRootLocalZ               = 2,
	WorldSpaceVectorInput          = 3,
	ComponentSpaceVectorInput      = 4,
	ActorSpaceVectorInput          = 5,
	ESpeedWarpingAxisMode_MAX      = 6,
};

enum class EMontageInterrupt : uint8
{
	Any                            = 0,
	RootMotionOnly                 = 1,
	None                           = 2,
	EMontageInterrupt_MAX          = 3,
};

enum class EDeimosAnimState : uint8
{
	Idle                           = 0,
	Running                        = 1,
	Attack                         = 2,
	Dance                          = 3,
	Dying                          = 4,
	Died                           = 5,
	FullBodyHitReact               = 6,
	AdditiveHitReact               = 7,
	ActiveIdle                     = 8,
	Falling                        = 9,
	Frozen                         = 10,
	RangedAttack                   = 11,
	Walking                        = 12,
	Sprinting                      = 13,
	EDeimosAnimState_MAX           = 14,
};

enum class EFortHandIKOverrideType : uint8
{
	UseDefault                     = 0,
	ForceFK                        = 1,
	ForceIK                        = 2,
	EFortHandIKOverrideType_MAX    = 3,
};

enum class EFortPlayerAnimBodyType : uint8
{
	Small                          = 0,
	Medium                         = 1,
	Large                          = 2,
	EFortPlayerAnimBodyType_MAX    = 3,
};

enum class EFortCardinalDirection : uint8
{
	North                          = 0,
	East                           = 1,
	South                          = 2,
	West                           = 3,
	EFortCardinalDirection_MAX     = 4,
};

enum class EPlaneDirection : uint8
{
	Center                         = 0,
	Right                          = 1,
	Left                           = 2,
	Up                             = 3,
	Down                           = 4,
	EPlaneDirection_MAX            = 5,
};

enum class EFortFacialAnimTypes : uint8
{
	Default                        = 0,
	FaceOnly                       = 1,
	FullHead                       = 2,
	FromAmplitude                  = 3,
	Max                            = 4,
};

enum class EWaxTokenState : uint8
{
	None                           = 0,
	FirstSpline                    = 1,
	Interpolation                  = 2,
	LastSpline                     = 3,
	Finished                       = 4,
	EWaxTokenState_MAX             = 5,
};

enum class EAIBotBuildingTemplate : uint8
{
	SingleWall                     = 0,
	SingleRamp                     = 1,
	SingleRoof                     = 2,
	SingleBrace                    = 3,
	SingleWallWindow               = 4,
	MAX                            = 5,
};

enum class EBotNamingMode : uint8
{
	RealName                       = 0,
	SkinName                       = 1,
	Anonymous                      = 2,
	Custom                         = 3,
	EBotNamingMode_MAX             = 4,
};

enum class EHarvestResult : uint8
{
	None                           = 0,
	InProgress                     = 1,
	Success                        = 2,
	Fail                           = 3,
	EHarvestResult_MAX             = 4,
};

enum class EOrientedConstructionBuildingType : uint8
{
	WallX                          = 0,
	WallY                          = 1,
	Floor                          = 2,
	StairsUpX                      = 3,
	StairsUpY                      = 4,
	StairsDownX                    = 5,
	StairsDownY                    = 6,
	Roof                           = 7,
	BraceLeftX                     = 8,
	BraceRightX                    = 9,
	BraceLeftY                     = 10,
	BraceRightY                    = 11,
	WallWindowX                    = 12,
	WallWindowY                    = 13,
	Count                          = 14,
	EOrientedConstructionBuildingType_MAX = 15,
};

enum class EConstructionBuildingType : uint8
{
	Wall                           = 0,
	Floor                          = 1,
	Stairs                         = 2,
	Roof                           = 3,
	Brace                          = 4,
	WallWindow                     = 5,
	Count                          = 6,
	EConstructionBuildingType_MAX  = 7,
};

enum class EObstacleType : uint8
{
	IncomingSmashable              = 0,
	BlockingSmashable              = 1,
	Unknown                        = 2,
	Count                          = 2,
	EObstacleType_MAX              = 3,
};

enum class EBotDataOverrideCosmeticMode : uint8
{
	SpecificLoadout                = 0,
	CosmeticLibrary                = 1,
	BotDataOverrideCosmeticMode_MAX = 2,
};

enum class EEvasiveManeuverType : uint8
{
	Crouch                         = 0,
	Dodge                          = 1,
	Jump                           = 2,
	None                           = 3,
	EEvasiveManeuverType_MAX       = 4,
};

enum class EFocusingBehavior : uint8
{
	FocusCurrentTarget             = 0,
	IgnoreThreatAfterTimer         = 1,
	IgnoreThreatAlways             = 2,
	LookAtInvestigate              = 3,
	LookAtHeardSound               = 4,
	LookAtScanAround               = 5,
	LookAtScanAroundOnly           = 6,
	EFocusingBehavior_MAX          = 7,
};

enum class EBotMovementState : uint8
{
	None                           = 0,
	InProgress                     = 1,
	Failed_NoPathFound             = 2,
	Failed_Aborted                 = 3,
	Failed_AgentOffNavmesh         = 4,
	Failed_GoalOffNavmesh          = 5,
	Failed_Blocked                 = 6,
	Failed_OffPath                 = 7,
	Failed_Falling                 = 8,
	Success                        = 9,
	Success_Partial                = 10,
	EBotMovementState_MAX          = 11,
};

enum class EExecutionStatus : uint8
{
	ExecutionError                 = 0,
	ExecutionDenied                = 1,
	ExecutionSuccess               = 2,
	ExecutionPending               = 3,
	ExecutionAllowed               = 4,
	EExecutionStatus_MAX           = 5,
};

enum class ELootElementType : uint8
{
	Pickup                         = 0,
	Chest                          = 1,
	SupplyDrop                     = 2,
	Invalid                        = 255,
	ELootElementType_MAX           = 256,
};

enum class ETeleportReason : uint8
{
	AgentNotOnNavmesh              = 0,
	AgentDestinationNotOnNavMesh   = 1,
	AgentStuckInRepetitivePartialPaths = 2,
	AgentBlocked                   = 3,
	Unknown                        = 4,
	ETeleportReason_MAX            = 5,
};

enum class EActionState : uint8
{
	TryingToEquip                  = 0,
	EquippingItem                  = 1,
	UsingItem                      = 2,
	WaitingItemTermination         = 3,
	ActionEndedWithNoError         = 4,
	ActionEndedWithError           = 5,
	EActionState_MAX               = 6,
};

enum class EDoghouseControlMode : uint8
{
	GroundControls                 = 0,
	AirControls                    = 1,
	MaxCount                       = 2,
	EDoghouseControlMode_MAX       = 3,
};

enum class EFreelookMode : uint8
{
	None                           = 0,
	Mouse                          = 1,
	Analog                         = 2,
	EFreelookMode_MAX              = 3,
};

enum class EAileronRollDirection : uint8
{
	None                           = 0,
	Right                          = 1,
	Left                           = 2,
	EAileronRollDirection_MAX      = 3,
};

enum class EExitCraftState : uint8
{
	None                           = 0,
	Spawned                        = 1,
	Landed                         = 2,
	SpawnBalloon                   = 3,
	GettingIntoPosition            = 4,
	GettingIntoPosition_Simple     = 5,
	WaitingForPawns                = 6,
	Exiting                        = 7,
	EExitCraftState_MAX            = 8,
};

enum class EFortExitRequirements : uint8
{
	AnyPlayer                      = 0,
	WholeSquad                     = 1,
	EFortExitRequirements_MAX      = 2,
};

enum class EFortMutatorReturnValue : uint8
{
	Ignore                         = 0,
	Override                       = 1,
	OverrideReturn                 = 2,
	EFortMutatorReturnValue_MAX    = 3,
};

enum class EAshtonStoneStateType : uint8
{
	NotSpawned                     = 0,
	Spawned                        = 1,
	Captured                       = 2,
	MAX                            = 3,
};

enum class EAshtonStoneType : uint8
{
	Purple                         = 0,
	Blue                           = 1,
	Red                            = 2,
	Orange                         = 3,
	Green                          = 4,
	Yellow                         = 5,
	MAX                            = 6,
};

enum class EBagelDifficulty : uint8
{
	Easy                           = 0,
	Medium                         = 1,
	Hard                           = 2,
	EBagelDifficulty_MAX           = 3,
};

enum class EBagelScoreEvent : uint8
{
	FiendKill                      = 0,
	BruteKill                      = 1,
	RangedKill                     = 2,
	ExplodingKill                  = 3,
	ChillKill                      = 4,
	PoisonKill                     = 5,
	GoldKill                       = 6,
	RiftDestroyed                  = 7,
	ScoreMultiplierUsed            = 8,
	HeadshotKill                   = 9,
	RespawnPenalty                 = 10,
	AmmoBoxOpened                  = 11,
	ChestOpened                    = 12,
	FinalBossKill                  = 13,
	MAX                            = 14,
};

enum class EBagelPhase : uint8
{
	NotStarted                     = 0,
	Preparation                    = 1,
	Survival                       = 2,
	AfterMath                      = 3,
	Moving                         = 4,
	FinalPhase                     = 5,
	FinalPhaseFullStorm            = 6,
	MAX                            = 7,
};

enum class EBarrierObjectiveDamageState : uint8
{
	Health_75                      = 0,
	Health_50                      = 1,
	Health_25                      = 2,
	Health_10                      = 3,
	Health_5                       = 4,
	Health_4                       = 5,
	Health_3                       = 6,
	Health_2                       = 7,
	Health_1                       = 8,
	MAX                            = 9,
};

enum class EBarrierFoodTeam : uint8
{
	Burger                         = 0,
	Tomato                         = 1,
	MAX                            = 2,
};

enum class EAllowedToEdit : uint8
{
	Default                        = 0,
	Anyone                         = 1,
	EAllowedToEdit_MAX             = 2,
};

enum class EFortCrucibleWorkType : uint8
{
	Invalid                        = 0,
	SetupPlayer                    = 1,
	GetFriendsList                 = 2,
	GetFriendsStats                = 3,
	GetGlobalLeaderboard           = 4,
	GetDisplayNames                = 5,
	EFortCrucibleWorkType_MAX      = 6,
};

enum class EFortCrucibleLeaderboardState : uint8
{
	Disabled                       = 0,
	ReadyForQuery                  = 1,
	WaitingForQueryResults         = 2,
	NeedsUserInfoQueried           = 3,
	Complete                       = 4,
	EFortCrucibleLeaderboardState_MAX = 5,
};

enum class EFortCrucibleLeaderboardId : uint8
{
	GlobalGamepad                  = 0,
	GlobalKBM                      = 1,
	GlobalTouch                    = 2,
	GlobalAll                      = 3,
	FriendsGamepad                 = 4,
	FriendsKBM                     = 5,
	FriendsTouch                   = 6,
	FriendsAll                     = 7,
	Count                          = 8,
	EFortCrucibleLeaderboardId_MAX = 9,
};

enum class EFortCrucibleStatSource : uint8
{
	None                           = 0,
	Backend                        = 1,
	CurrentSession                 = 2,
	EFortCrucibleStatSource_MAX    = 3,
};

enum class EFortCrucibleStatId : uint8
{
	Gamepad_CourseOverall          = 0,
	Gamepad_CourseSegment1         = 1,
	Gamepad_CourseSegment2         = 2,
	Gamepad_CourseSegment3         = 3,
	Gamepad_CourseSegment4         = 4,
	Gamepad_CourseSegment5         = 5,
	KBM_CourseOverall              = 6,
	KBM_CourseSegment1             = 7,
	KBM_CourseSegment2             = 8,
	KBM_CourseSegment3             = 9,
	KBM_CourseSegment4             = 10,
	KBM_CourseSegment5             = 11,
	Touch_CourseOverall            = 12,
	Touch_CourseSegment1           = 13,
	Touch_CourseSegment2           = 14,
	Touch_CourseSegment3           = 15,
	Touch_CourseSegment4           = 16,
	Touch_CourseSegment5           = 17,
	Count                          = 18,
	EFortCrucibleStatId_MAX        = 19,
};

enum class EFortCrucibleControlType : uint8
{
	Gamepad                        = 0,
	KBM                            = 1,
	Touch                          = 2,
	Count                          = 3,
	EFortCrucibleControlType_MAX   = 4,
};

enum class EFortCrucibleStatType : uint8
{
	CourseOverall                  = 0,
	CourseSegment1                 = 1,
	CourseSegment2                 = 2,
	CourseSegment3                 = 3,
	CourseSegment4                 = 4,
	CourseSegment5                 = 5,
	Count                          = 6,
	EFortCrucibleStatType_MAX      = 7,
};

enum class EDadBroState : int32
{
	NotYet                         = 0,
	Initializing                   = 1,
	Active                         = 2,
	EDadBroState_MAX               = 3,
};

enum class EDBNOMutatorType : uint8
{
	Default                        = 0,
	On                             = 1,
	Off                            = 2,
	EDBNOMutatorType_MAX           = 3,
};

enum class EControlPointState : uint8
{
	None                           = 0,
	Disabled                       = 1,
	Enabled                        = 2,
	EControlPointState_MAX         = 3,
};

enum class EEnvironmentDamageFilter : uint8
{
	Off                            = 0,
	PlayerBuiltOnly                = 1,
	All                            = 2,
	EEnvironmentDamageFilter_MAX   = 3,
};

enum class EBuildingDamageTeamFilter : uint8
{
	Default                        = 0,
	OwnerOnly                      = 1,
	TeamOnly                       = 2,
	EnemyOnly                      = 3,
	EnemyAndOwnerOnly              = 4,
	None                           = 5,
	EBuildingDamageTeamFilter_MAX  = 6,
};

enum class EAthenaMutatorEvaluators : uint8
{
	NoOverride                     = 0,
	ForceOverride                  = 1,
	Add                            = 2,
	Multiply                       = 3,
	EAthenaMutatorEvaluators_MAX   = 4,
};

enum class EHeistExitCraftState : uint8
{
	None                           = 0,
	Incoming                       = 1,
	Spawned                        = 2,
	Exited                         = 3,
	EHeistExitCraftState_MAX       = 4,
};

enum class EAthenaInventorySpawnOverride : uint8
{
	NoOverride                     = 0,
	Always                         = 1,
	IntialSpawn                    = 2,
	AircraftPhaseOnly              = 3,
	EAthenaInventorySpawnOverride_MAX = 4,
};

enum class EAthenaLootDropOverride : uint8
{
	NoOverride                     = 0,
	ForceDrop                      = 1,
	ForceKeep                      = 2,
	ForceDestroy                   = 3,
	ForceDropUnlessRespawning      = 4,
	ForceDestroyUnlessRespawning   = 5,
	DropUnlessTeamSelectionUpdated = 6,
	EAthenaLootDropOverride_MAX    = 7,
};

enum class ERespawnRequirements : uint8
{
	RespawnOnly                    = 0,
	NoRespawnOnly                  = 1,
	Both                           = 2,
	ERespawnRequirements_MAX       = 3,
};

enum class ECustomLootSelection : uint8
{
	Default                        = 0,
	HighExplosives                 = 1,
	CloseEncounters                = 2,
	SolidGold                      = 3,
	WildWest                       = 4,
	SniperShootout                 = 5,
	OneShot                        = 6,
	ECustomLootSelection_MAX       = 7,
};

enum class EMashDifficulty : uint8
{
	Easy                           = 0,
	Medium                         = 1,
	Hard                           = 2,
	EMashDifficulty_MAX            = 3,
};

enum class EMashScoreEvent : uint8
{
	FiendKill                      = 0,
	BruteKill                      = 1,
	RangedKill                     = 2,
	ExplodingKill                  = 3,
	ChillKill                      = 4,
	PoisonKill                     = 5,
	GoldKill                       = 6,
	RiftDestroyed                  = 7,
	ScoreMultiplierUsed            = 8,
	HeadshotKill                   = 9,
	RespawnPenalty                 = 10,
	AmmoBoxOpened                  = 11,
	ChestOpened                    = 12,
	FinalBossKill                  = 13,
	MAX                            = 14,
};

enum class EMashPhase : uint8
{
	NotStarted                     = 0,
	Preparation                    = 1,
	Survival                       = 2,
	AfterMath                      = 3,
	Moving                         = 4,
	FinalPhase                     = 5,
	FinalPhaseFullStorm            = 6,
	MAX                            = 7,
};

enum class EIndicatorDisplayMode : uint8
{
	Default                        = 0,
	Always                         = 1,
	Never                          = 2,
	MiniMap                        = 3,
	EIndicatorDisplayMode_MAX      = 4,
};

enum class EOmahaTeam : uint8
{
	Home                           = 0,
	Away                           = 1,
	MAX                            = 2,
};

enum class EPlayerDamageHeightRatioDetectionType : uint8
{
	None                           = 0,
	FromBottom                     = 1,
	FromTop                        = 2,
	EPlayerDamageHeightRatioDetectionType_MAX = 3,
};

enum class ESkyCapState : uint8
{
	Hidden                         = 0,
	StormStarting                  = 1,
	ESkyCapState_MAX               = 2,
};

enum class EAthenaTODPostProcess : uint8
{
	NoOverride                     = 0,
	Blueprint1                     = 1,
	Blueprint2                     = 2,
	Blueprint3                     = 3,
	Blueprint4                     = 4,
	Blueprint5                     = 5,
	Blueprint6                     = 6,
	Blueprint7                     = 7,
	Blueprint8                     = 8,
	Blueprint9                     = 9,
	Blueprint10                    = 10,
	Blueprint11                    = 11,
	EAthenaTODPostProcess_MAX      = 12,
};

enum class EAthenaTODColor : uint8
{
	NoOverride                     = 0,
	Black                          = 1,
	White                          = 2,
	Red                            = 3,
	Green                          = 4,
	Blue                           = 5,
	Yellow                         = 6,
	Magenta                        = 7,
	Cyan                           = 8,
	EAthenaTODColor_MAX            = 9,
};

enum class EAthenaFogDensityOverride : uint8
{
	NoOverride                     = 0,
	Fog0                           = 1,
	Fog1                           = 2,
	Fog2                           = 3,
	Fog3                           = 4,
	Fog4                           = 5,
	Fog5                           = 6,
	Fog6                           = 7,
	Fog7                           = 8,
	Fog8                           = 9,
	Fog9                           = 10,
	Fog10                          = 11,
	EAthenaFogDensityOverride_MAX  = 12,
};

enum class EAthenaLightIntensityOverride : uint8
{
	NoOverride                     = 0,
	Intensity0                     = 1,
	Intensity1                     = 2,
	Intensity2                     = 3,
	Intensity3                     = 4,
	Intensity4                     = 5,
	Intensity5                     = 6,
	Intensity6                     = 7,
	Intensity7                     = 8,
	Intensity8                     = 9,
	Intensity9                     = 10,
	Intensity10                    = 11,
	EAthenaLightIntensityOverride_MAX = 12,
};

enum class EAthenaTimeOfDayOverride : uint8
{
	NoOverride                     = 0,
	ForceDay                       = 1,
	ForceNight                     = 2,
	Custom                         = 3,
	Hour0                          = 4,
	Hour1                          = 5,
	Hour2                          = 6,
	Hour3                          = 7,
	Hour4                          = 8,
	Hour5                          = 9,
	Hour6                          = 10,
	Hour7                          = 11,
	Hour8                          = 12,
	Hour9                          = 13,
	Hour10                         = 14,
	Hour11                         = 15,
	Hour12                         = 16,
	Hour13                         = 17,
	Hour14                         = 18,
	Hour15                         = 19,
	Hour16                         = 20,
	Hour17                         = 21,
	Hour18                         = 22,
	Hour19                         = 23,
	Hour20                         = 24,
	Hour21                         = 25,
	Hour22                         = 26,
	Hour23                         = 27,
	Random                         = 28,
	EAthenaTimeOfDayOverride_MAX   = 29,
};

enum class EFortAthenaMutator_VoiceChatChannelType : uint8
{
	Default                        = 0,
	None                           = 1,
	SquadOnly                      = 2,
	TeamOnly                       = 3,
	WholeServer                    = 4,
	ScopeOnly                      = 5,
	ScopeSquadOnly                 = 6,
	ScopeTeamOnly                  = 7,
	EFortAthenaMutator_MAX         = 8,
};

enum class EWaxState : uint8
{
	None                           = 0,
	SomewhatVisible                = 1,
	ModeratelyVisible              = 2,
	VeryVisible                    = 3,
	Undeniable                     = 4,
	EWaxState_MAX                  = 5,
};

enum class EWaxMinimapDrawMode : uint8
{
	NoDrawing                      = 0,
	DrawCloseAndMoveOrShoot        = 1,
	DrawMoveOrShoot                = 2,
	DrawAlways                     = 3,
	EWaxMinimapDrawMode_MAX        = 4,
};

enum class ECoastState : uint8
{
	Idle                           = 0,
	Mount                          = 1,
	Coasting                       = 2,
	Pedaling                       = 3,
	PreDismount                    = 4,
	Dismount                       = 5,
	EndCoast                       = 6,
	ECoastState_MAX                = 7,
};

enum class ETutorialButtonInteractionType : uint8
{
	Click                          = 0,
	Press                          = 1,
	ETutorialButtonInteractionType_MAX = 2,
};

enum class EHighlightType : uint8
{
	ESquareHighlight               = 0,
	ECircleHighlight_Big           = 1,
	ECircleHighlight_Small         = 2,
	EHighlightType_MAX             = 3,
};

enum class EBounceCompressionState : uint8
{
	None                           = 0,
	Crouching                      = 1,
	Crouched                       = 2,
	Jumping                        = 3,
	Recoiling                      = 4,
	EBounceCompressionState_MAX    = 5,
};

enum class ENaturalSlideState : uint8
{
	None                           = 0,
	Entering                       = 1,
	InProgress                     = 2,
	Exiting                        = 3,
	ENaturalSlideState_MAX         = 4,
};

enum class EPowerSlideState : uint8
{
	None                           = 0,
	Entering                       = 1,
	InProgress                     = 2,
	Exiting                        = 3,
	EPowerSlideState_MAX           = 4,
};

enum class EFortFuelGadgetVisualType : uint8
{
	FuelMeter                      = 0,
	ChargeText                     = 1,
	Invalid                        = 2,
	EFortFuelGadgetVisualType_MAX  = 3,
};

enum class EFortAttributeDisplay : uint8
{
	BasicInt                       = 0,
	NegativeImpliesInfiniteInt     = 1,
	BasicFloat                     = 2,
	NegativeImpliesInfiniteFloat   = 3,
	BasicString                    = 4,
	NormalizedPercentage           = 5,
	StringArray                    = 6,
	SlateBrush                     = 7,
	DoNotDisplay                   = 8,
	None_Max                       = 9,
	EFortAttributeDisplay_MAX      = 10,
};

enum class EBannerUsageContext : uint8
{
	Unknown                        = 0,
	BannerIcon                     = 1,
	PhysicalBanner                 = 2,
	Spray                          = 3,
	EBannerUsageContext_MAX        = 4,
};

enum class EEnvironmentalItemEndReason : uint8
{
	None                           = 0,
	PlayerExit                     = 1,
	PlayerDeath                    = 2,
	ObjectDestroyed                = 3,
	EEnvironmentalItemEndReason_MAX = 4,
};

enum class ESpawnResult : uint8
{
	Success                        = 0,
	Failure_NoLocationFound        = 1,
	Failure_NoActorClass           = 2,
	Failure_BadQueryData           = 3,
	ESpawnResult_MAX               = 4,
};

enum class EFortBuildingSoundType : uint8
{
	Construction                   = 0,
	GenericDestruction             = 1,
	PlayerBuiltDestruction         = 2,
	None                           = 3,
	EFortBuildingSoundType_MAX     = 4,
};

enum class EFortUICameraFrameTargetBoundingBehavior : uint8
{
	NoBounds                       = 0,
	AllBounds                      = 1,
	TopBoundOnly                   = 2,
	EFortUICameraFrameTargetBoundingBehavior_MAX = 3,
};

enum class ECameraOrigin : uint8
{
	ViewTargetTransform            = 0,
	BoneTransform                  = 1,
	ECameraOrigin_MAX              = 2,
};

enum class EChallengeBundleQuestUnlockType : uint8
{
	Manually                       = 0,
	GrantWithBundle                = 1,
	RequiresBattlePass             = 2,
	DaysFromEventStart             = 3,
	ChallengesCompletedToUnlock    = 4,
	BundleLevelup                  = 5,
	EChallengeBundleQuestUnlockType_MAX = 6,
};

enum class EChallengeScheduleUnlockType : uint8
{
	Manually                       = 0,
	OnScheduleGranted              = 1,
	DaysSinceEventStart            = 2,
	EChallengeScheduleUnlockType_MAX = 3,
};

enum class EBundleStyleColor : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Accent                         = 2,
	EBundleStyleColor_MAX          = 3,
};

enum class EFortCustomMovement : uint8
{
	Default                        = 0,
	Driving                        = 1,
	Passenger                      = 2,
	Parachuting                    = 3,
	Skydiving                      = 4,
	SkydiveFollowing               = 5,
	Hover                          = 6,
	RemoteControl_Flying           = 7,
	Ziplining                      = 8,
	Ballooning                     = 9,
	SurfaceSwimming                = 10,
	DBNOCarried                    = 11,
	EFortCustomMovement_MAX        = 12,
};

enum class EOstrichDetonationState : uint8
{
	None                           = 0,
	Detonate                       = 1,
	SelfDestruct                   = 2,
	Instant                        = 3,
	EOstrichDetonationState_MAX    = 4,
};

enum class EChatRoomJoinHelperState : uint8
{
	Ready                          = 0,
	AttemptingJoin                 = 1,
	Joined                         = 2,
	AttemptingLeave                = 3,
	EChatRoomJoinHelperState_MAX   = 4,
};

enum class EFortAnnouncementDisplayPreference : uint8
{
	Default_HUD                    = 0,
	QuestIntroduction              = 1,
	QuestJournal                   = 2,
	EFortAnnouncementDisplayPreference_MAX = 3,
};

enum class EFortAnnouncementChannel : uint8
{
	Primary                        = 0,
	Conversation                   = 1,
	Tutorial                       = 2,
	Max_None                       = 3,
	EFortAnnouncementChannel_MAX   = 4,
};

enum class EFortAnnouncementDelivery : uint8
{
	Created                        = 0,
	Received                       = 1,
	Ignored                        = 2,
	Active                         = 3,
	Stopped                        = 4,
	Max_None                       = 5,
	EFortAnnouncementDelivery_MAX  = 6,
};

enum class ECreativeBotItemTestingState : uint8
{
	ITS_NONE                       = 0,
	ITS_Teleporting                = 1,
	ITS_Landing                    = 2,
	ITS_Grant                      = 3,
	ITS_Equip                      = 4,
	ITS_Throw                      = 5,
	ITS_Throwing                   = 6,
	ITS_Cleanup                    = 7,
	ITS_MAX                        = 8,
};

enum class ECreativeBotIslandLoadingState : uint8
{
	ILS_NONE                       = 0,
	ILS_LoadNotStarted             = 1,
	ILS_GrantPlotItem              = 2,
	ILS_WaitingUserPlotReady       = 3,
	ILS_LoadInProgress             = 4,
	ILS_LoadComplete               = 5,
	ILS_Teleporting                = 6,
	ILS_Returning                  = 7,
	ILS_Items                      = 8,
	ILS_MAX                        = 9,
};

enum class ECreativeBotIslandIterationType : uint8
{
	CBI_NONE                       = 0,
	CBI_Mnemonics                  = 1,
	CBI_User                       = 2,
	CBI_MAX                        = 3,
};

enum class EFortAutoMulchMode : uint8
{
	Off                            = 0,
	Common                         = 1,
	Uncommon                       = 2,
	Rare                           = 3,
	Epic                           = 4,
	Num                            = 5,
	EFortAutoMulchMode_MAX         = 6,
};

enum class EFortAutoMulchCategory : uint8
{
	Invalid                        = 0,
	Weapon                         = 1,
	Trap                           = 2,
	Survivor                       = 3,
	Defender                       = 4,
	Hero                           = 5,
	Num                            = 6,
	EFortAutoMulchCategory_MAX     = 7,
};

enum class EQuestMapScreenMode : uint8
{
	Invalid                        = 0,
	MainCampaign                   = 1,
	Event                          = 2,
	EQuestMapScreenMode_MAX        = 3,
};

enum class EFortAllowBackgroundAudioSetting : uint8
{
	Off                            = 0,
	NotificationsOnly              = 1,
	AllSounds                      = 2,
	Num                            = 3,
	EFortAllowBackgroundAudioSetting_MAX = 4,
};

enum class EAndroidAppStoreTypes : uint8
{
	Unset                          = 0,
	Epic                           = 1,
	Samsung                        = 2,
	EAndroidAppStoreTypes_MAX      = 3,
};

enum class EColorBlindMode : uint8
{
	Off                            = 0,
	Deuteranope                    = 1,
	Protanope                      = 2,
	Tritanope                      = 3,
	EColorBlindMode_MAX            = 4,
};

enum class ECloudFileState : uint8
{
	Unitialized                    = 0,
	Saving                         = 1,
	Loading                        = 2,
	Idle                           = 3,
	ECloudFileState_MAX            = 4,
};

enum class ECodeTokenPlatform : uint8
{
	PC                             = 0,
	PS4                            = 1,
	XBOX                           = 2,
	ECodeTokenPlatform_MAX         = 3,
};

enum class EFortCollectionBookState : uint8
{
	Active                         = 0,
	Completed                      = 1,
	Claimed                        = 2,
	EFortCollectionBookState_MAX   = 3,
};

enum class EFortPIDValueGraphElements : uint8
{
	Proportional                   = 0,
	Integral                       = 1,
	Max_None                       = 2,
	EFortPIDValueGraphElements_MAX = 3,
};

enum class EFortIntensityGraphElements : uint8
{
	ActualIntensity                = 0,
	DesiredIntensity               = 1,
	Max_None                       = 2,
	EFortIntensityGraphElements_MAX = 3,
};

enum class EFortContributionGraphElements : uint8
{
	ProportionalLine               = 0,
	IntegralLine                   = 1,
	TotalLine                      = 2,
	PendingLine                    = 3,
	ActionLine                     = 4,
	Max_None                       = 5,
	EFortContributionGraphElements_MAX = 6,
};

enum class EFortFactorContributionType : uint8
{
	CurrentValue_Direct            = 0,
	CurrentValue_Inverse           = 1,
	AverageValue_Direct            = 2,
	AverageValue_Inverse           = 3,
	EFortFactorContributionType_MAX = 4,
};

enum class EFortAIDirectorFactor : uint8
{
	PlayerDamageThreat             = 0,
	ObjectiveDamageThreat          = 1,
	ObjectivePathCost              = 2,
	PlayerPathCost                 = 3,
	PlayerMovement                 = 4,
	TrapsEffective                 = 5,
	PlayerWander                   = 6,
	NearbyEnemyPresence            = 7,
	OffensiveResources             = 8,
	DefensiveResources             = 9,
	Boredom                        = 10,
	ArtilleryVulnerability         = 11,
	Max_None                       = 12,
	EFortAIDirectorFactor_MAX      = 13,
};

enum class EFortCombatFactors : uint8
{
	PlayerDamageThreat             = 0,
	ObjectiveDamageThreat          = 1,
	ObjectivePathCost              = 2,
	PlayerPathCost                 = 3,
	PlayerMovement                 = 4,
	TrapsEffective                 = 5,
	PlayerWander                   = 6,
	NearbyEnemyPresence            = 7,
	OffensiveResources             = 8,
	DefensiveResources             = 9,
	Boredom                        = 10,
	ArtilleryVulnerability         = 11,
	Max_None                       = 12,
	EFortCombatFactors_MAX         = 13,
};

enum class EFortCombatEventContribution : uint8
{
	Linear                         = 0,
	Inverse                        = 1,
	Accumulator                    = 2,
	Max_None                       = 3,
	EFortCombatEventContribution_MAX = 4,
};

enum class EFortCombatEvents : uint8
{
	HuskFollowing                  = 0,
	SmasherFollowing               = 1,
	TrollFollowing                 = 2,
	FlingerFollowing               = 3,
	TakerFollowing                 = 4,
	HuskCombatNearby               = 5,
	SmasherCombatNearby            = 6,
	TrollCombatNearby              = 7,
	FlingerCombatNearby            = 8,
	TakerCombatNearby              = 9,
	PlayerTakeDamage               = 10,
	PlayerHealth                   = 11,
	PlayerLookAtEnemy              = 12,
	PlayerDamageEnemy              = 13,
	PlayerKilledEnemy              = 14,
	AtlasTakeDamage                = 15,
	AtlasHealth                    = 16,
	AtlasDestroyed                 = 17,
	TrapFiring                     = 18,
	BuildingTakeDamage             = 19,
	FoodHealingPotential           = 20,
	PlayerAmmo                     = 21,
	EnemiesNear                    = 22,
	PlayerMovement                 = 23,
	BuildingDamagedNearObjective   = 24,
	TrapDamageEnemy                = 25,
	ObjectivePathCost              = 26,
	PlayerPathCost                 = 27,
	Max_None                       = 28,
	EFortCombatEvents_MAX          = 29,
};

enum class EFortAIDirectorEventParticipant : uint8
{
	Target                         = 0,
	Source                         = 1,
	Either                         = 2,
	Max_None                       = 3,
	EFortAIDirectorEventParticipant_MAX = 4,
};

enum class EFortCombatThresholds : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	Extreme                        = 3,
	Max_None                       = 4,
	EFortCombatThresholds_MAX      = 5,
};

enum class EFortWeaponCoreAnimation : uint8
{
	Melee                          = 0,
	Pistol                         = 1,
	Shotgun                        = 2,
	PaperBlueprint                 = 3,
	Rifle                          = 4,
	MeleeOneHand                   = 5,
	MachinePistol                  = 6,
	RocketLauncher                 = 7,
	GrenadeLauncher                = 8,
	GoingCommando                  = 9,
	AssaultRifle                   = 10,
	TacticalShotgun                = 11,
	SniperRifle                    = 12,
	TrapPlacement                  = 13,
	ShoulderLauncher               = 14,
	AbilityDecoTool                = 15,
	Crossbow                       = 16,
	C4                             = 17,
	RemoteControl                  = 18,
	DualWield                      = 19,
	AR_BullPup                     = 20,
	AR_ForwardGrip                 = 21,
	MedPackPaddles                 = 22,
	SMG_P90                        = 23,
	AR_DrumGun                     = 24,
	Consumable_Small               = 25,
	Consumable_Large               = 26,
	Balloon                        = 27,
	MountedTurret                  = 28,
	CreativeTool                   = 29,
	ExplosiveBow                   = 30,
	AshtonIndigo                   = 31,
	AshtonChicago                  = 32,
	MeleeDualWield                 = 33,
	MAX                            = 34,
};

enum class EFortTargetingFXState : uint8
{
	TargetingStart                 = 0,
	TargetingEnd                   = 1,
	Max_None                       = 2,
	EFortTargetingFXState_MAX      = 3,
};

enum class EFortReloadFXState : uint8
{
	ReloadStart                    = 0,
	ReloadCartridge                = 1,
	ReloadEnd                      = 2,
	Max_None                       = 3,
	EFortReloadFXState_MAX         = 4,
};

enum class EFortWeaponSoundChannel : uint8
{
	NormalA                        = 0,
	NormalB                        = 1,
	LowAmmo                        = 2,
	Degraded                       = 3,
	Max_None                       = 4,
	EFortWeaponSoundChannel_MAX    = 5,
};

enum class EFortWeaponSoundState : uint8
{
	Normal                         = 0,
	LowAmmo                        = 1,
	Degraded                       = 2,
	Max_None                       = 3,
	EFortWeaponSoundState_MAX      = 4,
};

enum class EFortMontageInputType : uint8
{
	WindowClickOrHold              = 0,
	WindowHoldOnly                 = 1,
	InstantClick                   = 2,
	EFortMontageInputType_MAX      = 3,
};

enum class EFortAmmoType : uint8
{
	Pistol                         = 0,
	Shotgun                        = 1,
	Assault                        = 2,
	Sniper                         = 3,
	Energy                         = 4,
	EFortAmmoType_MAX              = 5,
};

enum class EFortConditionalResourceItemTest : uint8
{
	CanEarnMtx                     = 0,
	EFortConditionalResourceItemTest_MAX = 1,
};

enum class EFortContentEncryptionAllowedReferences : int32
{
	None                           = 0,
	SoftOnly                       = 1,
	Any                            = 2,
	EFortContentEncryptionAllowedReferences_MAX = 3,
};

enum class EFortContentEncryptionCollectionGrouping : int32
{
	Individual                     = 0,
	Combined                       = 1,
	ByCosmeticSet                  = 2,
	EFortContentEncryptionCollectionGrouping_MAX = 3,
};

enum class EFortEncryptionStatus : uint8
{
	ENCRYPTED                      = 0,
	RELEASED                       = 1,
	EFortEncryptionStatus_MAX      = 2,
};

enum class EFortContextualTutorialPlatform : uint8
{
	Any                            = 0,
	PcAndConsole                   = 1,
	Mobile                         = 2,
	EFortContextualTutorialPlatform_MAX = 3,
};

enum class EFortContextualTutorialTypes : uint8
{
	AllSeen                        = 0,
	BattleBusPC                    = 1,
	BattleBusMobile                = 2,
	Skydiving                      = 3,
	Landing                        = 4,
	NearbyChestPC                  = 5,
	NearbyChestMobile              = 6,
	NearbyLootPC                   = 7,
	NearbyLootMobile               = 8,
	Harvest                        = 9,
	WeakSpot                       = 10,
	UseSmallShieldPotion           = 11,
	UseShieldPotion                = 12,
	UseSlurpJuice                  = 13,
	UseChugJug                     = 14,
	UseBandage                     = 15,
	UseMedKit                      = 16,
	StormFormingPC                 = 17,
	StormFormingMobile             = 18,
	EquipWeaponPC                  = 19,
	EquipWeaponMobile              = 20,
	MarkLocation                   = 21,
	MarkEnemy                      = 22,
	Welcome                        = 23,
	PrepareToJump                  = 24,
	ShieldBlazer                   = 25,
	ChugSplash                     = 26,
	LandNearPoi                    = 27,
	UseSmallShieldPotionInformative = 28,
	UseShieldPotionInformative     = 29,
	UseSlurpJuiceInformative       = 30,
	UseBandageInformative          = 31,
	UseMedKitInformative           = 32,
	ChugSplashInformative          = 33,
	NearHideableObject             = 34,
	NearUpgradeBench               = 35,
	HealBazooka                    = 36,
	FishingFishSmallFry            = 37,
	FishingFishFlopper             = 38,
	FishingFishSlurpfish           = 39,
	FishingCan                     = 40,
	FishingTrophy                  = 41,
	NearUpgradeBenchWithMaterial   = 42,
	Count                          = 43,
	None                           = 44,
	EFortContextualTutorialTypes_MAX = 45,
};

enum class ESkydiveFeedbackPhase : uint8
{
	Initial                        = 0,
	WithGlider                     = 1,
	InVortex                       = 2,
	None                           = 3,
	ESkydiveFeedbackPhase_MAX      = 4,
};

enum class EFortSentenceAudioPreference : uint8
{
	AudioAsset                     = 0,
	FeedbackBank                   = 1,
	EFortSentenceAudioPreference_MAX = 2,
};

enum class EAssetChangeMethod : uint8
{
	Latest                         = 0,
	Minimum                        = 1,
	Oldest                         = 2,
	BelowDoubleTheFixedCost        = 3,
	EAssetChangeMethod_MAX         = 4,
};

enum class EAddToSelectionResult : uint8
{
	Added                          = 0,
	Removed                        = 1,
	AtLimit                        = 2,
	None                           = 3,
	EAddToSelectionResult_MAX      = 4,
};

enum class EHitTraceType : uint8
{
	Single                         = 0,
	Multi                          = 1,
	EHitTraceType_MAX              = 2,
};

enum class ECreativePortalManagerValidityResult : uint8
{
	Valid                          = 0,
	Invalid                        = 1,
	ECreativePortalManagerValidityResult_MAX = 2,
};

enum class EFortCreativePlotPermission : uint8
{
	Private                        = 0,
	Public                         = 1,
	EFortCreativePlotPermission_MAX = 2,
};

enum class ERealEstateOffsetType : uint8
{
	CustomOffsetFromCorner         = 0,
	Center                         = 1,
	ERealEstateOffsetType_MAX      = 2,
};

enum class EFortCreativeTeleporterEvent : uint8
{
	Entered                        = 0,
	Exited                         = 1,
	Enabled                        = 2,
	Disabled                       = 3,
	None                           = 4,
	EFortCreativeTeleporterEvent_MAX = 5,
};

enum class EFortCreativeTeleporterGroup : uint8
{
	Group_A                        = 0,
	Group_B                        = 1,
	Group_C                        = 2,
	Group_D                        = 3,
	Group_E                        = 4,
	Group_F                        = 5,
	Group_G                        = 6,
	Group_H                        = 7,
	Group_I                        = 8,
	Group_J                        = 9,
	Group_K                        = 10,
	Group_L                        = 11,
	Group_M                        = 12,
	Group_N                        = 13,
	Group_O                        = 14,
	Group_P                        = 15,
	Group_Q                        = 16,
	Group_R                        = 17,
	Group_S                        = 18,
	Group_T                        = 19,
	Group_U                        = 20,
	Group_V                        = 21,
	Group_W                        = 22,
	Group_X                        = 23,
	Group_Y                        = 24,
	Group_Z                        = 25,
	Group_None                     = 26,
	Group_MAX                      = 27,
};

enum class EMMSPlayersPerTeamPreset : uint8
{
	Solos                          = 1,
	Duos                           = 2,
	Trios                          = 3,
	Squads                         = 4,
	SplitEvenly                    = 5,
	Dynamic                        = 6,
	EMMSPlayersPerTeamPreset_MAX   = 7,
};

enum class EMMSRulePreset : uint8
{
	RespectParties                 = 0,
	KeepFull                       = 1,
	Off                            = 2,
	EMMSRulePreset_MAX             = 3,
};

enum class ETimespanUnitDisplayFormat : uint8
{
	Full                           = 0,
	Abbreviated                    = 1,
	ETimespanUnitDisplayFormat_MAX = 2,
};

enum class ETimespanAsTextFormat : uint8
{
	DaysHoursMinutesSeconds        = 0,
	Colons                         = 1,
	Approximate                    = 2,
	ApproximateWithWeeks           = 3,
	ApproximateWithMonths          = 4,
	ApproximateWithYears           = 5,
	ETimespanAsTextFormat_MAX      = 6,
};

enum class EDeathCauseReason : uint8
{
	SelfInflicted                  = 0,
	SelfInflictedDBNO              = 1,
	Eliminated                     = 2,
	EliminatedDBNO                 = 3,
	EDeathCauseReason_MAX          = 4,
};

enum class EFortDefenderSubtype : uint8
{
	AssaultRifle                   = 0,
	Pistol                         = 1,
	Melee                          = 2,
	Sniper                         = 3,
	Shotgun                        = 4,
	Invalid                        = 5,
	EFortDefenderSubtype_MAX       = 6,
};

enum class EHordeTierStartStatus : uint8
{
	ReadyToStart                   = 0,
	WaitingForPlayer               = 1,
	WaitingForDBM                  = 2,
	GenericNotReadyToStart         = 3,
	EHordeTierStartStatus_MAX      = 4,
};

enum class EHordeWaveStingerType : uint8
{
	WaveSuccess                    = 0,
	WaveFailure                    = 1,
	WaveIncoming                   = 2,
	WaveStarted                    = 3,
	EHordeWaveStingerType_MAX      = 4,
};

enum class EQueueActionType : uint8
{
	Plot                           = 0,
	ZoneCleanup                    = 1,
	EnvironmentActorRestoration    = 2,
	EQueueActionType_MAX           = 3,
};

enum class EFDynamicBuildOrder : uint8
{
	X                              = 0,
	Y                              = 1,
	Z                              = 2,
	None                           = 3,
	FDynamicBuildOrder_MAX         = 4,
};

enum class EFortFeedbackBroadcastFilter : uint8
{
	FFBF_Speaker                   = 0,
	FFBF_SpeakerTeam               = 1,
	FFBF_SpeakerAdressee           = 2,
	FFBF_HumanPvP_Team1            = 3,
	FFBF_HumanPvP_Team2            = 4,
	FFBF_None_Max                  = 5,
	FFBF_MAX                       = 6,
};

enum class EFortFeedbackSelectionMethod : uint8
{
	FFSM_Instigator                = 0,
	FFSM_Recipient                 = 1,
	FFSM_TeamWitness               = 2,
	FFSM_EnemyWitness              = 3,
	FFSM_Random                    = 4,
	FFSM_Priority_IRTE             = 5,
	FFSM_AllPawns                  = 6,
	FFSM_Announcer                 = 7,
	FFSM_MAX                       = 8,
};

enum class EFortFeedbackAddressee : uint8
{
	FFA_Instigator                 = 0,
	FFA_Recipient                  = 1,
	FFA_All                        = 2,
	FFA_MAX                        = 3,
};

enum class EFortFeedbackContext : uint8
{
	FFC_Instigator                 = 0,
	FFC_Recipient                  = 1,
	FFC_TeamWitness                = 2,
	FFC_EnemyWitness               = 3,
	FFC_AllPawns                   = 4,
	FFC_Announcer                  = 5,
	FFC_None_Max                   = 6,
	FFC_MAX                        = 7,
};

enum class EFortFootstepPosition : uint8
{
	Parallel                       = 0,
	Above                          = 1,
	Below                          = 2,
	AboveOrBelowAndVisible         = 3,
	Max_None                       = 4,
	EFortFootstepPosition_MAX      = 5,
};

enum class EFortFootstepSurfaceType : uint8
{
	Default                        = 0,
	Wood                           = 1,
	Stone                          = 2,
	Metal                          = 3,
	Water                          = 4,
	Snow                           = 5,
	Ice                            = 6,
	Lava                           = 7,
	Dirt                           = 8,
	Grass                          = 9,
	Max_None                       = 10,
	EFortFootstepSurfaceType_MAX   = 11,
};

enum class EFortFootstepAudioType : uint8
{
	Crouch                         = 0,
	CrouchSprint                   = 1,
	Walk                           = 2,
	Sprint                         = 3,
	Jump                           = 4,
	Land                           = 5,
	LandHard                       = 6,
	Max_None                       = 7,
	EFortFootstepAudioType_MAX     = 8,
};

enum class ESubGameAccessReason : uint8
{
	NoAccess                       = 0,
	OpenAccess                     = 1,
	TokenItemAccess                = 2,
	XboxHomeSharingAccess          = 3,
	XboxServiceOutageAccess        = 4,
	LimitedAccess                  = 5,
	ESubGameAccessReason_MAX       = 6,
};

enum class EClampType : uint8
{
	Minimum                        = 0,
	Maximum                        = 1,
	EClampType_MAX                 = 2,
};

enum class ERatingsEnforcementType : uint8
{
	Default                        = 0,
	IgnoreMaximums                 = 1,
	IgnoreParty                    = 2,
	IgnorePartyMaximum             = 3,
	ERatingsEnforcementType_MAX    = 4,
};

enum class EFortComponentRoleFilter : uint8
{
	AuthorityAndRemote             = 0,
	Authority                      = 1,
	Remote                         = 2,
	EFortComponentRoleFilter_MAX   = 3,
};

enum class EFortCoreGameNounLifecycle : uint8
{
	Invalid                        = 0,
	AddGameStateComponents         = 1,
	AddPlayerStateComponents       = 2,
	AddPlayerControllerComponents  = 3,
	EFortCoreGameNounLifecycle_MAX = 4,
};

enum class EDynamicSoundOverride : uint8
{
	Cue                            = 0,
	Wave                           = 1,
	Class                          = 2,
	EDynamicSoundOverride_MAX      = 3,
};

enum class EPlayerQueueType : uint8
{
	Player                         = 0,
	BroadcastSpectator             = 1,
	EPlayerQueueType_MAX           = 2,
};

enum class EFortInputFilterLevel : uint8
{
	None                           = 0,
	Touch                          = 1,
	Gamepad                        = 2,
	Mouse                          = 3,
	EFortInputFilterLevel_MAX      = 4,
};

enum class EAircraftLaunchReason : uint8
{
	StdTimerAllPlayers             = 0,
	EarlyTimerAllPlayers           = 1,
	StdTimerMostPlayers            = 2,
	EarlyTimerMostPlayers          = 3,
	StdTimerFewPlayers             = 4,
	EAircraftLaunchReason_MAX      = 5,
};

enum class EFortGamepadLookInputCurve : uint8
{
	Linear                         = 0,
	Exponential                    = 1,
	EFortGamepadLookInputCurve_MAX = 2,
};

enum class EFortGamepadSensitivity : uint8
{
	Invalid                        = 0,
	Slow                           = 1,
	SlowPlus                       = 2,
	SlowPlusPlus                   = 3,
	Normal                         = 4,
	NormalPlus                     = 5,
	NormalPlusPlus                 = 6,
	Fast                           = 7,
	FastPlus                       = 8,
	FastPlusPlus                   = 9,
	Insane                         = 10,
	MAX                            = 11,
};

enum class EFortAbilityCostSource : uint8
{
	Stamina                        = 0,
	Durability                     = 1,
	AmmoMagazine                   = 2,
	AmmoPrimary                    = 3,
	Item                           = 4,
	EFortAbilityCostSource_MAX     = 5,
};

enum class EFortGameplayAbilityActivation : uint8
{
	Passive                        = 0,
	Triggered                      = 1,
	Active                         = 2,
	EFortGameplayAbilityActivation_MAX = 3,
};

enum class EFortAIWeaponUsage : uint8
{
	NoWeaponUsage                  = 0,
	UsesRangedWeapon               = 1,
	UsesMeleeWeapon                = 2,
	EFortAIWeaponUsage_MAX         = 3,
};

enum class EFortGameplayAbilityMontageSectionToPlay : uint8
{
	FirstSection                   = 0,
	RandomSection                  = 1,
	TestedRandomSection            = 2,
	EFortGameplayAbilityMontageSectionToPlay_MAX = 3,
};

enum class EJumpBoostPackState : uint8
{
	Idle                           = 0,
	Boost                          = 1,
	Hovering                       = 2,
	Falling                        = 3,
	None                           = 4,
	EJumpBoostPackState_MAX        = 5,
};

enum class EMedicPackState : uint8
{
	Idle                           = 0,
	Active                         = 1,
	None                           = 2,
	EMedicPackState_MAX            = 3,
};

enum class EFortGameplayCueSourceCondition : uint8
{
	AnySource                      = 0,
	LocalPlayerSource              = 1,
	NonLocalPlayerSource           = 2,
	EFortGameplayCueSourceCondition_MAX = 3,
};

enum class EFortGameplayCueAttachType : uint8
{
	AttachToTarget                 = 0,
	DoNotAttach                    = 1,
	EFortGameplayCueAttachType_MAX = 2,
};

enum class ESetCVarType : uint8
{
	Numeric                        = 0,
	String                         = 1,
	ESetCVarType_MAX               = 2,
};

enum class EFortServerGameMode : uint8
{
	Idle                           = 0,
	LobbyPvE                       = 1,
	LobbyPvP                       = 2,
	ZonePvP                        = 3,
	ZonePvE                        = 4,
	EFortServerGameMode_MAX        = 5,
};

enum class EFortBanHammerNotificationAction : uint8
{
	BanAndKick                     = 0,
	Kick                           = 1,
	EFortBanHammerNotificationAction_MAX = 2,
};

enum class ETeamChatRoomState : uint8
{
	NotCreated                     = 0,
	Creating                       = 1,
	Created                        = 2,
	Timeout                        = 3,
	ETeamChatRoomState_MAX         = 4,
};

enum class EPlayerIndicatorFlags : uint8
{
	None                           = 0,
	Minimap                        = 1,
	WorldArrow                     = 2,
	WorldName                      = 4,
	EPlayerIndicatorFlags_MAX      = 5,
};

enum class EDefenderSpawnFailureReason : uint8
{
	None                           = 0,
	AllPlayerSlotsFull             = 1,
	DefendersNotUnlocked           = 2,
	CurrentlySimulatingDefender    = 3,
	NotOutpostOwner                = 4,
	EDefenderSpawnFailureReason_MAX = 5,
};

enum class EShowInGamePictureInPicture : uint8
{
	Default                        = 0,
	Hide                           = 1,
	Show                           = 2,
	EShowInGamePictureInPicture_MAX = 3,
};

enum class EFortScalabilityMode : uint8
{
	LowPower                       = 0,
	Frontend                       = 1,
	EFortScalabilityMode_MAX       = 2,
};

enum class ESavedAccountType : uint8
{
	None                           = 0,
	Facebook                       = 1,
	Google                         = 2,
	Epic                           = 3,
	Device                         = 4,
	Headless                       = 5,
	Refresh                        = 6,
	ESavedAccountType_MAX          = 7,
};

enum class EFortMobileFPSMode : uint8
{
	Mode_20Fps                     = 0,
	Mode_30Fps                     = 1,
	Mode_60Fps                     = 2,
	Mode_120Fps                    = 3,
	Mode_MAX                       = 4,
};

enum class EFortConsoleFPSMode : uint8
{
	Mode_30Fps                     = 0,
	Mode_30Fps_Unlocked            = 1,
	Mode_60Fps                     = 2,
	Mode_MAX                       = 3,
};

enum class EFortGiftWrapType : uint8
{
	System                         = 0,
	UserFree                       = 1,
	UserUnlock                     = 2,
	UserConsumable                 = 3,
	Message                        = 4,
	Ungift                         = 5,
	EFortGiftWrapType_MAX          = 6,
};

enum class ETimeLimitForReplayCinematic : uint8
{
	OpenTimeLimit                  = 0,
	DurationTimeLimit              = 1,
	DurationExtraTime              = 2,
	ETimeLimitForReplayCinematic_MAX = 3,
};

enum class EFortGlobalAction : uint8
{
	TrapConfirm                    = 0,
	TrapPicker                     = 1,
	BuildConfirm                   = 2,
	PerformBuildingEditInteraction = 3,
	PerformBuildingImprovementInteraction = 4,
	SwitchQuickBar                 = 5,
	Use                            = 6,
	Reload                         = 7,
	InventoryOrChatHold            = 8,
	GamepadChangeMaterialOrHarvestHold = 9,
	GamepadNextWeaponOrHarvestHold = 10,
	GamepadNextWeaponOrAltInteractOrHarvestHold = 11,
	ChangeMaterial                 = 12,
	Fire                           = 13,
	RotatePrimitiveClockwise       = 14,
	Gadget1                        = 15,
	Gadget2                        = 16,
	Ability1                       = 17,
	Ability2                       = 18,
	Ability3                       = 19,
	ToggleFullScreenMap            = 20,
	ToggleInventory                = 21,
	Jump                           = 22,
	Crouch                         = 23,
	ShoppingCartCoast              = 24,
	GolfCartEBrake                 = 25,
	GolfCartForward                = 26,
	GolfCartReverse                = 27,
	GolfCartHonk                   = 28,
	GamepadToggleHarvestOrHoldCreativePhone = 29,
	GamepadToggleCreativePhoneWeapon = 30,
	Count                          = 31,
	EFortGlobalAction_MAX          = 32,
};

enum class EChunkInstallState : uint8
{
	NotInstalled                   = 0,
	Pending                        = 1,
	Installed                      = 2,
	Unknown                        = 3,
	EChunkInstallState_MAX         = 4,
};

enum class EFortAccountLinkingUIConfig : uint8
{
	Disabled                       = 0,
	Default                        = 1,
	ExternalViewerOnly             = 2,
	FullExternal                   = 3,
	EFortAccountLinkingUIConfig_MAX = 4,
};

enum class EFortHelpContentLocation : uint8
{
	Top                            = 0,
	Bottom                         = 1,
	Max                            = 2,
};

enum class EFortHelpItemType : uint8
{
	Header                         = 0,
	Entry                          = 1,
	Max                            = 2,
};

enum class ESpecializationType : uint8
{
	Tier1                          = 0,
	Tier2                          = 1,
	Tier3                          = 2,
	Tier4                          = 3,
	NumTiers                       = 4,
	ESpecializationType_MAX        = 5,
};

enum class EFortHeroLoadoutPerkType : uint8
{
	Commander                      = 0,
	Standard                       = 1,
	EFortHeroLoadoutPerkType_MAX   = 2,
};

enum class EFortSupportBonusType : uint8
{
	Normal                         = 0,
	Tactical                       = 1,
	Max_None                       = 2,
	EFortSupportBonusType_MAX      = 3,
};

enum class EFortHexTileAdjacency : uint8
{
	North                          = 0,
	NorthEast                      = 1,
	SouthEast                      = 2,
	South                          = 3,
	SouthWest                      = 4,
	NorthWest                      = 5,
	Max_None                       = 6,
	EFortHexTileAdjacency_MAX      = 7,
};

enum class ESquadSlotType : uint8
{
	HeroSquadMissionDefender       = 0,
	SurvivorSquadLeadSurvivor      = 1,
	SurvivorSquadSurvivor          = 2,
	DefenderSquadMember            = 3,
	ExpeditionSquadMember          = 4,
	ESquadSlotType_MAX             = 5,
};

enum class EFortHomebaseSquadType : uint8
{
	AttributeSquad                 = 0,
	CombatSquad                    = 1,
	DefenderSquad                  = 2,
	ExpeditionSquad                = 3,
	Max_None                       = 4,
	EFortHomebaseSquadType_MAX     = 5,
};

enum class EHomebaseNodeType : uint8
{
	Gadget                         = 0,
	Utility                        = 1,
	Hidden                         = 2,
	EHomebaseNodeType_MAX          = 3,
};

enum class EFortHuskAnimType : uint8
{
	Basic                          = 0,
	Dwarf                          = 1,
	BlasterBig                     = 2,
	Weak                           = 3,
	TinyHead                       = 4,
	Beehive                        = 5,
	Husky                          = 6,
	Sploder                        = 7,
	Zapper                         = 8,
	EFortHuskAnimType_MAX          = 9,
};

enum class EMapCaptureMethod : int32
{
	None                           = 0,
	LiveCapture                    = 1,
	StaticCapture                  = 2,
	EMapCaptureMethod_MAX          = 3,
};

enum class EFortInputGameMode : uint8
{
	SaveTheWorld                   = 0,
	Athena                         = 1,
	EFortInputGameMode_MAX         = 2,
};

enum class EFortIntensityCurveSequenceType : uint8
{
	Sequence                       = 0,
	Loop                           = 1,
	Random                         = 2,
	Max_None                       = 3,
	EFortIntensityCurveSequenceType_MAX = 4,
};

enum class ETInteractionType : uint8
{
	IT_NoInteraction               = 0,
	IT_Simple                      = 1,
	IT_LongPress                   = 2,
	IT_BuildingEdit                = 3,
	IT_BuildingImprovement         = 4,
	IT_TrapPlacement               = 5,
	IT_MAX                         = 6,
};

enum class EItemEvolutionRestrictionReason : uint8
{
	NoEvolutions                   = 0,
	BelowMaximumLevel              = 1,
	VaultOverflow                  = 2,
	MissingCatalyst                = 3,
	MissingCosts                   = 4,
	NoRarityUpgrade                = 5,
	InUseByCrafting                = 6,
	EItemEvolutionRestrictionReason_MAX = 7,
};

enum class EItemUpgradeRestrictionReason : uint8
{
	NoAdditionalLevels             = 0,
	MaximumLevelAchieved           = 1,
	VaultOverflow                  = 2,
	EItemUpgradeRestrictionReason_MAX = 3,
};

enum class EFortTemplateAccess : uint8
{
	Normal                         = 0,
	Trusted                        = 1,
	Private                        = 2,
	EFortTemplateAccess_MAX        = 3,
};

enum class EItemProfileType : uint8
{
	Common                         = 0,
	Campaign                       = 1,
	Athena                         = 2,
	EItemProfileType_MAX           = 3,
};

enum class ELobbyMissionGeneratorDetailsRequirement : uint8
{
	Unknown                        = 0,
	NotRequired                    = 1,
	Required                       = 2,
	ELobbyMissionGeneratorDetailsRequirement_MAX = 3,
};

enum class ELootQuotaLevel : uint8
{
	Unlimited                      = 0,
	Level1                         = 1,
	Level2                         = 2,
	Level3                         = 3,
	Level4                         = 4,
	Level5                         = 5,
	Level6                         = 6,
	Level7                         = 7,
	Level8                         = 8,
	Level9                         = 9,
	Level10                        = 10,
	Level11                        = 11,
	Level12                        = 12,
	Level13                        = 13,
	Level14                        = 14,
	Level15                        = 15,
	Level16                        = 16,
	Level17                        = 17,
	NumLevels                      = 18,
	ELootQuotaLevel_MAX            = 19,
};

enum class EMarkableResult : uint8
{
	Markable                       = 0,
	Block                          = 1,
	Continue                       = 2,
	EMarkableResult_MAX            = 3,
};

enum class EFortMatchmakingType : uint8
{
	Gathering                      = 0,
	CriticalMission                = 1,
	QuickPlay                      = 2,
	Session                        = 3,
	EFortMatchmakingType_MAX       = 4,
};

enum class EFortSessionHelperJoinResult : uint8
{
	NoResult                       = 0,
	ReservationSuccess             = 1,
	ReservationFailure_PartyLimitReached = 2,
	ReservationFailure_IncorrectPlayerCount = 3,
	ReservationFailure_RequestTimedOut = 4,
	ReservationFailure_ReservationNotFound = 5,
	ReservationFailure_ReservationDenied = 6,
	ReservationFailure_ReservationDenied_Banned = 7,
	ReservationFailure_ReservationRequestCanceled = 8,
	ReservationFailure_ReservationInvalid = 9,
	ReservationFailure_BadSessionId = 10,
	ReservationFailure_ReservationDenied_ContainsExistingPlayers = 11,
	ReservationFailure_GeneralError = 12,
	ReservationFailure_NoSubsystem = 13,
	ReservationFailure_NoIdentity  = 14,
	ReservationFailure_InvalidSession = 15,
	ReservationFailure_InvalidUser = 16,
	ReservationFailure_EncryptionKey = 17,
	ReservationFailure_RefreshAuth = 18,
	ReservationFailure_AlreadyJoiningDuringReserve = 19,
	ReservationFailure_AlreadyJoiningDuringSkip = 20,
	JoinSessionSuccess             = 21,
	JoinSessionFailure_SessionIsFull = 22,
	JoinSessionFailure_SessionDoesNotExist = 23,
	JoinSessionFailure_CouldNotRetrieveAddress = 24,
	JoinSessionFailure_AlreadyInSession = 25,
	JoinSessionFailure_UnknownError = 26,
	JoinSessionFailure_InvalidSession = 27,
	JoinSessionFailure_InvalidSearchResultIndex = 28,
	JoinSessionFailure_AlreadyJoiningDuringJoin = 29,
	SearchPassFailure_NoSessionHelper = 30,
	SearchPassFailure_InvalidUser  = 31,
	SearchPassFailure_NoIdentity   = 32,
	SearchPassFailure_InvalidSearchResult = 33,
	SearchPassFailure_InvalidSearchResultIndex = 34,
	JoinSessionCanceled            = 35,
	EFortSessionHelperJoinResult_MAX = 36,
};

enum class EFortMatchmakingPool : uint8
{
	Any                            = 0,
	Desktop                        = 1,
	PS4                            = 2,
	XboxOne                        = 3,
	Mobile                         = 4,
	Test                           = 5,
	Switch                         = 6,
	Console                        = 7,
	All                            = 8,
	EFortMatchmakingPool_MAX       = 9,
};

enum class EFortMatchmakingPrivacyConfiguration : uint8
{
	UserPartyConfigured            = 0,
	ForcePrivate                   = 1,
	ForcePublic                    = 2,
	EFortMatchmakingPrivacyConfiguration_MAX = 3,
};

enum class EMatchmakingFlags : uint8
{
	None                           = 0,
	CreateNewOnly                  = 1,
	NoReservation                  = 2,
	Private                        = 4,
	UseWorldDataOwner              = 8,
	EMatchmakingFlags_MAX          = 9,
};

enum class EMatchmakingStartLocation : uint8
{
	Lobby                          = 0,
	Game                           = 1,
	CreateNew                      = 2,
	FindSingle                     = 3,
	EMatchmakingStartLocation_MAX  = 4,
};

enum class EMatchmakingSourceV2 : uint8
{
	None                           = 0,
	AthenaMatchmakingWidget        = 1,
	ActivityMatchmakingWidget      = 2,
	ReadyUpScreenWidget            = 3,
	Unknown                        = 4,
	EMatchmakingSourceV2_MAX       = 5,
};

enum class EMatchmakingCancelReasonV2 : uint8
{
	Explicit                       = 0,
	JoinedParty                    = 1,
	LeftParty                      = 2,
	PartyMemberJoined              = 3,
	PartyMemberLeft                = 4,
	PartyMemberCanceled            = 5,
	PlayReplay                     = 6,
	UIDestroyed                    = 7,
	PCDestroyed                    = 8,
	AppBackgrounded                = 9,
	HotfixOutdated                 = 10,
	TournamentOver                 = 11,
	NotInParty                     = 12,
	CrossplayBlocked               = 13,
	TournamentCrossplayBlocked     = 14,
	AccountLevelTooLow             = 15,
	FillNoCrossplay                = 16,
	Unknown                        = 17,
	EMatchmakingCancelReasonV2_MAX = 18,
};

enum class EMatchmakingErrorV2 : int32
{
	Success                        = 0,
	Canceled                       = 1,
	NeedUpdate                     = 2,
	VersionMismatch                = 3,
	NotLoggedIn                    = 4,
	NoIdentityInterface            = 5,
	NoSessionInterface             = 6,
	AlreadyInSession               = 7,
	FindSessionFailure             = 8,
	FailedToQueryEncryptionKey     = 9,
	FailedToRefreshAuthToken       = 10,
	FailedToCleanupSession         = 11,
	FailedToJoinSession            = 12,
	FailedToTravelToSession        = 13,
	Unauthorized                   = 14,
	BannedFromAthena               = 15,
	BannedFromAthenaForExploit     = 16,
	BannedFromAthenaForTeaming     = 17,
	BannedFromAthenaForTeamKilling = 18,
	InvalidCustomMatchKey          = 19,
	FailedToContactGameServices    = 20,
	FailedToConnectToMMS           = 21,
	MMSCommunicationIssue          = 22,
	ServiceReturnedError           = 23,
	PlaylistNoLongerAvailable      = 24,
	CrossplayUnsetWithInputDevicePoolShift = 25,
	CrossplayNeededForTournamentMatch = 26,
	MatchmakingDisabled            = 27,
	AccountLevelTooLow             = 28,
	JoinInProgressError            = 29,
	SpectateInProgressError        = 30,
	UnknownError                   = 31,
	EMatchmakingErrorV2_MAX        = 32,
};

enum class EBadMatchType : uint8
{
	None                           = 0,
	Ping                           = 1,
	PacketLoss                     = 2,
	NotMonitored                   = 3,
	EBadMatchType_MAX              = 4,
};

enum class EAthenaFilterDisplayType : uint8
{
	UseCategoryName                = 0,
	ShowFilterString               = 1,
	EAthenaFilterDisplayType_MAX   = 2,
};

enum class ESocialImportPanelPlatform : uint8
{
	Facebook                       = 0,
	VK                             = 1,
	Steam                          = 2,
	Xbox                           = 3,
	Playstation                    = 4,
	Switch                         = 5,
	ESocialImportPanelPlatform_MAX = 6,
};

enum class EPublishStatus : uint8
{
	Banned                         = 0,
	CannotPublish                  = 1,
	NeedsCreatorName               = 2,
	CanPublishProvisionally        = 3,
	CanPublish                     = 4,
	EPublishStatus_MAX             = 5,
};

enum class ETwitchViewerStatusType : uint8
{
	TwitchViewerStatus_Unknown     = 0,
	TwitchViewerStatus_Nonsubscriber = 1,
	TwitchViewerStatus_Subscriber  = 2,
	TwitchViewerStatus_Broadcaster = 3,
	TwitchViewerStatus_Max         = 4,
};

enum class EMegaStormState : uint8
{
	GatheringActorList             = 0,
	DamagingActors                 = 1,
	EMegaStormState_MAX            = 2,
};

enum class EMinigameGameEndCallout : uint8
{
	WinLose                        = 0,
	Placement                      = 1,
	EMinigameGameEndCallout_MAX    = 2,
};

enum class EMinigameScoreboardStates : uint8
{
	RoundEndDisplayWinner          = 0,
	GameEndDisplayWinner           = 1,
	RoundEndDisplayScoreboard      = 2,
	GameEndDisplayScoreboard       = 3,
	Max                            = 4,
};

enum class EMinigameFullscreenMapWidgetType : uint8
{
	Default_Map                    = 0,
	Creative_Scoreboard            = 1,
	EMinigameFullscreenMapWidgetType_MAX = 2,
};

enum class EFortMinigameExec : uint8
{
	Yes                            = 0,
	No                             = 1,
	EFortMinigameExec_MAX          = 2,
};

enum class EMinigamePlayerPersistence : uint8
{
	None                           = 0,
	PartyLeaderOnly                = 1,
	AllPlayers                     = 2,
	EMinigamePlayerPersistence_MAX = 3,
};

enum class EMinigameWinCondition : uint8
{
	MostRoundWins                  = 0,
	MostScoreWins                  = 1,
	EMinigameWinCondition_MAX      = 2,
};

enum class EMinigameTeamListType : uint8
{
	Blacklist                      = 0,
	Whitelist                      = 1,
	EMinigameTeamListType_MAX      = 2,
};

enum class EMinigameCaptureObjectiveState : uint8
{
	NotCaptured                    = 0,
	Captured                       = 1,
	EMinigameCaptureObjectiveState_MAX = 2,
};

enum class EObjectiveType : uint8
{
	DestructionObjective           = 0,
	CaptureObjective               = 1,
	EObjectiveType_MAX             = 2,
};

enum class ETrackedObjectiveQuery : uint8
{
	All                            = 0,
	ExactTeam                      = 1,
	Friendly                       = 2,
	Neutral                        = 3,
	Hostile                        = 4,
	NotFriendly                    = 5,
	MAX                            = 6,
};

enum class EMinigameScoreType : uint8
{
	Time                           = 0,
	PointTotal                     = 1,
	EMinigameScoreType_MAX         = 2,
};

enum class EFortMinigameStatDefinitionHelper : uint8
{
	Unknown                        = 0,
	PLAYER_Eliminations            = 1,
	PLAYER_Health                  = 2,
	PLAYER_Assists                 = 3,
	PLAYER_Deaths                  = 4,
	CHALLENGE_All                  = 5,
	AI_Eliminations                = 6,
	SCORE                          = 7,
	DESTRUCTABLE_All               = 8,
	EFortMinigameStatDefinitionHelper_MAX = 9,
};

enum class EFortMinigameStatOperation : uint8
{
	Equal                          = 0,
	Less                           = 1,
	Greater                        = 2,
	LessOrEqual                    = 3,
	GreaterOrEqual                 = 4,
	EFortMinigameStatOperation_MAX = 5,
};

enum class EFortMinigameStatScope : uint8
{
	Group                          = 0,
	Team                           = 1,
	Player                         = 2,
	EFortMinigameStatScope_MAX     = 3,
};

enum class EBuildingMode : uint8
{
	None                           = 0,
	BuildingsOnly                  = 1,
	TrapsOnly                      = 2,
	All                            = 3,
	EBuildingMode_MAX              = 4,
};

enum class EFortMinigameClassResetType : uint8
{
	Never                          = 0,
	RoundEnd                       = 1,
	GameEnd                        = 2,
	PlayerDeath                    = 3,
	EFortMinigameClassResetType_MAX = 4,
};

enum class EFortMinigameClassSlot : uint8
{
	None                           = 255,
	EFortMinigameClassSlot_MAX     = 256,
};

enum class EFortMinigamePostGameSpawnLocationSetting : uint8
{
	IslandStart                    = 0,
	PreGameLocation                = 1,
	EFortMinigamePostGameSpawnLocationSetting_MAX = 2,
};

enum class EFortMinigamePlayerSpawnLocationSetting : uint8
{
	SpawnPads                      = 0,
	Air                            = 1,
	CurrentLocation                = 2,
	EFortMinigamePlayerSpawnLocationSetting_MAX = 3,
};

enum class EFortMiniMapIconRotation : uint8
{
	EFMMIR_None                    = 0,
	EFMMIR_Absolute                = 1,
	EFMMIR_Relative                = 2,
	EFMMIR_MAX                     = 3,
};

enum class EFortMiniMapContext : uint8
{
	EFMC_MiniMap                   = 0,
	EFMC_FullScreenMap             = 1,
	EFMC_MAX                       = 2,
};

enum class EFortMiniMapHeight : uint8
{
	EFMH_Equal                     = 0,
	EFMH_Below                     = 1,
	EFMH_Above                     = 2,
	EFMH_MAX                       = 3,
};

enum class EFortCheatMissionGenType : uint8
{
	NewGeneration                  = 0,
	OldGeneration                  = 1,
	Max_None                       = 2,
	EFortCheatMissionGenType_MAX   = 3,
};

enum class EFortOptionGenerationResult : uint8
{
	NoOptionsGenerated             = 0,
	NewOptionsGenerated            = 1,
	ExistingOptionsGenerated       = 2,
	EFortOptionGenerationResult_MAX = 3,
};

enum class EPollActorsInVolumeTypes : uint8
{
	DesignerPlacedOnly             = 0,
	PlayerBuiltOnly                = 1,
	All                            = 2,
	EPollActorsInVolumeTypes_MAX   = 3,
};

enum class EMissionReplyTypes : uint8
{
	Handled                        = 0,
	NotHandled                     = 1,
	EMissionReplyTypes_MAX         = 2,
};

enum class EMissionStormShieldState : uint8
{
	IDLE                           = 0,
	GROWING                        = 1,
	SHRINKING                      = 2,
	MAX                            = 3,
};

enum class ETimerOverrideSetting : uint8
{
	DefaultBehavior                = 0,
	ForceShow                      = 1,
	ForceHide                      = 2,
	ShowAtEnd                      = 3,
	ETimerOverrideSetting_MAX      = 4,
};

enum class EFortMtxPlatform : uint8
{
	Epic                           = 0,
	PSN                            = 1,
	Live                           = 2,
	Shared                         = 3,
	EpicPC                         = 4,
	EpicPCKorea                    = 5,
	IOSAppStore                    = 6,
	EpicAndroid                    = 7,
	Nintendo                       = 8,
	WeGame                         = 9,
	Samsung                        = 10,
	EFortMtxPlatform_MAX           = 11,
};

enum class EFortMusicSectionType : uint8
{
	Intro                          = 0,
	Loop                           = 1,
	Outro                          = 2,
	Max_None                       = 3,
	EFortMusicSectionType_MAX      = 4,
};

enum class EFortMusicSectionStopBehavior : uint8
{
	Crossfade                      = 0,
	AllowFadeOut                   = 1,
	EFortMusicSectionStopBehavior_MAX = 2,
};

enum class EFortMusicCombatIntensity : uint8
{
	Low                            = 0,
	Medium                         = 1,
	High                           = 2,
	VeryHigh                       = 3,
	Max_None                       = 4,
	EFortMusicCombatIntensity_MAX  = 5,
};

enum class EMusicChannel : uint8
{
	VoiceA                         = 0,
	VoiceB                         = 1,
	Max_None                       = 2,
	EMusicChannel_MAX              = 3,
};

enum class EMusicFadeStyles : uint8
{
	CrossFade                      = 0,
	FadeOutThenIn                  = 1,
	Max_None                       = 2,
	EMusicFadeStyles_MAX           = 3,
};

enum class EMutatorListInitState : int32
{
	Default                        = 0,
	Enabled                        = 1,
	Disabled                       = 2,
	EMutatorListInitState_MAX      = 3,
};

enum class EFortAreaFlag : uint8
{
	Default                        = 0,
	Obstacle                       = 1,
	Smashable                      = 2,
	Unwalkable                     = 3,
	Interactable                   = 4,
	EFortAreaFlag_MAX              = 5,
};

enum class EFortNavLinkPattern : uint8
{
	Floor                          = 0,
	Stairs                         = 1,
	Roof                           = 2,
	Manual                         = 3,
	EFortNavLinkPattern_MAX        = 4,
};

enum class EFortNamedNavmesh : uint8
{
	Husk                           = 0,
	Smasher                        = 1,
	MAX                            = 2,
};

enum class EFXType : uint8
{
	GenericAnimNotify              = 0,
	TrailAnimNotify                = 1,
	WeaponImpactEffect             = 2,
	Contrail                       = 3,
	Emote                          = 4,
	Trap                           = 5,
	Skin                           = 6,
	Glider                         = 7,
	Vehicle                        = 8,
	BackpackBling                  = 9,
	Water                          = 10,
	LootChest                      = 11,
	EnvironmentalAmbient           = 12,
	WeaponRangedBeam               = 13,
	WeaponBulletShells             = 14,
	WeaponMuzzleFlashes            = 15,
	EFXType_MAX                    = 16,
};

enum class EOutpostBuildings : uint8
{
	StormShield                    = 0,
	HarvestingOptimizer            = 1,
	StorageVault                   = 2,
	POST                           = 3,
	EOutpostBuildings_MAX          = 4,
};

enum class EPartyMemberVoiceChatStatus : uint8
{
	Disabled                       = 0,
	Enabled                        = 1,
	PartyVoice                     = 2,
	GameVoice                      = 3,
	PlatformVoice                  = 4,
	EPartyMemberVoiceChatStatus_MAX = 5,
};

enum class EGameReadiness : uint8
{
	NotReady                       = 0,
	Ready                          = 1,
	SittingOut                     = 2,
	EGameReadiness_MAX             = 3,
};

enum class ESquadChangeType : uint8
{
	JoinSquad                      = 0,
	BenchSelf                      = 1,
	UnbenchSelf                    = 2,
	Swap                           = 3,
	None                           = 4,
	ESquadChangeType_MAX           = 5,
};

enum class EPathUndermineEvent : uint8
{
	Predicted                      = 0,
	Started                        = 1,
	Finished                       = 2,
	EPathUndermineEvent_MAX        = 3,
};

enum class EPathObstacleAction : uint8
{
	Melee                          = 0,
	Ignore                         = 1,
	AbortMoveAsFailed              = 2,
	FinishMoveAsSucceeded          = 3,
	EPathObstacleAction_MAX        = 4,
};

enum class EWardAffectType : uint8
{
	AffectsBothStartAndEndPoints   = 0,
	AffectsOnlyStartPoints         = 1,
	AffectsOnlyEndPoints           = 2,
	EWardAffectType_MAX            = 3,
};

enum class EFortControlRecoveryBehavior : uint8
{
	DefaultControl                 = 0,
	LimitedControl                 = 1,
	ChainControl                   = 2,
	EFortControlRecoveryBehavior_MAX = 3,
};

enum class EFortPawnPushSize : uint8
{
	FFPS_Normal                    = 0,
	FPPS_Player                    = 1,
	FPPS_Large                     = 2,
	FPPS_SuperLarge                = 3,
	EFortPawnPushSize_MAX          = 4,
};

enum class EFortAnnouncerTeamVocalChords : uint8
{
	Team1                          = 0,
	Team2                          = 1,
	Max_None                       = 2,
	EFortAnnouncerTeamVocalChords_MAX = 3,
};

enum class EFortMantisBranchRule : uint8
{
	Off                            = 0,
	Any                            = 1,
	Starter                        = 2,
	EFortMantisBranchRule_MAX      = 3,
};

enum class EFortMantisNotifyWindow : uint8
{
	Invalid                        = 0,
	Input                          = 1,
	Execution                      = 2,
	Damage                         = 3,
	EFortMantisNotifyWindow_MAX    = 4,
};

enum class EFortMantisNotifyEvent : uint8
{
	Invalid                        = 0,
	Branch                         = 1,
	EFortMantisNotifyEvent_MAX     = 2,
};

enum class EFortBadMatchTeamSize : uint8
{
	Unspecified                    = 0,
	SmallTeam                      = 1,
	LargeTeam                      = 2,
	EFortBadMatchTeamSize_MAX      = 3,
};

enum class EFortBadMatchTriggerOperation : uint8
{
	LessThan                       = 0,
	LessThanOrEqual                = 1,
	Equal                          = 2,
	GreaterThan                    = 3,
	GreaterThanOrEqual             = 4,
	EFortBadMatchTriggerOperation_MAX = 5,
};

enum class EFortRewardType : uint8
{
	Default                        = 0,
	Missed                         = 1,
	Max_None                       = 2,
	EFortRewardType_MAX            = 3,
};

enum class EFortReplicatedStat : uint8
{
	MonsterKills                   = 0,
	MonsterDamagePoints            = 1,
	PlayerKills                    = 2,
	WoodGathered                   = 3,
	StoneGathered                  = 4,
	MetalGathered                  = 5,
	Deaths                         = 6,
	BluGloActivity                 = 7,
	BuildingsBuilt                 = 8,
	BuildingsBuilt_Wood            = 9,
	BuildingsBuilt_Stone           = 10,
	BuildingsBuilt_Metal           = 11,
	BuildingsUpgraded_Wood2        = 12,
	BuildingsUpgraded_Wood3        = 13,
	BuildingsUpgraded_Stone2       = 14,
	BuildingsUpgraded_Stone3       = 15,
	BuildingsUpgraded_Metal2       = 16,
	BuildingsUpgraded_Metal3       = 17,
	BuildingsDestroyed             = 18,
	Repair_Wood                    = 19,
	Repair_Stone                   = 20,
	Repair_Metal                   = 21,
	FlagsCaptured                  = 22,
	FlagsReturned                  = 23,
	ContainersLooted               = 24,
	CraftingPoints                 = 25,
	TrapPlacementPoints            = 26,
	TrapActivationPoints           = 27,
	TotalScore                     = 28,
	OldTotalScore                  = 29,
	CombatScore                    = 30,
	BuildingScore                  = 31,
	UtilityScore                   = 32,
	BadgesScore                    = 33,
	None                           = 34,
	MAX                            = 35,
};

enum class EFortReplenishmentType : uint8
{
	Restricted                     = 0,
	ClampMin                       = 1,
	Add                            = 2,
	Ability                        = 3,
	EFortReplenishmentType_MAX     = 4,
};

enum class EFortPickupTossState : uint8
{
	NotTossed                      = 0,
	InProgress                     = 1,
	AtRest                         = 2,
	EFortPickupTossState_MAX       = 3,
};

enum class EFortPickupSpawnSource : uint8
{
	Unset                          = 0,
	PlayerElimination              = 1,
	Chest                          = 2,
	SupplyDrop                     = 3,
	AmmoBox                        = 4,
	Drone                          = 5,
	ItemSpawner                    = 6,
	EFortPickupSpawnSource_MAX     = 7,
};

enum class EFortPickupSourceTypeFlag : uint8
{
	Other                          = 0,
	Player                         = 1,
	Destruction                    = 2,
	Container                      = 4,
	AI                             = 8,
	Tossed                         = 16,
	FloorLoot                      = 32,
	EFortPickupSourceTypeFlag_MAX  = 33,
};

enum class EManagedPickupContext : uint8
{
	Unknown                        = 0,
	PlayerDropped                  = 1,
	Overflow                       = 2,
	Spawned                        = 3,
	EManagedPickupContext_MAX      = 4,
};

enum class EManagedPickupBucket : uint8
{
	Default                        = 0,
	Junk                           = 1,
	Normal                         = 2,
	Important                      = 3,
	EManagedPickupBucket_MAX       = 4,
};

enum class ELookAtType : uint8
{
	ScanAround                     = 0,
	Investigate                    = 1,
	HeardSound                     = 2,
	MAX                            = 3,
};

enum class EPerceptionSoundType : uint8
{
	Default                        = 0,
	Explosion                      = 1,
	ProjectileFlyBy                = 2,
	ProjectileImpact               = 3,
	WeaponFiring                   = 4,
	MAX                            = 5,
};

enum class ETrackingOffsetModifierCurve : uint8
{
	Default                        = 0,
	CombatStart                    = 1,
	TargetLowHealth                = 2,
	MAX                            = 3,
};

enum class EPerceptionState : uint8
{
	Threat_Seeing                  = 0,
	Threat_LKP                     = 1,
	Threat_Alerted                 = 2,
	ObstacleIncoming               = 3,
	ObstacleBlockedBy              = 4,
	Unknown                        = 5,
	Count                          = 5,
	Threat_Count                   = 3,
	EPerceptionState_MAX           = 6,
};

enum class EStimType : uint8
{
	Seeing                         = 0,
	Seen                           = 1,
	MightHaveSeen                  = 2,
	Hurt                           = 3,
	Heard                          = 4,
	Obstacle                       = 5,
	Enemy                          = 6,
	Unknown                        = 7,
	Count                          = 7,
	EStimType_MAX                  = 8,
};

enum class EAlertLevel : uint8
{
	Unaware                        = 0,
	Alerted                        = 1,
	LKP                            = 2,
	Threatened                     = 3,
	Count                          = 4,
	EAlertLevel_MAX                = 5,
};

enum class EDBNOPlayStyle : uint8
{
	Thirsty                        = 0,
	Default                        = 1,
	Passive                        = 2,
	ThristyButPassiveOnPlayers     = 3,
	DefaultButPassiveOnPlayers     = 4,
	EDBNOPlayStyle_MAX             = 5,
};

enum class EFortCrucibleWhitelistLevel : uint8
{
	None                           = 0,
	Basic                          = 1,
	Advanced                       = 2,
	EFortCrucibleWhitelistLevel_MAX = 3,
};

enum class ECreativeQuickbarSlots : uint8
{
	Phone                          = 0,
	ECreativeQuickbarSlots_MAX     = 1,
};

enum class EQuickbarSlots : uint8
{
	HarvestingTool                 = 0,
	Weapon1                        = 1,
	Weapon2                        = 2,
	Weapon3                        = 3,
	Gadget1                        = 4,
	Gadget2                        = 5,
	Ability1                       = 6,
	Ability2                       = 7,
	Ability3                       = 8,
	EQuickbarSlots_MAX             = 9,
};

enum class EFortPickerToDisplay : uint8
{
	TrapPicker                     = 0,
	WeaponPicker                   = 1,
	SocialPicker                   = 2,
	ChatPicker                     = 3,
	NotePicker                     = 4,
	EmotePicker                    = 5,
	SquadQuickChatPicker           = 6,
	BattleLabDevicePicker          = 7,
	EFortPickerToDisplay_MAX       = 8,
};

enum class EMapZoomingMode : uint8
{
	None                           = 0,
	ZoomingIn                      = 1,
	ZoomingOut                     = 2,
	EMapZoomingMode_MAX            = 3,
};

enum class EFortIdleCheckResult : uint8
{
	Invalid                        = 0,
	ActivityDetected               = 1,
	Idle                           = 2,
	IdlePastMaxTime                = 3,
	EFortIdleCheckResult_MAX       = 4,
};

enum class EHighlightReelTypes : uint8
{
	Generic                        = 0,
	GameSummary                    = 1,
	ExtendedGameSummary            = 2,
	Builder                        = 3,
	FastMover                      = 4,
	LongDistance                   = 5,
	Multikill                      = 6,
	StormCloud                     = 7,
	EHighlightReelTypes_MAX        = 8,
};

enum class ECameraStateRestoreReason : uint8
{
	Unknown                        = 0,
	ChangedFollowTarget            = 1,
	ChangedCameraType              = 2,
	InvokedHotKey                  = 3,
	Scrubbed                       = 4,
	Restored                       = 5,
	SpecialAction                  = 6,
	MAX                            = 7,
};

enum class EFollow : uint8
{
	NextTeammate                   = 0,
	PreviousTeammate               = 1,
	SpecialActor                   = 2,
	EFollow_MAX                    = 3,
};

enum class EFortMotionYawAxis : uint8
{
	Yaw                            = 0,
	Roll                           = 1,
	EFortMotionYawAxis_MAX         = 2,
};

enum class EFortInputActionGroup : uint8
{
	AllModes                       = 0,
	Combat                         = 1,
	Building                       = 2,
	Movement                       = 3,
	Edit                           = 4,
	Death                          = 5,
	Cinematic                      = 6,
	Picker                         = 7,
	Other                          = 8,
	Interaction                    = 9,
	ShoppingCart                   = 10,
	ShoppingCartDriver             = 11,
	ShoppingCartPassenger          = 12,
	Cannon                         = 13,
	CannonDriver                   = 14,
	CannonPassenger                = 15,
	GolfCart                       = 16,
	GolfCartDriver                 = 17,
	GolfCartPassenger              = 18,
	QuadCrasher                    = 19,
	QuadCrasherDriver              = 20,
	QuadCrasherPassenger           = 21,
	Biplane                        = 22,
	BiplaneDriver                  = 23,
	BiplanePassenger               = 24,
	Hamsterball                    = 25,
	Jackal                         = 26,
	Ostrich                        = 27,
	OstrichDriver                  = 28,
	OstrichPassenger               = 29,
	Meatball                       = 30,
	MeatballDriver                 = 31,
	MeatballPassenger              = 32,
	MountedTurret                  = 33,
	Spectating                     = 34,
	FullscreenMap                  = 35,
	CreativeAll                    = 36,
	CreativeMoveToolEquipped       = 37,
	CreativeMoveObjectsFreely      = 38,
	CreativeMoveBuildingsOnGrid    = 39,
	CreativeFlying                 = 40,
	CreativeIslandPanel            = 41,
	PropSelectorEquipped           = 42,
	DBNOCarryStart                 = 43,
	DBNOCarryStop                  = 44,
	DBNOCarry                      = 45,
	InteractionStart               = 46,
	InteractionStop                = 47,
	BattleLab                      = 48,
	CombatAndBuilding              = 49,
	EFortInputActionGroup_MAX      = 50,
};

enum class EFortInputActionType : uint8
{
	Press                          = 0,
	Click                          = 1,
	Hold                           = 2,
	Release                        = 3,
	EFortInputActionType_MAX       = 4,
};

enum class EFortInputDevice : uint8
{
	Mouse                          = 0,
	Keyboard                       = 1,
	Gamepad                        = 2,
	Touch                          = 3,
	EFortInputDevice_MAX           = 4,
};

enum class EItemInteractionStatus : uint8
{
	Interrupted                    = 0,
	Completed                      = 1,
	TimedOut                       = 2,
	EItemInteractionStatus_MAX     = 3,
};

enum class EItemInteractionType : uint8
{
	Search                         = 0,
	LockOnSearch                   = 1,
	None                           = 2,
	EItemInteractionType_MAX       = 3,
};

enum class EFortDBNOCarryEvent : uint8
{
	PickedUp                       = 0,
	Dropped                        = 1,
	Thrown                         = 2,
	EFortDBNOCarryEvent_MAX        = 3,
};

enum class EBodyPartVisibilityGrouping : uint8
{
	AllParts                       = 0,
	AllButHead                     = 1,
	OnlyBackBling                  = 2,
	BackBlingAndCharm              = 3,
	EBodyPartVisibilityGrouping_MAX = 4,
};

enum class EBackpackType : uint8
{
	Jetpack                        = 0,
	Medic                          = 1,
	StormTracker                   = 2,
	Glider                         = 3,
	EBackpackType_MAX              = 4,
};

enum class EFortPawnState : uint8
{
	Default                        = 0,
	InCombat                       = 1,
	DBNO                           = 2,
	IsReviving                     = 4,
	BeingRevived                   = 8,
	Dead                           = 16,
	EFortPawnState_MAX             = 17,
};

enum class EFortPlayerSurveyAnalyticsFinishReason : uint8
{
	Submitted                      = 0,
	Canceled                       = 1,
	EFortPlayerSurveyAnalyticsFinishReason_MAX = 2,
};

enum class EFortPlayerSurveyQuestionPresentationStyle : uint8
{
	Invalid                        = 0,
	Standard                       = 1,
	MultipleChoice_Rating          = 2,
	Num                            = 3,
	EFortPlayerSurveyQuestionPresentationStyle_MAX = 4,
};

enum class EFortPlayerSurveyQuestionType : uint8
{
	Invalid                        = 0,
	MultipleChoice                 = 1,
	MultipleSelection              = 2,
	FreeFormText                   = 3,
	Num                            = 4,
	EFortPlayerSurveyQuestionType_MAX = 5,
};

enum class EVehicleTrickType : uint8
{
	None                           = 0,
	RollIncrement                  = 1,
	ReverseRollIncrement           = 2,
	YawIncrement                   = 3,
	ReverseYawIncrement            = 4,
	PitchIncrement                 = 5,
	ReversePitchIncrement          = 6,
	HeightIncrement                = 7,
	DistanceIncrement              = 8,
	AirTimeIncrement               = 9,
	ShoppingCart_Flying            = 10,
	ShoppingCart_Stooping          = 11,
	StartedLanding                 = 12,
	FailedLanding                  = 13,
	Cancelled                      = 14,
	StuckLanding                   = 15,
	Count                          = 16,
	EVehicleTrickType_MAX          = 17,
};

enum class EVehicleTrickAxis : uint8
{
	X                              = 0,
	XNeg                           = 1,
	Y                              = 2,
	YNeg                           = 3,
	Z                              = 4,
	ZNeg                           = 5,
	Count                          = 6,
	EVehicleTrickAxis_MAX          = 7,
};

enum class EFortGameType : int32
{
	BR                             = 0,
	Creative                       = 1,
	CreativeLTM                    = 2,
	Playground                     = 3,
	STW                            = 4,
	BRArena                        = 5,
	BRLTM                          = 6,
	MAX                            = 7,
};

enum class EDBNOType : uint8
{
	On                             = 0,
	Off                            = 1,
	NotWhenRespawning              = 2,
	EDBNOType_MAX                  = 3,
};

enum class EWeaponSelectionPreservationType : uint8
{
	KeepSelectionWhenRespawning    = 0,
	NeverKeepSelection             = 1,
	EWeaponSelectionPreservationType_MAX = 2,
};

enum class ERewardPlacementBonusType : uint8
{
	Solo                           = 0,
	Duo                            = 1,
	Squad                          = 2,
	LargeTeam                      = 3,
	None                           = 4,
	TwoTeam                        = 5,
	MediumTeam                     = 6,
	QuickSolo                      = 7,
	QuickDuo                       = 8,
	QuickSquad                     = 9,
	QuickLargeTeam                 = 10,
	QuickTwoTeam                   = 11,
	QuickMediumTeam                = 12,
	SinglePlacement                = 13,
	ERewardPlacementBonusType_MAX  = 14,
};

enum class ERewardTimePlayedType : uint8
{
	Default                        = 0,
	NoReward                       = 1,
	FlatValue                      = 2,
	ERewardTimePlayedType_MAX      = 3,
};

enum class EAthenaWinCondition : uint8
{
	LastManStanding                = 0,
	LastManStandingIncludingAllies = 1,
	TimedTeamFinalFight            = 2,
	FirstToGoalScore               = 3,
	TimedLastMenStanding           = 4,
	MutatorControlled              = 5,
	MutatorControlledGoalScore     = 6,
	MutatorControlledChinaSupported = 7,
	EAthenaWinCondition_MAX        = 8,
};

enum class EAthenaRespawnLocation : uint8
{
	LastDeath                      = 0,
	CreativePlayerStart            = 1,
	EAthenaRespawnLocation_MAX     = 2,
};

enum class EAthenaRespawnType : uint8
{
	None                           = 0,
	InfiniteRespawn                = 1,
	InfiniteRespawnExceptStorm     = 2,
	EAthenaRespawnType_MAX         = 3,
};

enum class ECustomGameVoiceChannel : uint8
{
	Squad                          = 0,
	FullTeam                       = 1,
	ECustomGameVoiceChannel_MAX    = 2,
};

enum class EPlaylistVisibilityState : uint8
{
	Enabled                        = 1,
	Disabled                       = 2,
	EnabledButInvisible            = 3,
	Hidden                         = 4,
	EPlaylistVisibilityState_MAX   = 5,
};

enum class EPlaylistAdvertisementType : uint8
{
	None                           = 0,
	New                            = 1,
	Updated                        = 2,
	EPlaylistAdvertisementType_MAX = 3,
};

enum class EPlaysetOffsetType : uint8
{
	CustomOffsetFromCorner         = 0,
	Center                         = 1,
	EPlaysetOffsetType_MAX         = 2,
};

enum class EProfileGoState : uint8
{
	None                           = 0,
	SettlingLocation               = 1,
	RunningCommands                = 2,
	CompletedScenario              = 3,
	Summary                        = 4,
	Completed                      = 5,
	EProfileGoState_MAX            = 6,
};

enum class EProjectileWaterHitBehavior : uint8
{
	Overlap                        = 0,
	StopIfStopSimulatingOnHit      = 1,
	StopOnOverlap                  = 2,
	EProjectileWaterHitBehavior_MAX = 3,
};

enum class EFortIdleDetectionState : uint8
{
	Disabled                       = 0,
	Default                        = 1,
	Suspicious                     = 2,
	Problematic                    = 3,
	Inactive                       = 4,
	EFortIdleDetectionState_MAX    = 5,
};

enum class EFortPointsFromNavGraphGoalPathDistanceFilterOperator : uint8
{
	AllGoalsInRange                = 0,
	AnyGoalInRange                 = 1,
	EFortPointsFromNavGraphGoalPathDistanceFilterOperator_MAX = 2,
};

enum class EFortTestGoalActorDot : uint8
{
	Dot3D                          = 0,
	Dot2D                          = 1,
	EFortTestGoalActorDot_MAX      = 2,
};

enum class EDistanceMode : uint8
{
	DistItemToContext              = 0,
	DistItemGoalActorToContext     = 1,
	DistItemToItemGoalActor        = 2,
	EDistanceMode_MAX              = 3,
};

enum class ECountAIAssignedToType : uint8
{
	Goal                           = 0,
	Actor                          = 1,
	Assignment                     = 2,
	ECountAIAssignedToType_MAX     = 3,
};

enum class ETwoPointSolverRotationA : uint8
{
	PointAToQuerier                = 0,
	QuerierToPointA                = 1,
	PointAToQuerierWithRandomOffset = 2,
	QuerierToPointAWithRandomOffset = 3,
	Custom                         = 4,
	ETwoPointSolverRotationA_MAX   = 5,
};

enum class EObjectiveStatusUpdateType : uint8
{
	Always                         = 0,
	OnPercent                      = 1,
	OnComplete                     = 2,
	Never                          = 3,
	EObjectiveStatusUpdateType_MAX = 4,
};

enum class EFortQuestRewardType : uint8
{
	BasicRewards                   = 0,
	BasicPlusSingleChoice          = 1,
	EFortQuestRewardType_MAX       = 2,
};

enum class EFortQuestType : uint8
{
	Task                           = 0,
	Optional                       = 1,
	DailyQuest                     = 2,
	TransientQuest                 = 3,
	SurvivorQuest                  = 4,
	Achievement                    = 5,
	Onboarding                     = 6,
	StreamBroadcaster              = 7,
	StreamViewer                   = 8,
	StreamSubscriber               = 9,
	Athena                         = 10,
	AthenaDailyQuest               = 11,
	AthenaEvent                    = 12,
	AthenaChallengeBundleQuest     = 13,
	All                            = 14,
	EFortQuestType_MAX             = 15,
};

enum class ECosmeticType : uint8
{
	Image                          = 0,
	Widget                         = 1,
	ECosmeticType_MAX              = 2,
};

enum class EFortQuestMapNodeLabelPosition : uint8
{
	Top                            = 0,
	Bottom                         = 1,
	EFortQuestMapNodeLabelPosition_MAX = 2,
};

enum class EFortQuestMapNodeType : uint8
{
	MandatoryQuest                 = 0,
	SideQuest                      = 1,
	EFortQuestMapNodeType_MAX      = 2,
};

enum class EFortQuestObjectiveItemEvent : uint8
{
	Craft                          = 0,
	Collect                        = 1,
	Acquire                        = 2,
	Consume                        = 3,
	OpenCardPack                   = 4,
	PurchaseCardPack               = 5,
	Convert                        = 6,
	Upgrade                        = 7,
	UpgradeRarity                  = 8,
	QuestComplete                  = 9,
	AssignWorker                   = 10,
	LevelUpCollectionBook          = 11,
	LevelUpAthenaSeason            = 12,
	LevelUpBattlePass              = 13,
	GainAthenaSeasonXp             = 14,
	HasItem                        = 15,
	HasAccumulatedItem             = 16,
	SlotInCollection               = 17,
	AlterationRespec               = 18,
	AlterationUpgrade              = 19,
	HasCompletedQuest              = 20,
	HasAssignedWorker              = 21,
	HasUpgraded                    = 22,
	HasConverted                   = 23,
	HasUpgradedRarity              = 24,
	HasLeveledUpCollectionBook     = 25,
	SlotHeroInLoadout              = 26,
	HasLeveledUpAthenaSeason       = 27,
	HasLeveledUpBattlePass         = 28,
	HasGainedAthenaSeasonXp        = 29,
	MinigameTime                   = 30,
	Max_None                       = 31,
	EFortQuestObjectiveItemEvent_MAX = 32,
};

enum class EFortChallengeBundleInfoLockedReasonCode : uint8
{
	Unlocked                       = 0,
	NoKnownUnlockMethod            = 1,
	PurchaseTheBattlePass          = 2,
	ReachSpecificTier              = 3,
	TimeLeftBeforeUnlock           = 4,
	EFortChallengeBundleInfoLockedReasonCode_MAX = 5,
};

enum class EFortQuestState : uint8
{
	Inactive                       = 0,
	Active                         = 1,
	Completed                      = 2,
	Claimed                        = 3,
	EFortQuestState_MAX            = 4,
};

enum class ERegisteredPlayerUnregistrationStatus : uint8
{
	Registered                     = 0,
	UnregistrationStarting         = 1,
	UnregistrationWaitingForInitialLock = 2,
	UnregistrationWaitingForScoreSave = 3,
	UnregistrationWaitingForFinalSave = 4,
	UnregistrationWaitingForProfileUnlock = 5,
	UnregistrationComplete         = 6,
	ERegisteredPlayerUnregistrationStatus_MAX = 7,
};

enum class EEventMatchScreen : uint8
{
	None                           = 0,
	ActivePlayerGrid               = 1,
	EliminatedPlayerGrid           = 2,
	MatchStatus                    = 3,
	Scoreboard                     = 4,
	EEventMatchScreen_MAX          = 5,
};

enum class EDroneFollowMode : uint8
{
	None                           = 0,
	ForceFacingLocation            = 1,
	ForceFacingFollowedPlayer      = 2,
	TetherToFollowedPlayer         = 3,
	MAX                            = 4,
};

enum class EHighlightSignificances : uint8
{
	NotSignificant                 = 0,
	SomewhatSignificant            = 1,
	Significant                    = 21,
	VerySignificant                = 31,
	Critical                       = 41,
	EHighlightSignificances_MAX    = 42,
};

enum class EHighlightFeatures : uint8
{
	INVALID                        = 0,
	FollowingPlayerKill            = 1,
	FollowingPlayerDeath           = 2,
	InterestingDeathCause          = 3,
	BusyBuilder                    = 4,
	FastMover                      = 5,
	LongDistanceKill               = 6,
	Multikill                      = 7,
	StormCloudAction               = 8,
	WinningMoment                  = 9,
	PlacementScore                 = 10,
	FollowingPlayerKillDBNO        = 11,
	FollowingPlayerDBNOFinished    = 12,
	COUNT                          = 13,
	EHighlightFeatures_MAX         = 14,
};

enum class EClassRepNodeMapping : uint8
{
	NotRouted                      = 0,
	RelevantAllConnections         = 1,
	RelevantAllInsideFortVolume    = 2,
	Spatialize_Static              = 3,
	Spatialize_Dynamic             = 4,
	Spatialize_Dormancy            = 5,
	EClassRepNodeMapping_MAX       = 6,
};

enum class ECrucibleWhitelistOverride : uint8
{
	DoNothing                      = 0,
	ForceOn                        = 1,
	ForceOff                       = 2,
	ECrucibleWhitelistOverride_MAX = 3,
};

enum class EFortItemShopSection : uint8
{
	RMTItemOffer                   = 0,
	Featured                       = 1,
	Daily                          = 2,
	SpecialFeatured                = 3,
	SpecialDaily                   = 4,
	Standalone                     = 5,
	CommunityChoice                = 6,
	MegaBundle                     = 7,
	MAX_None                       = 8,
	EFortItemShopSection_MAX       = 9,
};

enum class EFortRuntimeOptionTabState : uint8
{
	Default                        = 0,
	Disabled                       = 1,
	Hidden                         = 2,
	EFortRuntimeOptionTabState_MAX = 3,
};

enum class ENewsExternalURLMode : uint8
{
	PatchNotes                     = 0,
	UpdateNotes                    = 1,
	MoreInformation                = 2,
	ENewsExternalURLMode_MAX       = 3,
};

enum class EFortSafeZoneState : uint8
{
	None                           = 0,
	Starting                       = 1,
	Holding                        = 2,
	Shrinking                      = 3,
	EFortSafeZoneState_MAX         = 4,
};

enum class EFortUIScoreType : uint8
{
	Combat                         = 0,
	Building                       = 1,
	Utility                        = 2,
	Badges                         = 3,
	Bonus                          = 4,
	Total                          = 5,
	Max_None                       = 6,
	EFortUIScoreType_MAX           = 7,
};

enum class EFortScriptedActionEnvironment : uint8
{
	FrontEnd                       = 0,
	GameServer                     = 1,
	GameClient                     = 2,
	Max_None                       = 3,
	EFortScriptedActionEnvironment_MAX = 4,
};

enum class EFortScriptedActionSource : uint8
{
	Quest                          = 0,
	Token                          = 1,
	Manual                         = 2,
	Max_None                       = 3,
	EFortScriptedActionSource_MAX  = 4,
};

enum class EServerManifestOutputFormat : uint8
{
	FlatFile                       = 0,
	Json                           = 1,
	HTTP                           = 2,
	EServerManifestOutputFormat_MAX = 3,
};

enum class EServerManifestCommandType : uint8
{
	Move                           = 0,
	Copy                           = 1,
	Unknown                        = 2,
	EServerManifestCommandType_MAX = 3,
};

enum class EFortSessionHelperJoinState : uint8
{
	NotJoining                     = 0,
	RequestingReservation          = 1,
	FailedReservation              = 2,
	WaitingOnGame                  = 3,
	AttemptingJoin                 = 4,
	JoiningSession                 = 5,
	FailedJoin                     = 6,
	CanceledJoin                   = 7,
	EFortSessionHelperJoinState_MAX = 8,
};

enum class ESkeletalAudioBoneVelocityType : uint8
{
	Linear                         = 0,
	Rotational                     = 1,
	Custom                         = 2,
	ESkeletalAudioBoneVelocityType_MAX = 3,
};

enum class ESkeletalAudioBoneSpace : uint8
{
	Relative                       = 0,
	World                          = 1,
	ESkeletalAudioBoneSpace_MAX    = 2,
};

enum class ESkeletalAudioBoneEvent : uint8
{
	None                           = 0,
	SlowThresholdStart             = 1,
	SlowThresholdStop              = 2,
	MediumThreshold                = 3,
	FastThreshold                  = 4,
	ESkeletalAudioBoneEvent_MAX    = 5,
};

enum class EFortInvalidActivityReason : uint8
{
	None                           = 0,
	PartyTooBig                    = 1,
	PartyTooSmall                  = 2,
	NotPartyLeader                 = 3,
	MatchmakingAlready             = 4,
	InvalidData                    = 5,
	EFortInvalidActivityReason_MAX = 6,
};

enum class EAcceptFriendInviteFailureReason : uint8
{
	InviterTooManyFriends          = 0,
	SelfTooManyFriends             = 1,
	UnknownError                   = 2,
	EAcceptFriendInviteFailureReason_MAX = 3,
};

enum class ESendFriendInviteFailureReason : uint8
{
	NotFound                       = 0,
	AlreadyFriends                 = 1,
	InvitePending                  = 2,
	AddingSelfFail                 = 3,
	AddingBlockedFail              = 4,
	AutoDeclined                   = 5,
	BlockedByTarget                = 6,
	UnknownError                   = 7,
	ESendFriendInviteFailureReason_MAX = 8,
};

enum class EFortSoundIndicatorTypes : uint8
{
	Generic                        = 0,
	FootStep                       = 1,
	Gunshot                        = 2,
	Chest                          = 3,
	Glider                         = 4,
	Vehicle                        = 5,
	COUNT                          = 6,
	EFortSoundIndicatorTypes_MAX   = 7,
};

enum class EFortSpawnActorTime : uint8
{
	PostPlaylistLoad               = 0,
	StartOfStormHoldTime           = 1,
	EFortSpawnActorTime_MAX        = 2,
};

enum class ESplineWaterAudioFacingDirection : uint8
{
	None                           = 0,
	Inwards                        = 1,
	Outwards                       = 2,
	ESplineWaterAudioFacingDirection_MAX = 3,
};

enum class ESplineWaterAudioWindingOrder : uint8
{
	Clockwise                      = 0,
	Counterclockwise               = 1,
	ESplineWaterAudioWindingOrder_MAX = 2,
};

enum class EFortEventConditionType : uint8
{
	EFEC_StatCompare               = 0,
	EFEC_CanCraft                  = 1,
	EFEC_MAX                       = 2,
};

enum class EFortCompare : uint8
{
	EFC_LessThan                   = 0,
	EFC_LessThanOrEqual            = 1,
	EFC_GreaterThan                = 2,
	EFC_GreaterThanOrEqual         = 3,
	EFC_Equals                     = 4,
	EFC_MAX                        = 5,
};

enum class EFortEventRepeat : uint8
{
	EFER_Inactive                  = 0,
	EFER_Always                    = 1,
	EFER_OncePerPlayer             = 2,
	EFER_OncePerCampaign           = 3,
	EFER_OncePerMap                = 4,
	EFER_MAX                       = 5,
};

enum class EFortStatType : uint8
{
	Fortitude                      = 0,
	Offense                        = 1,
	Resistance                     = 2,
	Technology                     = 3,
	Fortitude_Team                 = 4,
	Offense_Team                   = 5,
	Resistance_Team                = 6,
	Technology_Team                = 7,
	Invalid                        = 8,
	EFortStatType_MAX              = 9,
};

enum class ESupplyDropItemTrackType : uint8
{
	SpecialActors                  = 0,
	ESupplyDropItemTrackType_MAX   = 1,
};

enum class ESupplyDropSpawnType : uint8
{
	SafeZoneDriven                 = 0,
	ItemDeliveryManagement         = 1,
	ESupplyDropSpawnType_MAX       = 2,
};

enum class EFortSwimmingAudioType : uint8
{
	Normal                         = 0,
	Sprint                         = 1,
	SprintStart                    = 2,
	PickaxeSwing                   = 3,
	NormalDBNO                     = 4,
	SprintBoostStart               = 5,
	SwimStart                      = 6,
	SwimEnd                        = 7,
	Max_None                       = 8,
	EFortSwimmingAudioType_MAX     = 9,
};

enum class EFortAutoTestState : uint8
{
	InitialLoad                    = 0,
	Login                          = 1,
	FrontendLoad                   = 2,
	FrontendPvELoad                = 3,
	FrontendPvETest                = 4,
	PvEMatchmaking                 = 5,
	ZoneLoad                       = 6,
	ZoneTest                       = 7,
	Finished                       = 8,
	MAX                            = 9,
};

enum class EReplaySmokeTestStep : uint8
{
	Setup                          = 0,
	TogglePause                    = 1,
	StepForward                    = 2,
	StepBackward                   = 3,
	StepToEnd                      = 4,
	StepToBeginning                = 5,
	SpeedUpPlayback                = 6,
	SlowDownPlayback               = 7,
	ToggleHideTimeline             = 8,
	IterateCameraModes             = 9,
	TogglePlayerOutlines           = 10,
	ToggleNamePlates               = 11,
	ToggleReplayRegion             = 12,
	ZoomIn                         = 13,
	ZoomOut                        = 14,
	ToggleAutoFollowThirdPerson    = 15,
	IncreaseExposure               = 16,
	DecreaseExposure               = 17,
	SetAutoExposure                = 18,
	IncreaseAperture               = 19,
	DecreaseAperture               = 20,
	IncreaseFocalLength            = 21,
	DecreaseFocalLength            = 22,
	IncreaseFocusDistance          = 23,
	DecreaseFocusDistance          = 24,
	SetAutoFocus                   = 25,
	ToggleDamageEffects            = 26,
	ToggleHideUI                   = 27,
	ToggleMap                      = 28,
	Reset                          = 29,
	MAX                            = 30,
};

enum class EFortTheaterType : uint8
{
	Standard                       = 0,
	Elder                          = 1,
	PvP                            = 2,
	PvP2                           = 3,
	Tutorial                       = 4,
	TutorialGate                   = 5,
	Max_None                       = 6,
	EFortTheaterType_MAX           = 7,
};

enum class EFortTheaterMapTileType : uint8
{
	Normal                         = 0,
	CriticalMission                = 1,
	AlwaysActive                   = 2,
	Outpost                        = 3,
	NonMission                     = 4,
	PvPFOB                         = 5,
	EFortTheaterMapTileType_MAX    = 6,
};

enum class EFortMapNavigationDirection : uint8
{
	North                          = 0,
	NorthEast                      = 1,
	East                           = 2,
	SouthEast                      = 3,
	South                          = 4,
	SouthWest                      = 5,
	West                           = 6,
	NorthWest                      = 7,
	Invalid                        = 8,
	EFortMapNavigationDirection_MAX = 9,
};

enum class EFortMissionQuestValidityResult : uint8
{
	Invalid                        = 0,
	InvalidNotPlayable             = 1,
	ValidLinked                    = 2,
	ValidObjectiveCondition        = 3,
	ValidFallback                  = 4,
	EFortMissionQuestValidityResult_MAX = 5,
};

enum class ECollectionSelectionMethod : uint8
{
	TierAsIndex                    = 0,
	TierAsIndexOverflowToLastValid = 1,
	Modulo                         = 2,
	Random                         = 3,
	None                           = 4,
	ECollectionSelectionMethod_MAX = 5,
};

enum class EGlobalWeatherState : uint8
{
	Inactive                       = 0,
	Active                         = 1,
	BlendingIn                     = 2,
	BlendingOut                    = 3,
	EGlobalWeatherState_MAX        = 4,
};

enum class EWidgetInterfaceTimerStatus : uint8
{
	None                           = 0,
	Active                         = 1,
	Paused                         = 2,
	Inactive                       = 3,
	EWidgetInterfaceTimerStatus_MAX = 4,
};

enum class EPayoutScoringType : uint8
{
	Invalid                        = 0,
	Points                         = 1,
	Ranking                        = 2,
	Percentile                     = 3,
	Persistent                     = 4,
	EPayoutScoringType_MAX         = 5,
};

enum class EPayoutRewardType : uint8
{
	Invalid                        = 0,
	Commerce                       = 1,
	GameRelated                    = 2,
	Token                          = 3,
	Score                          = 4,
	EPayoutRewardType_MAX          = 5,
};

enum class EScoreMatchOperator : uint8
{
	Invalid                        = 0,
	LessThan                       = 1,
	LessThanOrEqual                = 2,
	Equal                          = 3,
	GreaterThan                    = 4,
	GreaterThanOrEqual             = 5,
	EScoreMatchOperator_MAX        = 6,
};

enum class EMessageFeedSubject : uint8
{
	ToyOwner                       = 0,
	OtherPlayerInteractingWithToy  = 1,
	EMessageFeedSubject_MAX        = 2,
};

enum class EMessageFeedRelationshipFilter : uint8
{
	Anyone                         = 0,
	SquadAndTeamMembers            = 1,
	SquadMembersOnly               = 2,
	SelfOnly                       = 3,
	EMessageFeedRelationshipFilter_MAX = 4,
};

enum class ETrackVerticality : uint8
{
	Floor                          = 0,
	Ramp                           = 1,
	GradualRamp                    = 2,
	Max_None                       = 3,
	ETrackVerticality_MAX          = 4,
};

enum class ETrackIncline : uint8
{
	NoNeighbor                     = 0,
	Flat                           = 1,
	Up                             = 2,
	Down                           = 3,
	GradualUp                      = 4,
	GradualDown                    = 5,
	Max_None                       = 6,
	ETrackIncline_MAX              = 7,
};

enum class ETrackPieceType : uint8
{
	None                           = 0,
	Straight                       = 1,
	Turn                           = 2,
	TShape                         = 3,
	Cross                          = 4,
	Max_None                       = 5,
	ETrackPieceType_MAX            = 6,
};

enum class ETrackDirection : uint8
{
	YNegative                      = 0,
	XPositive                      = 1,
	YPositive                      = 2,
	XNegative                      = 3,
	Max_None                       = 4,
	ETrackDirection_MAX            = 5,
};

enum class EDynamicBackgroudKey : uint8
{
	Lobby                          = 0,
	Vault                          = 1,
	Max_None                       = 2,
	EDynamicBackgroudKey_MAX       = 3,
};

enum class EFortLeaderboardMetric : uint8
{
	Score                          = 0,
	Kills                          = 1,
	EFortLeaderboardMetric_MAX     = 2,
};

enum class EUFortMatchmakingKnobsDataSource : uint8
{
	None                           = 0,
	Playlist                       = 1,
	Mutator                        = 2,
	GameMode                       = 3,
	Permissions                    = 4,
	UISettings                     = 5,
	CreativeGlobalOption           = 6,
	Max                            = 7,
};

enum class EFortPlaylistTeamSizeType : uint8
{
	Solo                           = 0,
	Duo                            = 1,
	Trio                           = 2,
	Squad                          = 3,
	LargeTeam                      = 4,
	MAX                            = 5,
};

enum class EFortGameFeatureState : uint8
{
	Unknown                        = 0,
	Unavailable                    = 1,
	Downloading                    = 2,
	DownloadFailed                 = 3,
	Available                      = 4,
	Preloading                     = 5,
	Preloaded                      = 6,
	Loading                        = 7,
	Loaded                         = 8,
	Count                          = 8,
	EFortGameFeatureState_MAX      = 9,
};

enum class EFortGameFeature : uint8
{
	EarlyStartup                   = 0,
	DedicatedServer                = 1,
	KairosInitial                  = 2,
	KairosCapture                  = 3,
	DanceRoyale                    = 4,
	Frontend                       = 5,
	GameplayAthena                 = 6,
	GameplayCampaign               = 7,
	Invalid                        = 8,
	Count                          = 8,
	EFortGameFeature_MAX           = 9,
};

enum class EFortStartupPhase : uint8
{
	InitializingEngine             = 0,
	EarlyStartupLoading            = 1,
	EarlyStartupFinished           = 2,
	GameStartupLoading             = 3,
	GameStartupFinished            = 4,
	Invalid                        = 5,
	Count                          = 5,
	EFortStartupPhase_MAX          = 6,
};

enum class EFortCreativeAdColorPreset : uint8
{
	Default                        = 0,
	Emphasized                     = 1,
	Common                         = 2,
	Uncommon                       = 3,
	Rare                           = 4,
	Epic                           = 5,
	Legendary                      = 6,
	EFortCreativeAdColorPreset_MAX = 7,
};

enum class EFortCreativeAdType : uint8
{
	Default                        = 0,
	Playset                        = 1,
	Toy                            = 2,
	Game                           = 3,
	Island                         = 4,
	Knob                           = 5,
	EFortCreativeAdType_MAX        = 6,
};

enum class EEventTournamentType : uint8
{
	Online                         = 0,
	Onsite                         = 1,
	Test                           = 2,
	Unknown                        = 3,
	EEventTournamentType_MAX       = 4,
};

enum class EFortLobbyType : uint8
{
	Default                        = 0,
	Tournament                     = 1,
	Creative                       = 2,
	Division                       = 3,
	EFortLobbyType_MAX             = 4,
};

enum class EFortMatchmakingViolatorStyle : uint8
{
	None                           = 0,
	Basic                          = 1,
	HighStakes                     = 2,
	Showdown                       = 3,
	EFortMatchmakingViolatorStyle_MAX = 4,
};

enum class EFortMatchmakingTileStyle : uint8
{
	None                           = 0,
	Special                        = 1,
	HighStakes                     = 2,
	Showdown                       = 3,
	EFortMatchmakingTileStyle_MAX  = 4,
};

enum class EFortErrorSeverity : uint8
{
	Unspecified                    = 0,
	Silent                         = 1,
	Passive                        = 2,
	Blocking                       = 3,
	SevereBlocking                 = 4,
	EFortErrorSeverity_MAX         = 5,
};

enum class EFortPickerMode : uint8
{
	BuildingCategory               = 0,
	TrapCategory                   = 1,
	WeaponCategory                 = 2,
	SocialCategory                 = 3,
	Building                       = 4,
	Trap                           = 5,
	TrapRadial                     = 6,
	Weapon                         = 7,
	Social                         = 8,
	DirectPickEmote                = 9,
	DirectPickSpray                = 10,
	SquadQuickChat                 = 11,
	WeaponsSlotted                 = 12,
	BattleLabDevice                = 13,
	EFortPickerMode_MAX            = 14,
};

enum class EPTTState : uint8
{
	Enabled                        = 0,
	MicDisabled                    = 1,
	AllSoundDisabled               = 2,
	EPTTState_MAX                  = 3,
};

enum class EMobileInteractionIconTypes : uint8
{
	Interact                       = 0,
	Swap                           = 1,
	Revive                         = 2,
	Blocked                        = 3,
	MAX                            = 4,
};

enum class EAthenaPickerType : uint8
{
	EditMode                       = 0,
	Interact                       = 1,
	MAX                            = 2,
};

enum class EFortGliderType : uint8
{
	Glider                         = 0,
	Umbrella                       = 1,
	EFortGliderType_MAX            = 2,
};

enum class EItemListViewDisplayType : uint8
{
	World                          = 0,
	Outpost                        = 1,
	Account                        = 2,
	DeployableBase                 = 3,
	Max                            = 4,
};

enum class EStormShieldDefense : uint8
{
	NotSSD                         = 0,
	StormShieldExpansion           = 1,
	WargameSimulation              = 2,
	EStormShieldDefense_MAX        = 3,
};

enum class EFortClientAnnouncementQueueType : uint8
{
	Toasts                         = 0,
	Stickies                       = 1,
	Max                            = 2,
};

enum class EFortNotificationQueueType : uint8
{
	Toasts                         = 0,
	Stickies                       = 1,
	Messages                       = 2,
	Max                            = 3,
};

enum class EFortDialogResult : uint8
{
	Confirmed                      = 0,
	Declined                       = 1,
	Ignored                        = 2,
	Killed                         = 3,
	TimedOut                       = 4,
	Unknown                        = 5,
	EFortDialogResult_MAX          = 6,
};

enum class ETutorialType : uint8
{
	None                           = 0,
	Callout                        = 1,
	GuardScreen                    = 2,
	WidgetIntro                    = 3,
	Highlight                      = 4,
	ETutorialType_MAX              = 5,
};

enum class EFortBangType : uint8
{
	Invalid                        = 0,
	Custom                         = 1,
	PlayTab                        = 2,
	VaultTab                       = 3,
	StoreTab                       = 4,
	FriendsButton                  = 5,
	PartyInviteButton              = 6,
	SubGameAccessChanged           = 7,
	DailyRewardsButton             = 8,
	QuestsButton                   = 9,
	CompletedExpeditions           = 10,
	MainMenu                       = 11,
	HelpMenu                       = 12,
	VaultSchematics                = 13,
	VaultLeadSurvivors             = 14,
	VaultSurvivors                 = 15,
	VaultHeroes                    = 16,
	VaultDefenders                 = 17,
	VaultResources                 = 18,
	VaultMelee                     = 19,
	VaultRanged                    = 20,
	VaultConsumables               = 21,
	VaultIngredients               = 22,
	VaultTraps                     = 23,
	BattlePassTab                  = 24,
	SpecialEventTab                = 25,
	CosmeticsTab                   = 26,
	CosmeticsOutfit                = 27,
	CosmeticGlider                 = 28,
	CosmeticContrail               = 29,
	CosmeticBattleBus              = 30,
	CosmeticVehicle                = 31,
	CosmeticItemWrap               = 32,
	CosmeticCallingCard            = 33,
	CosmeticMapMarker              = 34,
	CosmeticMusicPack              = 35,
	CosmeticPetSkin                = 36,
	CosmeticLoadingScreen          = 37,
	CosmeticBackpack               = 38,
	CosmeticHat                    = 39,
	CosmeticPickaxe                = 40,
	CosmeticDance                  = 41,
	CosmeticCharm                  = 42,
	AthenaDirectedAcquisitionTab   = 43,
	CommunityVotingVoteRemaining   = 44,
	CommunityVotingRevealReady     = 45,
	AthenaChallengesTab            = 46,
	AthenaShowdownTab              = 47,
	AthenaCareerTab                = 48,
	PlayerBanners                  = 49,
	STWCommand                     = 50,
	STWCommand_Heroes              = 51,
	STWCommand_Heroes_Manage       = 52,
	STWCommand_Heroes_HeroLoadout  = 53,
	STWCommand_Heroes_Defenders    = 54,
	STWCommand_Heroes_Expeditions  = 55,
	STWCommand_Survivors           = 56,
	STWCommand_Survivors_Manage    = 57,
	STWCommand_Survivors_Squads    = 58,
	STWCommand_Upgrades            = 59,
	STWCommand_Research            = 60,
	STWCommand_AccountXP           = 61,
	STWArmory                      = 62,
	STWArmory_Schematics           = 63,
	STWArmory_Backpack             = 64,
	STWArmory_Storage              = 65,
	STWArmory_CollectionBook       = 66,
	STWArmory_Transform            = 67,
	STWArmory_Resources            = 68,
	STWLocker                      = 69,
	EFortBangType_MAX              = 70,
};

enum class EFortEventNameType : uint8
{
	Mission                        = 0,
	Client                         = 1,
	EFortEventNameType_MAX         = 2,
};

enum class EFortCraftFailCause : uint8
{
	Unknown                        = 0,
	NotEnoughResources             = 1,
	InventoryFull                  = 2,
	InsufficientTeamLevel          = 3,
	CraftingQueueFull              = 4,
	CurrentlyLocked                = 5,
	OverflowSchematic              = 6,
	EFortCraftFailCause_MAX        = 7,
};

enum class EKeepDefenseState : uint8
{
	Inactive                       = 0,
	Warmup                         = 1,
	Defense                        = 2,
	LastAlive                      = 3,
	Max                            = 4,
};

enum class EKeepContainerType : uint8
{
	Base                           = 0,
	Storeroom                      = 1,
	FirstAid                       = 2,
	Armory                         = 3,
	Workshop                       = 4,
	AmmoStash                      = 5,
	Max                            = 6,
};

enum class EFortIndicatorState : uint8
{
	Hidden                         = 0,
	OnlyFriendsVisible             = 1,
	Visible                        = 2,
	EFortIndicatorState_MAX        = 3,
};

enum class EFortAIUtility : uint8
{
	KillPlayersMelee               = 0,
	KillPlayersRanged              = 1,
	KillPlayersArtillery           = 2,
	DestroyBuildingsMelee          = 3,
	DestroyBuildingsRanged         = 4,
	DestroyBuildingsArtillery      = 5,
	DestroyTraps                   = 6,
	Tank                           = 7,
	Infiltrate                     = 8,
	Mob                            = 9,
	Support                        = 10,
	Kiting                         = 11,
	AreaOfDenial                   = 12,
	DisableTraps                   = 13,
	Dormant                        = 14,
	Assassin                       = 15,
	MAX                            = 16,
};

enum class EFortTileEdgeType : uint8
{
	Undefined                      = 0,
	Outer_1                        = 1,
	Transition_2                   = 2,
	Inner_3                        = 3,
	Border_4                       = 4,
	BorderTransitionSingle_5       = 5,
	BorderTransitionDouble_6       = 6,
	MAX                            = 7,
};

enum class EFortMovementUrgency : uint8
{
	None                           = 0,
	Low                            = 1,
	Medium                         = 2,
	High                           = 3,
	NumLevels                      = 4,
	EFortMovementUrgency_MAX       = 5,
};

enum class EFortMovementStyle : uint8
{
	Running                        = 0,
	Walking                        = 1,
	Charging                       = 2,
	Sprinting                      = 3,
	PersonalVehicle                = 4,
	Flying                         = 5,
	EFortMovementStyle_MAX         = 6,
};

enum class EFortWeaponTriggerType : uint8
{
	OnPress                        = 0,
	Automatic                      = 1,
	OnRelease                      = 2,
	OnPressAndRelease              = 3,
	EFortWeaponTriggerType_MAX     = 4,
};

enum class EFortDayPhasePrio : uint8
{
	Default                        = 0,
	DailySummary                   = 1,
	EFortDayPhasePrio_MAX          = 2,
};

enum class EFortCustomCharmType : uint8
{
	Weapon                         = 0,
	Lapel                          = 1,
	Backpack1                      = 2,
	Backpack2                      = 3,
	NumTypes                       = 4,
	EFortCustomCharmType_MAX       = 5,
};

enum class EFortDisplayGender : uint8
{
	Unknown                        = 0,
	Male                           = 1,
	Female                         = 2,
	NumTypes                       = 3,
	EFortDisplayGender_MAX         = 4,
};

enum class EFortRarity : uint8
{
	Common                         = 0,
	Uncommon                       = 1,
	Rare                           = 2,
	Epic                           = 3,
	Legendary                      = 4,
	Mythic                         = 5,
	Transcendent                   = 6,
	Unattainable                   = 7,
	NumRarityValues                = 8,
	EFortRarity_MAX                = 9,
};

enum class EFortTargetSelectionFilter : uint8
{
	Damageable                     = 0,
	Everything                     = 1,
	Pawns                          = 2,
	Buildings                      = 3,
	Walls                          = 4,
	Traps                          = 5,
	Players                        = 6,
	AIPawns                        = 7,
	Instigator                     = 8,
	WeakSpots                      = 9,
	World                          = 10,
	Max                            = 11,
};

enum class EFortWeaponType : uint8
{
	None                           = 0,
	RangedAny                      = 1,
	Pistol                         = 2,
	Shotgun                        = 3,
	Rifle                          = 4,
	SMG                            = 5,
	Sniper                         = 6,
	GrenadeLauncher                = 7,
	RocketLauncher                 = 8,
	Bow                            = 9,
	Minigun                        = 10,
	LMG                            = 11,
	BiplaneGun                     = 12,
	MeleeAny                       = 13,
	Harvesting                     = 14,
	MAX                            = 15,
};

enum class EFortTargetSelectionTestType : uint8
{
	Overlap                        = 0,
	Swept                          = 1,
	Ballistic                      = 2,
	EFortTargetSelectionTestType_MAX = 3,
};

enum class EFortTargetSelectionShape : uint8
{
	Sphere                         = 0,
	Cone                           = 1,
	Box                            = 2,
	Capsule                        = 3,
	Line                           = 4,
	Cylinder                       = 5,
	Custom                         = 6,
	CustomOnSource                 = 7,
	EFortTargetSelectionShape_MAX  = 8,
};

enum class EFortBrushSize : uint8
{
	VeryVerySmall                  = 0,
	VerySmall                      = 1,
	Small                          = 2,
	Medium                         = 3,
	Large                          = 4,
	VeryLarge                      = 5,
	EFortBrushSize_MAX             = 6,
};

enum class ESpecialActorStatType : uint8
{
	NumEliminationsNearby          = 0,
	TimeInWorld                    = 1,
	PickupNumSpawns                = 2,
	PickupNumDespawns              = 3,
	PickupNumDropped               = 4,
	PickupNumTaken                 = 5,
	PlayerWon                      = 6,
	PlayerNumEliminations          = 7,
	PlayerNum                      = 8,
	TotalStats                     = 9,
	ESpecialActorStatType_MAX      = 10,
};

enum class EFortItemViewRotationMode : uint8
{
	None                           = 0,
	BoundsPivot                    = 1,
	World                          = 2,
	Relative                       = 3,
	EFortItemViewRotationMode_MAX  = 4,
};

enum class EChangeInStructDetected : uint8
{
	Dirty                          = 0,
	Clean                          = 1,
	EChangeInStructDetected_MAX    = 2,
};

enum class EFortInventoryCustomFilter : uint8
{
	Mythic                         = 0,
	Legendary                      = 1,
	Epic                           = 2,
	Rare                           = 3,
	Uncommon                       = 4,
	Common                         = 5,
	EFortInventoryCustomFilter_MAX = 6,
};

enum class EInventoryContentSortType : uint8
{
	ByName                         = 0,
	ByRating                       = 1,
	ByLevel                        = 2,
	ByCategory                     = 3,
	ByRarity                       = 4,
	ByLocation                     = 5,
	ByPersonality                  = 6,
	ByBonus                        = 7,
	BySubtype                      = 8,
	EInventoryContentSortType_MAX  = 9,
};

enum class EFortFrontendInventoryFilter : uint8
{
	Schematics                     = 0,
	WorldItems                     = 1,
	WorldItemsInGame               = 2,
	WorldItemsStorage              = 3,
	WorldItemsTransfer             = 4,
	ConsumablesAndAccountResources = 5,
	Heroes                         = 6,
	Defenders                      = 7,
	Survivors                      = 8,
	AthenaCharacter                = 9,
	AthenaBackpack                 = 10,
	AthenaPickaxe                  = 11,
	AthenaGliders                  = 12,
	AthenaContrails                = 13,
	AthenaEmotes                   = 14,
	AthenaItemWraps                = 15,
	AthenaLoadingScreens           = 16,
	AthenaLobbyMusic               = 17,
	AthenaCharm                    = 18,
	HestiaWeapons                  = 19,
	HestiaResources                = 20,
	StarlightInventory             = 21,
	Invisible                      = 22,
	Max_None                       = 23,
	EFortFrontendInventoryFilter_MAX = 24,
};

enum class EFortInventoryFilter : uint8
{
	WeaponMelee                    = 0,
	WeaponRanged                   = 1,
	Ammo                           = 2,
	Traps                          = 3,
	Consumables                    = 4,
	Ingredients                    = 5,
	Gadget                         = 6,
	Decorations                    = 7,
	Badges                         = 8,
	Heroes                         = 9,
	LeadSurvivors                  = 10,
	Survivors                      = 11,
	Defenders                      = 12,
	Resources                      = 13,
	ConversionControl              = 14,
	AthenaCosmetics                = 15,
	Playset                        = 16,
	CreativePlot                   = 17,
	TeamPerk                       = 18,
	Workers                        = 19,
	Invisible                      = 20,
	Max_None                       = 21,
	EFortInventoryFilter_MAX       = 22,
};

enum class EFortItemCategoryOrdinal : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Tertiary                       = 2,
	EFortItemCategoryOrdinal_MAX   = 3,
};

enum class ESubGameMatchmakingStatus : uint8
{
	Disabled                       = 0,
	Enabled                        = 1,
	ESubGameMatchmakingStatus_MAX  = 2,
};

enum class ESubGameAccessStatus : uint8
{
	Disabled                       = 0,
	LimitedAccess                  = 1,
	OpenAccess                     = 2,
	ESubGameAccessStatus_MAX       = 3,
};

enum class EPlaylistUIExtensionSlot : uint8
{
	Primary                        = 0,
	TopRightCorner                 = 1,
	GameInfoBox                    = 2,
	Quickbar                       = 3,
	UpperCenter                    = 4,
	CrosshairRight                 = 5,
	UnderSquadInfo                 = 6,
	FullScreenMap                  = 7,
	BelowRespawnWidget             = 8,
	BelowCompass                   = 9,
	UnderTeammateStatus            = 10,
	ControllerBindingCallout       = 11,
	AboveStormMessageSlot          = 12,
	CustomMinigameCallouts         = 13,
	UnderLocalPlayerInfo           = 14,
	InventoryScreenReplacement     = 15,
	Reticle                        = 16,
	KillfeedSlot                   = 17,
	EPlaylistUIExtensionSlot_MAX   = 18,
};

enum class EFortUIFriendNotificationType : uint8
{
	Default                        = 0,
	FriendRequest                  = 1,
	PartyInvite                    = 2,
	AutoImportFriendSuggestion     = 3,
	PartyMemberCreated             = 4,
	EFortUIFriendNotificationType_MAX = 5,
};

enum class EFortNotificationPriority : uint8
{
	Vote                           = 0,
	Friend                         = 1,
	BoostedXP                      = 2,
	TwitchHigh                     = 3,
	GeneralSendNotification        = 4,
	TwitchLow                      = 10,
	Max                            = 11,
};

enum class EFortNotificationType : uint8
{
	Default                        = 0,
	Power                          = 1,
	HealthWarning                  = 2,
	Error                          = 3,
	GiftSent                       = 4,
	VoiceChannel                   = 5,
	Max                            = 6,
};

enum class EFortContextualReticleTypes : uint8
{
	FCR_GenericFailure             = 0,
	FCR_Upgrade                    = 1,
	FCR_Repair                     = 2,
	FCR_Locked                     = 3,
	FCR_Placement                  = 4,
	FCR_Edit                       = 5,
	FCR_NoTarget                   = 6,
	FCR_InProgress                 = 7,
	FCR_None                       = 8,
	FCR_MAX                        = 9,
};

enum class EFortUserCloudRequestResult : uint8
{
	Success                        = 0,
	Failure_CloudStorageDisabled   = 1,
	Failure_CloudStorageError      = 2,
	Failure_FileNotFoundInUserFileList = 3,
	Failure_SavingNotAllowedForSpecifiedUser = 4,
	EFortUserCloudRequestResult_MAX = 5,
};

enum class EFortUserCloudRequestType : uint8
{
	LoadCloudFile                  = 0,
	SaveCloudFile                  = 1,
	EFortUserCloudRequestType_MAX  = 2,
};

enum class EVehicleAudioTriggerDir : uint8
{
	Forward                        = 0,
	Backward                       = 1,
	EVehicleAudioTriggerDir_MAX    = 2,
};

enum class EVehicleAudioInterpolationType : uint8
{
	None                           = 0,
	CustomCurve                    = 1,
	Linear                         = 2,
	EVehicleAudioInterpolationType_MAX = 3,
};

enum class EVehicleSessionEndReason : uint8
{
	Invalid                        = 0,
	NoPassengers                   = 1,
	EVehicleSessionEndReason_MAX   = 2,
};

enum class EVehicleMovementMode : uint8
{
	OnGround                       = 0,
	InAir                          = 1,
	WipeOut                        = 2,
	MaxCount                       = 3,
	EVehicleMovementMode_MAX       = 4,
};

enum class ETryExitVehicleBehavior : uint8
{
	DoNotForce                     = 0,
	ForceOnBlocking                = 1,
	ForceAlways                    = 2,
	ETryExitVehicleBehavior_MAX    = 3,
};

enum class EVehicleSeats : uint8
{
	Driver                         = 0,
	Passenger1                     = 1,
	Passenger2                     = 2,
	Passenger3                     = 3,
	Passenger4                     = 4,
	Passenger5                     = 5,
	MaxCount                       = 6,
	EVehicleSeats_MAX              = 7,
};

enum class EFortVisibilityBehavior : uint8
{
	Proximity                      = 0,
	OnceSeenAlwaysSeen             = 1,
	AlwaysSeen                     = 2,
	Invalid                        = 3,
	EFortVisibilityBehavior_MAX    = 4,
};

enum class EVolumeValidityResult : uint8
{
	Valid                          = 0,
	Invalid                        = 1,
	EVolumeValidityResult_MAX      = 2,
};

enum class EFortReloadMontageSection : uint8
{
	Intro                          = 0,
	Loop                           = 1,
	Outro                          = 2,
	EFortReloadMontageSection_MAX  = 3,
};

enum class EFortDisplayTier : uint8
{
	Invalid                        = 0,
	Handmade                       = 1,
	Copper                         = 2,
	Silver                         = 3,
	Malachite                      = 4,
	Obsidian                       = 5,
	Brightcore                     = 6,
	Spectrolite                    = 7,
	Shadowshard                    = 8,
	Sunbeam                        = 9,
	Moonglow                       = 10,
	EFortDisplayTier_MAX           = 11,
};

enum class EWorldItemDropBehavior : uint8
{
	DropAsPickup                   = 0,
	DestroyOnDrop                  = 1,
	DropAsPickupDestroyOnEmpty     = 2,
	EWorldItemDropBehavior_MAX     = 3,
};

enum class EFortWorldManagerState : uint8
{
	WMS_Created                    = 0,
	WMS_QueryingWorld              = 1,
	WMS_WorldQueryComplete         = 2,
	WMS_CreatingNewWorld           = 3,
	WMS_LoadingExistingWorld       = 4,
	WMS_Running                    = 5,
	WMS_Failed                     = 6,
	WMS_MAX                        = 7,
};

enum class EFortLevelStreamingState : uint8
{
	LSS_Unloaded                   = 0,
	LSS_Loaded                     = 1,
	LSS_UnconditionalFoundationsUpdated = 2,
	LSS_AllFoundationsUpdated      = 3,
	LSS_NewActorsCreatedButNotUpdated = 4,
	LSS_AllUpdated                 = 5,
	LSS_Ready                      = 6,
	LSS_MAX                        = 7,
};

enum class EFortQueuedActionUserStatus : uint8
{
	Succeeded                      = 0,
	Failed                         = 1,
	WaitingForCloudRequest         = 2,
	WaitingForProfileSave          = 3,
	EFortQueuedActionUserStatus_MAX = 4,
};

enum class EFortWorldRecordState : uint8
{
	StartProcessing                = 0,
	WaitingForResponse             = 1,
	RetrievingTheaterInformation   = 2,
	RetrievingZoneInformation      = 3,
	LoadingWorldRecord             = 4,
	LoadingZoneRecord              = 5,
	SavingZoneRecord               = 6,
	SavingPlayerProfiles           = 7,
	SavingPlayerDeployableBases    = 8,
	Succeeded                      = 9,
	Failed                         = 10,
	Max_None                       = 11,
	EFortWorldRecordState_MAX      = 12,
};

enum class EFortWorldRecordAction : uint8
{
	LoadWorldOnly                  = 0,
	SaveWorldOnly                  = 1,
	SaveZoneAndWorld               = 2,
	LoadZoneAndWorld               = 3,
	SaveDeployableBasesAndWorld    = 4,
	Max_None                       = 5,
	EFortWorldRecordAction_MAX     = 6,
};

enum class EDeployableBaseUseType : uint8
{
	Neighborhood                   = 0,
	PvECombat                      = 1,
	EDeployableBaseUseType_MAX     = 2,
};

enum class EFortZoneType : uint8
{
	PVE                            = 0,
	PVP                            = 1,
	Keep                           = 2,
	SingleZone                     = 3,
	Max_None                       = 4,
	EFortZoneType_MAX              = 5,
};

enum class EFrontEndCamera : uint8
{
	Invalid                        = 0,
	Command                        = 1,
	Command_HeroLoadout            = 2,
	LegacyHeroLoadout              = 3,
	Cosmetics                      = 4,
	Expeditions                    = 5,
	FrontendDefault                = 6,
	Heroes                         = 7,
	HeroSelect                     = 8,
	HeroLoadout                    = 9,
	Home                           = 10,
	HomeBase                       = 11,
	Login                          = 12,
	Manage1                        = 13,
	Manage2                        = 14,
	Manage3                        = 15,
	Manage4                        = 16,
	MissionControl                 = 17,
	Party                          = 18,
	Play                           = 19,
	Research                       = 20,
	SkillTrees                     = 21,
	SmallCosmetics                 = 22,
	SpecialEvent                   = 23,
	SpecialEvent2                  = 24,
	SpecialEvent3                  = 25,
	Store                          = 26,
	StoreItemInspect               = 27,
	StwFrontendDefault             = 28,
	SurvivorSquadBuilding1         = 29,
	SurvivorSquadBuilding2         = 30,
	SurvivorSquadBuilding3         = 31,
	SurvivorSquadBuilding4         = 32,
	TutorialPhaseOne               = 33,
	TutorialPhaseTwo               = 34,
	TutorialPhaseThree             = 35,
	Upgrades                       = 36,
	Vault                          = 37,
	WorldMap                       = 38,
	LobbyCentered                  = 39,
	CosmeticDisplay                = 40,
	BattlePass                     = 41,
	Rewards                        = 42,
	SpecialEventRewards            = 43,
	EFrontEndCamera_MAX            = 44,
};

enum class EDroneFacingLocationMode : uint8
{
	NotFacingLocation              = 0,
	FindingPoint                   = 1,
	TrackingPoint                  = 2,
	EDroneFacingLocationMode_MAX   = 3,
};

enum class EFireModeType : uint8
{
	Unset                          = 0,
	TapToShoot                     = 1,
	FireButton                     = 2,
	AutoFire                       = 3,
	ForceTouch                     = 4,
	Custom                         = 5,
	MAX                            = 6,
};

enum class ELayoutPropertyType : uint8
{
	PropertyType_Float             = 0,
	PropertyType_Integer           = 1,
	PropertyType_Bool              = 2,
	PropertyType_Rotator           = 3,
	PropertyType_MAX               = 4,
};

enum class ELayoutDataType : uint8
{
	Custom                         = 0,
	DefaultToolLayout              = 1,
	DefaultGameLayout              = 2,
	MAX_Local                      = 3,
	CustomCloudLayout              = 4,
	ELayoutDataType_MAX            = 5,
};

enum class EIslandInspectorState : uint8
{
	Initializing                   = 0,
	Ready                          = 1,
	AwaitingProcessCommand         = 2,
	ProcessingCommand              = 3,
	EIslandInspectorState_MAX      = 4,
};

enum class ELevelSaveRecordVersion : uint8
{
	CloudSaveInfoAdded             = 0,
	TimestampConversion            = 1,
	SoftActorClassReferences       = 2,
	SoftActorComponentClassReferences = 3,
	DuplicateNewActorRecordsRemoved = 4,
	StartOfResaveWhenNotLatestVersion = 5,
	LowerCloseThresholdForDuplicates = 6,
	DeprecatedDeleteAndNewActorRecords = 7,
	DependenciesFromSerializedWorld = 8,
	RemovingSerializedDependencies = 9,
	AddingVolumeInfoRecordsMap     = 10,
	AddingVolumeGridDependency     = 11,
	AddingScale                    = 12,
	AddingDataHash                 = 13,
	AddedIslandTemplateId          = 14,
	AddedLevelStreamedDeleteRecord = 15,
	VersionPlusOne                 = 16,
	LatestVersion                  = 15,
	ELevelSaveRecordVersion_MAX    = 17,
};

enum class ELevelSaveCategory : uint8
{
	ActorInstance                  = 0,
	VolumeInfoActor                = 1,
	ELevelSaveCategory_MAX         = 2,
};

enum class EFortEncounterSpawnLimitType : uint8
{
	NoLimit                        = 0,
	NumPawnsLimit                  = 1,
	SpawnPointLimit                = 2,
	UserDefined                    = 3,
	MAX                            = 4,
};

enum class EFortEncounterUtilitiesMode : uint8
{
	LockedOnly                     = 0,
	LockedAndFree                  = 1,
	EFortEncounterUtilitiesMode_MAX = 2,
};

enum class EFortEncounterSpawnLocationManagementMode : uint8
{
	Spawn                          = 0,
	Search                         = 1,
	EFortEncounterSpawnLocationManagementMode_MAX = 2,
};

enum class EFortEncounterSpawnLocationPlacementMode : uint8
{
	Directional                    = 0,
	Ring                           = 1,
	Volume                         = 2,
	Custom                         = 3,
	Max_None                       = 4,
	EFortEncounterSpawnLocationPlacementMode_MAX = 5,
};

enum class EFortEncounterPacingMode : uint8
{
	SpawnPointsPercentageCurve     = 0,
	IntensityCurve                 = 1,
	Burst                          = 2,
	Fixed                          = 3,
	EFortEncounterPacingMode_MAX   = 4,
};

enum class EFortMissionAudibility : uint8
{
	UseVisibility                  = 0,
	Audible                        = 1,
	Inaudible                      = 2,
	EFortMissionAudibility_MAX     = 3,
};

enum class EFortMissionType : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Max_None                       = 2,
	EFortMissionType_MAX           = 3,
};

enum class EFortObjectiveRequirement : uint8
{
	Optional                       = 0,
	Required                       = 1,
	RequiredButCanFail             = 2,
	EFortObjectiveRequirement_MAX  = 3,
};

enum class EFortMissionStatus : uint8
{
	Created                        = 0,
	InProgress                     = 1,
	Succeeded                      = 2,
	Failed                         = 3,
	NeutralCompletion              = 4,
	Quit                           = 5,
	Max_None                       = 6,
	EFortMissionStatus_MAX         = 7,
};

enum class EMissionGenerationCategory : uint8
{
	Primary                        = 0,
	Secondary                      = 1,
	Tertiary                       = 2,
	Survivor                       = 3,
	Max_None                       = 4,
	EMissionGenerationCategory_MAX = 5,
};

enum class EClipMessageSettings : uint8
{
	DontShow                       = 0,
	ShowString                     = 1,
	DeduceUnicornAnnotation        = 2,
	EClipMessageSettings_MAX       = 3,
};

enum class EPegasusTimelineCategories : uint8
{
	Unassigned                     = 0,
	Player                         = 1,
	Combat                         = 2,
	Building                       = 3,
	Inventory                      = 4,
	Social                         = 5,
	Resources                      = 6,
	EPegasusTimelineCategories_MAX = 7,
};

enum class EQuickHealingRequirementFlags : uint8
{
	Nothing                        = 0,
	NeedsHealing                   = 1,
	NeedsShields                   = 2,
	NeedsBoth                      = 3,
	EQuickHealingRequirementFlags_MAX = 4,
};

enum class EVideoManagerJobTypes : uint8
{
	EliminationExtraction          = 0,
	DefinedShotSequence            = 1,
	EVideoManagerJobTypes_MAX      = 2,
};

enum class EIndexNavigationResult : uint8
{
	Succeeded                      = 0,
	Modified                       = 1,
	Clamped                        = 2,
	StepOff                        = 3,
	NoMove                         = 4,
	EIndexNavigationResult_MAX     = 5,
};

enum class EFortThreatDeactivationType : uint8
{
	Off                            = 0,
	Dormant                        = 1,
	EFortThreatDeactivationType_MAX = 2,
};

enum class EUnicornSocialFeatures : uint8
{
	INVALID                        = 0,
	FriendPlay                     = 1,
	DancePartyManpower             = 2,
	CongaLineManpower              = 3,
	SocialPartyDuration            = 4,
	COUNT                          = 5,
	EUnicornSocialFeatures_MAX     = 6,
};

enum class EHighlightReelIds : uint8
{
	INVALID                        = 0,
	MainHighlightReel              = 1,
	ShortHighlightReel             = 2,
	MicroHighlights                = 3,
	EntireGameReel                 = 4,
	ShortExtendedHighlightReel     = 5,
	MediumHighlightReel            = 6,
	MediumExtendedighlightReel     = 7,
	COUNT                          = 8,
	EHighlightReelIds_MAX          = 9,
};

enum class EWrapPreviewGridLockerMode : uint8
{
	IgnoreLockerConfiguration      = 0,
	SupportedWeaponsOnly           = 1,
	UnsupportedWeaponsOnly         = 2,
	EWrapPreviewGridLockerMode_MAX = 3,
};


//---------------------------------------------------------------------------------------------------------------------
// STRUCTS
//---------------------------------------------------------------------------------------------------------------------

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ProjectileEventData
struct FProjectileEventData
{
public:
	class AFortProjectileBase*                   SpawnedProjectile;                                 // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHitResult>                    Hits;                                              // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ExplodedActors;                                    // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIDirectorEvent
struct FFortAIDirectorEvent
{
public:
	enum class EFortAIDirectorEvent              Event;                                             // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B0E[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UObject*                               EventSource;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               EventTarget;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EventValue;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B0F[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortHomeBaseInfo
struct FFortHomeBaseInfo
{
public:
	class FString                                BannerIconId;                                      // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Name;                                              // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         ValidData;                                         // 0x38(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B10[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x200 (0x200 - 0x0)
// ScriptStruct FortniteGame.FortTeamMemberInfo
struct FFortTeamMemberInfo
{
public:
	struct FUniqueNetIdRepl                      MemberUniqueId;                                    // 0x0(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PartyLeaderUniqueId;                               // 0x28(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      ConsoleUniqueId;                                   // 0x50(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Platform;                                          // 0x78(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PlayerName;                                        // 0x88(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bPartyLeader;                                      // 0xA0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInZone;                                         // 0xA1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBoostXp;                                       // 0xA2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasRestXp;                                        // 0xA3(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B11[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                BannerIconId;                                      // 0xA8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBattlePassPurchased;                              // 0xC8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B12[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        BattlePassLevel;                                   // 0xCC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassSelfXpBoost;                             // 0xD0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassFriendXpBoost;                           // 0xD4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPlayersInParty;                                 // 0xD8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerIndex;                                       // 0xDC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeamAffiliation;                                   // 0xE0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B13[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  HeroClass;                                         // 0xE8(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HeroLevel;                                         // 0x100(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        HeroXP;                                            // 0x118(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B14[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortItem*                             HeroItem;                                          // 0x120(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItem*>                     SelectedGadgetItems;                               // 0x128(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                           HeroIcon;                                          // 0x138(0x88)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortHomeBaseInfo                     HomeBaseInfo;                                      // 0x1C0(0x40)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortItemInstanceQuantityPair
struct FFortItemInstanceQuantityPair
{
public:
	class UFortItem*                             Item;                                              // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInventoryType                InventoryType;                                     // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B15[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Quantity;                                          // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.XPEventInfo
struct FXPEventInfo
{
public:
	class FName                                  EventName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SimulatedText;                                     // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              QuestDef;                                          // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EXPEventPriorityType              Priority;                                          // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B16[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        EventXpValue;                                      // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalXpEarnedInMatch;                              // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       Accolade;                                          // 0x34(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestedValuePortion;                                // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonBoostValuePortion;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestedXPRemaining;                                 // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PurchasedItemInfo
struct FPurchasedItemInfo
{
public:
	class UFortItem*                             Item;                                              // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B17[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.AthenaLevelInfo
struct FAthenaLevelInfo
{
public:
	int32                                        AccountLevel;                                      // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLevel;                                          // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelXp;                                           // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelXpForLevel;                                   // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookLevel;                                         // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookMaxLevel;                                      // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookLevelXp;                                       // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookLevelXpForLevel;                               // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x34 (0x34 - 0x0)
// ScriptStruct FortniteGame.FortPublicAccountInfo
struct FFortPublicAccountInfo
{
public:
	int32                                        Level;                                             // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLevel;                                          // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelXp;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelXpForLevel;                                   // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAthenaLevelInfo                      BattleRoyaleLevel;                                 // 0x10(0x24)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x38 - 0x34)
// ScriptStruct FortniteGame.FortPrivateAccountInfo
struct FFortPrivateAccountInfo : public FFortPublicAccountInfo
{
public:
	int32                                        MtxBalance;                                        // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.McpPrivacySettings
struct FMcpPrivacySettings
{
public:
	bool                                         OptOutOfPublicLeaderboards;                        // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OptOutOfFriendsLeaderboards;                       // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.McpBanInfo
struct FMcpBanInfo
{
public:
	bool                                         bRequiresUserAck;                                  // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B18[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<enum class EPlayerBanReasons>         BanReasons;                                        // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bBanHasStarted;                                    // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B19[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             BanStartTimeUtc;                                   // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BanDurationDays;                                   // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B1A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ExploitProgramName;                                // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AdditionalInfo;                                    // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerCompetitiveBanReasons      CompetitiveBanReason;                              // 0x50(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B1B[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortCampaignLoadout
struct FFortCampaignLoadout
{
public:
	class UFortPersonalVehicleItem*              PersonalVehicle;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FriendCode
struct FFriendCode
{
public:
	class FString                                Code;                                              // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CodeType;                                          // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CosmeticVariantInfo
struct FCosmeticVariantInfo
{
public:
	struct FGameplayTag                          VariantChannelTag;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ActiveVariantTag;                                  // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x38 - 0x10)
// ScriptStruct FortniteGame.McpVariantChannelInfo
struct FMcpVariantChannelInfo : public FCosmeticVariantInfo
{
public:
	struct FGameplayTagContainer                 OwnedVariantTags;                                  // 0x10(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   ItemVariantIsUsedFor;                              // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct FortniteGame.FortAthenaLoadout
struct FFortAthenaLoadout
{
public:
	class FString                                BannerIconId;                                      // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaSkyDiveContrailItemDefinition*  SkyDiveContrail;                                   // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaGliderItemDefinition*           Glider;                                            // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaPickaxeItemDefinition*          Pickaxe;                                           // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDefaultCharacter;                               // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B1C[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UAthenaCharacterItemDefinition*        Character;                                         // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMcpVariantChannelInfo>        CharacterVariantChannels;                          // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bForceUpdateVariants;                              // 0x58(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B1D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UAthenaHatItemDefinition*              Hat;                                               // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaBackpackItemDefinition*         Backpack;                                          // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaLoadingScreenItemDefinition*    LoadingScreen;                                     // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaBattleBusItemDefinition*        BattleBus;                                         // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaVehicleCosmeticItemDefinition*  VehicleDecoration;                                 // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaCallingCardItemDefinition*      CallingCard;                                       // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaMapMarkerItemDefinition*        MapMarker;                                         // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAthenaDanceItemDefinition*>    Dances;                                            // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaVictoryPoseItemDefinition*      VictoryPose;                                       // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaMusicPackItemDefinition*        MusicPack;                                         // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaItemWrapDefinition*             ItemWrapOverride;                                  // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAthenaItemWrapDefinition*>     ItemWraps;                                         // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaCharmItemDefinition*            CharmOverride;                                     // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAthenaCharmItemDefinition*>    Charms;                                            // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaPetItemDefinition*              PetSkin;                                           // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FriendCodeLocString
struct FFriendCodeLocString
{
public:
	class FString                                Lang;                                              // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct FortniteGame.AthenaTravelLogEntry
struct FAthenaTravelLogEntry
{
public:
	float                                        Time;                                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EAthenaTravelEventType            Type;                                              // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B1E[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  InstigatorName;                                    // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      InstigatorId;                                      // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaTravelLogPlayerType        InstigatorPlayerType;                              // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B1F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  ReceiverName;                                      // 0x54(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B20[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      ReceiverId;                                        // 0x60(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaTravelLogPlayerType        ReceiverPlayerType;                                // 0x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B21[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Value;                                             // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJsonObjectWrapper                    Meta;                                              // 0x90(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 LocationPOITags;                                   // 0xB0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchLootReward
struct FAthenaMatchLootReward
{
public:
	class FString                                TemplateId;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Amount;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B22[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchXpReward
struct FAthenaMatchXpReward
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        Amount;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B23[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaTravelRecord
struct FAthenaTravelRecord
{
public:
	TArray<struct FAthenaTravelLogEntry>         Log;                                               // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchXpMultiplierGroup
struct FAthenaMatchXpMultiplierGroup
{
public:
	enum class EAthenaMatchXpMultiplierSource    Source;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B24[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Amount;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AthenaAwardGroup
struct FAthenaAwardGroup
{
public:
	enum class ERewardSource                     RewardSource;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B25[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMcpLootEntry>                 Items;                                             // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Score;                                             // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SeasonXp;                                          // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookXp;                                            // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B26[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.AthenaRewardResult
struct FAthenaRewardResult
{
public:
	int32                                        LevelsGained;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookLevelsGained;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalSeasonXpGained;                               // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalBookXpGained;                                 // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrePenaltySeasonXpGained;                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B27[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FAthenaMatchXpMultiplierGroup> XpMultipliers;                                     // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAthenaAwardGroup>             Rewards;                                           // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AntiAddictionMultiplier;                           // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B28[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchTeamStats
struct FAthenaMatchTeamStats
{
public:
	int32                                        Place;                                             // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalPlayers;                                      // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.AthenaWeaponStats
struct FAthenaWeaponStats
{
public:
	class FString                                WeaponId;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Stats[0x11];                                       // 0x10(0x44)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B29[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaXPStats
struct FAthenaXPStats
{
public:
	class FName                                  Stat;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Count;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        XP;                                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.AthenaMatchStats
struct FAthenaMatchStats
{
public:
	class FString                                StatBucket;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MatchID;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MatchEndTime;                                      // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MatchPlatform;                                     // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Stats[0x14];                                       // 0x40(0x50)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAthenaWeaponStats>            WeaponStats;                                       // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FAthenaXPStats>                XPStats;                                           // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AsyncTaskResult
struct FAsyncTaskResult
{
public:
	bool                                         bSucceeded;                                        // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3B2A[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ErrorCode;                                         // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  ErrorMessage;                                      // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.VolumePerformanceMetrics
struct FVolumePerformanceMetrics
{
public:
	int32                                        PerformanceValue;                                  // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PerformanceMaxValue;                               // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PerformanceLowendThreshold;                        // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviewDeltaValue;                                 // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBudgetCategory               Category;                                          // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B2B[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.AthenaGameMessageData
struct FAthenaGameMessageData
{
public:
	enum class EAthenaGameMsgType                MsgType;                                           // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B2C[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  MsgText;                                           // 0x8(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class USoundCue*                             MsgSound;                                          // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MsgDelay;                                          // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTeamBased;                                      // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B2D[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        TeamIndex;                                         // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisplayTime;                                       // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                     TargetPlayerController;                            // 0x38(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x58 - 0x40)
// ScriptStruct FortniteGame.HUDMessageData
struct FHUDMessageData : public FAthenaGameMessageData
{
public:
	enum class EHUDMessagePlacement              Placement;                                         // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B2E[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class APlayerState*                          PlayerState;                                       // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHUDMessageMessageTargets         MessageTargets;                                    // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B2F[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAttributeInitializationKey
struct FFortAttributeInitializationKey
{
public:
	class FName                                  AttributeInitCategory;                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttributeInitSubCategory;                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.MarkedActorDisplayInfo
struct FMarkedActorDisplayInfo
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x18(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               CustomIndicatorClass;                              // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PrimaryColor;                                      // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            Sound;                                             // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMarkedActorScreenClamping    ScreenClamping;                                    // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B30[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortDeliveryInfoRequirementsFilter
struct FFortDeliveryInfoRequirementsFilter
{
public:
	struct FGameplayTagRequirements              SourceTagRequirements;                             // 0x0(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements              TargetTagRequirements;                             // 0x40(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortTeamAffiliation              ApplicableTeamAffiliation;                         // 0x80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B31[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        bConsiderTeamAffiliationToInstigator : 1;          // Mask: 0x1, PropSize: 0x10x84(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_282 : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3B32[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EFortTeam                         ApplicableTeam;                                    // 0x88(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B33[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        bConsiderTeam : 1;                                 // Mask: 0x1, PropSize: 0x10x8C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bApplyToPlayerPawns : 1;                           // Mask: 0x2, PropSize: 0x10x8C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bApplyToAIPawns : 1;                               // Mask: 0x4, PropSize: 0x10x8C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bApplyToBuildingActors : 1;                        // Mask: 0x8, PropSize: 0x10x8C(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_283 : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3B34[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EFortDeliveryInfoBuildingActorSpecification BuildingActorSpecification;                        // 0x90(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B35[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        bApplyToGlobalEnvironmentAbilityActor : 1;         // Mask: 0x1, PropSize: 0x10x94(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B36[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.ProximityBasedGEDeliveryInfoBase
struct FProximityBasedGEDeliveryInfoBase
{
public:
	uint8                                        Pad_3B37[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortDeliveryInfoRequirementsFilter   DeliveryRequirements;                              // 0x8(0x98)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EFortProximityBasedGEApplicationType ProximityApplicationType;                          // 0xA0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3B38[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GameplayEffectApplicationInfoHard
struct FGameplayEffectApplicationInfoHard
{
public:
	TSubclassOf<class UGameplayEffect>           GameplayEffect;                                    // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Level;                                             // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B39[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0xB8 - 0xA8)
// ScriptStruct FortniteGame.ProximityBasedGEDeliveryInfoHard
struct FProximityBasedGEDeliveryInfoHard : public FProximityBasedGEDeliveryInfoBase
{
public:
	TArray<struct FGameplayEffectApplicationInfoHard> EffectsToApply;                                    // 0xA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.FortAbilitySetDeliveryInfo
struct FFortAbilitySetDeliveryInfo
{
public:
	struct FFortDeliveryInfoRequirementsFilter   DeliveryRequirements;                              // 0x0(0x98)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UFortAbilitySet>> AbilitySets;                                       // 0x98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAbilitySetHandle
struct FFortAbilitySetHandle
{
public:
	TWeakObjectPtr<class UAbilitySystemComponent> TargetAbilitySystemComponent;                      // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAbilitySpecHandle>    GrantedAbilityHandles;                             // 0x8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FActiveGameplayEffectHandle>   AppliedEffectHandles;                              // 0x18(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.BuildingGameplayActorAbilityDeliveryBucket
struct FBuildingGameplayActorAbilityDeliveryBucket
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FProximityBasedGEDeliveryInfoHard> ProximityEffectBuckets;                            // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetDeliveryInfo>   PawnPersistentAbilitySetBuckets;                   // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         PersistentlyAppliedAbilitySets;                    // 0x28(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnabledByDefault : 1;                             // Mask: 0x2, PropSize: 0x10x38(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnTouch : 1;                         // Mask: 0x4, PropSize: 0x10x38(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnExit : 1;                          // Mask: 0x8, PropSize: 0x10x38(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnPulseTimer : 1;                    // Mask: 0x10, PropSize: 0x10x38(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasPersistentEffects : 1;                         // Mask: 0x20, PropSize: 0x10x38(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3B3A[0x57];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.BuildingGameplayActorAbilityDeliveryInfo
struct FBuildingGameplayActorAbilityDeliveryInfo
{
public:
	TArray<struct FBuildingGameplayActorAbilityDeliveryBucket> DeliveryBuckets;                                   // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ProximityPulseInterval;                            // 0x10(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ProximityPrePulseTime;                             // 0x30(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnTouch : 1;                         // Mask: 0x1, PropSize: 0x10x50(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnExit : 1;                          // Mask: 0x2, PropSize: 0x10x50(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnPulseTimer : 1;                    // Mask: 0x4, PropSize: 0x10x50(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasPersistentEffects : 1;                         // Mask: 0x8, PropSize: 0x10x50(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_284 : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3B3B[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class ABuildingGameplayActor*                OwningActor;                                       // 0x58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        DeferredTouchActorsToProcess;                      // 0x60(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3B3C[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.VolumeActorStats
struct FVolumeActorStats
{
public:
	TMap<enum class EFortBuildingType, int32>    BuildingTypeCounts;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortEventName
struct FFortEventName
{
public:
	class FName                                  CategoryName;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x0 (0x10 - 0x10)
// ScriptStruct FortniteGame.FortClientEventName
struct FFortClientEventName : public FFortEventName
{
public:
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortPlayerAttributeSets
struct FFortPlayerAttributeSets
{
public:
	class UFortRegenHealthSet*                   HealthSet;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortControlResistanceSet*             ControlResistanceSet;                              // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDamageSet*                        DamageSet;                                         // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMovementSet*                      MovementSet;                                       // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAdvancedMovementSet*              AdvancedMovementSet;                               // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortConstructionSet*                  ConstructionSet;                                   // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlayerAttrSet*                    PlayerAttrSet;                                     // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCharacterAttrSet*                 CharacterAttrSet;                                  // 0x38(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponAttrSet*                    WeaponAttrSet;                                     // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHomebaseSet*                      HomebaseSet;                                       // 0x48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.ReplicatedStatValues
struct FReplicatedStatValues
{
public:
	int32                                        StatValue;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScoreValue;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.CustomCharacterData
struct FCustomCharacterData
{
public:
	uint8                                        WasPartReplicatedFlags;                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B3D[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        RequiredVariantPartFlags;                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomCharacterPart*                  Parts[0x6];                                        // 0x8(0x30)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaCharmItemDefinition*            Charms[0x4];                                       // 0x38(0x20)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCustomCharacterPart*>          VariantRequiredCharacterParts;                     // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bReplicationFailed;                                // 0x68(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B3E[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.FortExperienceDelta
struct FFortExperienceDelta
{
public:
	int32                                        Level;                                             // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XP;                                                // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseXPEarned;                                      // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusXPEarned;                                     // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPEarned;                                     // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPMissed;                                     // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestXPEarned;                                      // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GroupBoostXPEarned;                                // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortIsFinalXpUpdate              IsFinalXpUpdate;                                   // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B3F[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.SimulatedAttributeEntry
struct FSimulatedAttributeEntry
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x0(0x20)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentValue;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B40[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AccumulatedItemEntry
struct FAccumulatedItemEntry
{
public:
	class UFortWorldItemDefinition*              ItemDefinition;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B41[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0x18 - 0xC)
// ScriptStruct FortniteGame.FortSpectatorZoneItem
struct FFortSpectatorZoneItem : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3B42[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerStateZone*                  PlayerState;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.FortSpectatorZoneArray
struct FFortSpectatorZoneArray : public FFastArraySerializer
{
public:
	TArray<struct FFortSpectatorZoneItem>        SpectatorArray;                                    // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AFortPlayerStateZone*                  OwningState;                                       // 0x118(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCreativeMessageDispatcherErrorMessage
struct FFortCreativeMessageDispatcherErrorMessage
{
public:
	enum class EMessageDispatcherErrorMessageType ErrorMessageType;                                  // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B43[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  MessageName;                                       // 0x8(0x18)(NativeAccessSpecifierPublic)
	struct FGameplayTag                          ChannelId;                                         // 0x20(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LimitValue;                                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B44[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.DeathInfo
struct FDeathInfo
{
public:
	class AActor*                                FinisherOrDowner;                                  // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Downer;                                            // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDBNO;                                             // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DeathCause;                                        // 0x11(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B45[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Distance;                                          // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DeathLocation;                                     // 0x18(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInitialized;                                      // 0x24(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B46[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 DeathTags;                                         // 0x28(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B47[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MetricStateInformation
struct FMetricStateInformation
{
public:
	class FString                                Name;                                              // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Description;                                       // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBudgetCategory               Category;                                          // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B48[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Cost;                                              // 0x24(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Budget;                                            // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B49[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.DetailedMetricInformation
struct FDetailedMetricInformation
{
public:
	TArray<struct FMetricStateInformation>       MetricStates;                                      // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.SimpleMetricInformation
struct FSimpleMetricInformation
{
public:
	TArray<enum class EFortBudgetCategory>       CategoryNames;                                     // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                CategoryValues;                                    // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                CategoryBudgets;                                   // 0x20(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortResurrectionData
struct FFortResurrectionData
{
public:
	bool                                         bResurrectionChipAvailable;                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B4A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ResurrectionExpirationTime;                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResurrectionExpirationLength;                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldLocation;                                     // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ChangeTeamInfo
struct FChangeTeamInfo
{
public:
	class AActor*                                Instigator;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ChangeTeamTags;                                    // 0x8(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlayerBannerInfo
struct FPlayerBannerInfo
{
public:
	class FString                                IconId;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ColorId;                                           // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B4B[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortRespawnData
struct FFortRespawnData
{
public:
	bool                                         bRespawnDataAvailable;                             // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientIsReady;                                    // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bServerIsReady;                                    // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B4C[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               RespawnLocation;                                   // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RespawnRotation;                                   // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RespawnCameraDistance;                             // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.Voter
struct FVoter
{
public:
	int32                                        VoteDecision;                                      // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastVoteDecision;                                  // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      NetId;                                             // 0x8(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumVotesCast;                                      // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B4D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortItemEntryStateValue
struct FFortItemEntryStateValue
{
public:
	int32                                        IntValue;                                          // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  NameValue;                                         // 0x4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortItemEntryState               StateType;                                         // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B4E[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGiftingInfo
struct FFortGiftingInfo
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                         HeroType;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B4F[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x114 (0x120 - 0xC)
// ScriptStruct FortniteGame.FortItemEntry
struct FFortItemEntry : public FFastArraySerializerItem
{
public:
	int32                                        Count;                                             // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PreviousCount;                                     // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3B50[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int16                                        OrderIndex;                                        // 0x20(0x2)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B51[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Durability;                                        // 0x24(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Level;                                             // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LoadedAmmo;                                        // 0x2C(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        AlterationDefinitions;                             // 0x30(0x10)(ZeroConstructor, SaveGame, RepSkip, NativeAccessSpecifierPrivate)
	class FString                                ItemSource;                                        // 0x40(0x10)(ZeroConstructor, SaveGame, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 ItemGuid;                                          // 0x50(0x10)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         Inventory_overflow_date;                           // 0x60(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWasGifted;                                        // 0x61(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsReplicatedCopy;                                 // 0x62(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsDirty;                                          // 0x63(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUpdateStatsOnCollection;                          // 0x64(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B52[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortGiftingInfo                      GiftingInfo;                                       // 0x68(0x28)(RepSkip, NativeAccessSpecifierPrivate)
	TArray<struct FFortItemEntryStateValue>      StateValues;                                       // 0x90(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortInventory>         ParentInventory;                                   // 0xA0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAbilitySpecHandle            GameplayAbilitySpecHandle;                         // 0xA8(0x4)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B53[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UFortAlterationItemDefinition*> AlterationInstances;                               // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<float>                                GenericAttributeValues;                            // 0xC0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B54[0x50];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ChoiceDataEntry
struct FChoiceDataEntry
{
public:
	class FText                                  ButtonText;                                        // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ButtonDescription;                                 // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ConfirmText;                                       // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireConfirmation;                              // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCloseAfterSelection;                              // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B55[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ChoiceData
struct FChoiceData
{
public:
	int32                                        MenuIdentifier;                                    // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCloseButton;                                  // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B56[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  Title;                                             // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FChoiceDataEntry>              Items;                                             // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AttributeModifierInfo
struct FAttributeModifierInfo
{
public:
	uint8                                        Pad_3B57[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UGameplayEffect*                       InstantGEs;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B58[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.BuildingWeakSpotData
struct FBuildingWeakSpotData
{
public:
	TWeakObjectPtr<class ABuildingSMActor>       ParentBuilding;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             Normal;                                            // 0x8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 Position;                                          // 0x14(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HitCount;                                          // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B59[0x14];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortRequirementsInfo
struct FFortRequirementsInfo
{
public:
	int32                                        CommanderLevel;                                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PersonalPowerRating;                               // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPersonalPowerRating;                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PartyPowerRating;                                  // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPartyPowerRating;                               // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B5A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UFortQuestItemDefinition*>      ActiveQuestDefinitions;                            // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              QuestDefinition;                                   // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ObjectiveStatHandle;                               // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              UncompletedQuestDefinition;                        // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventFlag;                                         // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BuildingClassData
struct FBuildingClassData
{
public:
	TSubclassOf<class ABuildingActor>            BuildingClass;                                     // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousBuildingLevel;                             // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UpgradeLevel;                                      // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B5B[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CreateBuildingActorData
struct FCreateBuildingActorData
{
public:
	uint32                                       BuildingClassHandle;                               // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 BuildLoc;                                          // 0x4(0xC)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BuildRot;                                          // 0x10(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bMirrored;                                         // 0x1C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B5C[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        SyncKey;                                           // 0x20(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FBuildingClassData                    BuildingClassData;                                 // 0x28(0x10)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPickupTossOverrideData
struct FFortPickupTossOverrideData
{
public:
	bool                                         bIsValid;                                          // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B5E[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MinTossDist;                                       // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTossDist;                                       // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnDirectionConeHalfAngle;                       // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.LockOnInfo
struct FLockOnInfo
{
public:
	enum class ELockOnState                      State;                                             // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B5F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TWeakObjectPtr<class AFortWeapon>            Weapon;                                            // 0x4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 LockOnTarget;                                      // 0xC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CamRotAtTargetAcquisiton;                          // 0x14(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                             LockOnCoords;                                      // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetAcquisitionTime;                             // 0x28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetLockOnTime;                                  // 0x2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetOutOfSightTime;                              // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CooldownStartTime;                                 // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPersistentGameplayStatValue
struct FFortPersistentGameplayStatValue
{
public:
	class FString                                StatName;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B60[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPersistentGameplayStatContainer
struct FFortPersistentGameplayStatContainer
{
public:
	TArray<struct FFortPersistentGameplayStatValue> GameplayStats;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortUpdatedObjectiveStat
struct FFortUpdatedObjectiveStat
{
public:
	class UFortQuestItemDefinition*              Quest;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackendName;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatDelta;                                         // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentStage;                                      // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B61[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortRewardActivity
struct FFortRewardActivity
{
public:
	enum class EFortRewardActivityType           ActivityType;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B62[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGuid                                 ActivityGuid;                                      // 0x4(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B63[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  TitleText;                                         // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  DescriptionText;                                   // 0x30(0x18)(NativeAccessSpecifierPublic)
	float                                        RewardDisplayTime;                                 // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B64[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortItemEntry>                RewardItems;                                       // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemEntry>                MissedRewardItems;                                 // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortCompletionResult             ActivityCompletionResult;                          // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B65[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        AdditionalCompletionMissionPoints;                 // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortRewardReport
struct FFortRewardReport
{
public:
	class FText                                  MissionName;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
	class FText                                  TheaterName;                                       // 0x18(0x18)(NativeAccessSpecifierPublic)
	class FText                                  Difficulty;                                        // 0x30(0x18)(NativeAccessSpecifierPublic)
	float                                        DifficultyValue;                                   // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B66[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortRewardActivity>           RewardActivities;                                  // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsFinalized;                                      // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B67[0xF];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x34 (0x40 - 0xC)
// ScriptStruct FortniteGame.DelayedQuickBarAction
struct FDelayedQuickBarAction : public FFastArraySerializerItem
{
public:
	uint32                                       ActionId;                                          // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDelayedQuickBarAction        Action;                                            // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B68[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGuid                                 ItemGuid;                                          // 0x14(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       ItemDefinitionAssetId;                             // 0x24(0x10)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuickBars                    QuickBarType;                                      // 0x34(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B69[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        QuickBarSlot;                                      // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceExecution;                                   // 0x3C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B6A[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.DelayedQuickBarActionContainer
struct FDelayedQuickBarActionContainer : public FFastArraySerializer
{
public:
	TArray<struct FDelayedQuickBarAction>        Items;                                             // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B6B[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.FortDamageNumberInfo
struct FFortDamageNumberInfo
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitNormal;                                         // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCriticalDamage;                                 // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B6C[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Damage;                                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDamageNumberType             DamageNumberType;                                  // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B6D[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        VisualDamageScale;                                 // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortElementalDamageType          ElementalDamageType;                               // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatCategory                     ScoreType;                                         // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachScoreNumberToPlayer;                        // 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B6E[0x5];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      MeshMIDs;                                          // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                DamageNumberArray;                                 // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DamagedActorTags;                                  // 0x58(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 DamagedActor;                                      // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APawn>                  DamageCauser;                                      // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.LastBuildableState
struct FLastBuildableState
{
public:
	class UBuildingEditModeMetadata*             LastBuildableMetaData;                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LastBuildableMirrored;                             // 0x8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B6F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LastBuildableRotationIterations;                   // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AIDirectorDebugInfo
struct FAIDirectorDebugInfo
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B70[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<float>                                DebugGraphData;                                    // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B71[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ItemAndCount
struct FItemAndCount
{
public:
	int32                                        Count;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B72[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortItemDefinition*                   Item;                                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x150 (0x150 - 0x0)
// ScriptStruct FortniteGame.VehicleTrickInfo
struct FVehicleTrickInfo
{
public:
	float                                        LastOnGroundTime;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInAirTrick;                                       // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreditTrick;                                      // 0x5(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B73[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MCreditDisabledTime;                               // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrickDeactivated;                                 // 0xC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStuckLanding;                                     // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B74[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        TrickScore;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B75[0x90];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        TrickAxisCount;                                    // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B76[0x18];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         bDoingRotationTrick;                               // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B77[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        AirControlsAlpha;                                  // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirDistance;                                       // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirDistanceSqrd;                                   // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirTime;                                           // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirHeight;                                         // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeAtLaunch;                                      // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationAtLaunch;                                  // 0xDC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ForwardVectorAtLaunch;                             // 0xE8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UpVectorAtLaunch;                                  // 0xF4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FlatForwardVectorAtLaunch;                         // 0x100(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PrevForwardVec;                                    // 0x10C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PrevRightVec;                                      // 0x118(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PrevUpVec;                                         // 0x124(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PeterPanCount;                                     // 0x130(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StoopingSquirrelCount;                             // 0x134(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDidPeterPan : 1;                                  // Mask: 0x1, PropSize: 0x10x138(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDidStoopingSquirrel : 1;                          // Mask: 0x2, PropSize: 0x10x138(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B78[0x17];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.CreativeOptionVariableBase
struct FCreativeOptionVariableBase
{
public:
	struct FGameplayTag                          VariableTag;                                       // 0x0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.GhostModeRepData
struct FGhostModeRepData
{
public:
	bool                                         bInGhostMode;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B79[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortWorldItemDefinition*              GhostModeItemDef;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousFocusedSlot;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeExitedGhostMode;                               // 0x14(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortPlayerDeathReport
struct FFortPlayerDeathReport
{
public:
	float                                        ServerTimeForRespawn;                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerTimeForResurrect;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LethalDamage;                                      // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerState*                      KillerPlayerState;                                 // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             KillerPawn;                                        // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillerHealthPercent;                               // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillerShieldPercent;                               // 0x24(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             KillerWeapon;                                      // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDroppedBackpack : 1;                              // Mask: 0x1, PropSize: 0x10x38(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNotifyUI : 1;                                     // Mask: 0x2, PropSize: 0x10x38(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_285 : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3B7B[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 Tags;                                              // 0x40(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
};

// 0x2A8 (0x2A8 - 0x0)
// ScriptStruct FortniteGame.FortPlayerScoreReport
struct FFortPlayerScoreReport
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortPlayerState>       PlayerState;                                       // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         PlayerTeam;                                        // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B7C[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FReplicatedStatValues                 ReplicatedStats_Campaign[0x23];                    // 0x44(0x118)(NoDestructor, NativeAccessSpecifierPublic)
	struct FReplicatedStatValues                 ReplicatedStats_Zone[0x23];                        // 0x15C(0x118)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        InitialLevel;                                      // 0x274(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialExperienceAmount;                           // 0x278(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortExperienceDelta                  ExperienceInfoDelta;                               // 0x27C(0x24)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        LastExperienceDeltaAmount;                         // 0x2A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastScoreDeltaAmount;                              // 0x2A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortVoteConfig
struct FFortVoteConfig
{
public:
	int32                                        NumVoteOptions;                                    // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VoteDuration;                                      // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FailedVoteLockOutDuration;                         // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxVotesAllowedPerPlayer;                          // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortVoteArbitratorType           VoteArbitratorType;                                // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B7D[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.EndOfDayRecap
struct FEndOfDayRecap
{
public:
	int32                                        DayNumber;                                         // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamScoreAtStartOfDay;                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamScoreAtEndOfDay;                               // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B7E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortPlayerScoreReport>        ScoreReports;                                      // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BuildingContainerDebugInfo
struct FBuildingContainerDebugInfo
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B7F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 LocationTags;                                      // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x110 (0x110 - 0x0)
// ScriptStruct FortniteGame.GameStateLootInfo
struct FGameStateLootInfo
{
public:
	TSubclassOf<class ABuildingContainer>        TreasureChestClass;                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TreasureChestMinSpawnPercent;                      // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TreasureChestMaxSpawnPercent;                      // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GoldenPoiTreasureChestMinSpawnPercent;             // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GoldenPoiTreasureChestMaxSpawnPercent;             // 0x68(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingContainer>        AmmoBoxClass;                                      // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AmmoBoxMinSpawnPercent;                            // 0x90(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AmmoBoxMaxSpawnPercent;                            // 0xB0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GoldenPoiAmmoBoxMinSpawnPercent;                   // 0xD0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GoldenPoiAmmoBoxMaxSpawnPercent;                   // 0xF0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AppliedHomebaseData
struct FAppliedHomebaseData
{
public:
	class UAbilitySystemComponent*               Source;                                            // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*               Target;                                            // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActiveGameplayEffectHandle>   AppliedEffects;                                    // 0x10(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortAbilitySetHandle>         AppliedAbilitySets;                                // 0x20(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TeamChangeRequest
struct FTeamChangeRequest
{
public:
	class AFortPlayerController*                 RequestingController;                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        DesiredTeam;                                       // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B80[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.OnTimeHitInfo
struct FOnTimeHitInfo
{
public:
	UDelegateProperty_                           TimeCallback;                                      // 0x0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B81[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1D0 (0x1D0 - 0x0)
// ScriptStruct FortniteGame.TieredWaveSetData
struct FTieredWaveSetData
{
public:
	int32                                        EDOIdx;                                            // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreatherBetweenWaves;                              // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWaveRules                        WaveRules;                                         // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B82[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTag                          EnemyTypeToKillMod;                                // 0xC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B83[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<TSoftObjectPtr<class UFortMissionInfo>> WaveMissions;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        WaveLengthMod;                                     // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumKillsMod;                                       // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KillPointsMod;                                     // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyAddMod;                                  // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeferTemporaryModifiers;                          // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B84[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftClassPtr<class UFortDifficultyOptionEncounter_SpawnPointsMultiplier> OverrideSpawnPointsMultiplier;                     // 0x40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_SpawnPointsCurve> OverrideSpawnPointsCurve;                          // 0x68(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_SpawnGroupProgression> OverrideSpawnProgression;                          // 0x90(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_UtilitiesAdjustment> OverrideUtilitiesAdjustment;                       // 0xB8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_UtilitiesFree> OverrideUtilitiesFree;                             // 0xE0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_UtilitiesLocked> OverrideUtilitiesLocked;                           // 0x108(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_Distance> OverrideDistance;                                  // 0x130(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_DirectionNumber> OverrideDirectionNumber;                           // 0x158(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_ModifierTags> OverrideModifierTags;                              // 0x180(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortDifficultyOptionEncounter_TimedModifierTags> OverrideTimedModifierTags;                         // 0x1A8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.ActiveGameplayModifierHandle
struct FActiveGameplayModifierHandle
{
public:
	int32                                        Handle;                                            // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.VoteData
struct FVoteData
{
public:
	enum class EFortVoteType                     VoteType;                                          // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B85[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      VoteInstigatorNetId;                               // 0x8(0x28)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortVoteConfig                       VoteConfig;                                        // 0x30(0x14)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B86[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             VoteStartTime;                                     // 0x48(0x8)(ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             VoteEndTime;                                       // 0x50(0x8)(ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVoter>                        Voters;                                            // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        NumVotersWithMaxVotes;                             // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B87[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTimerHandle                          EndVoteTimerHandle;                                // 0x70(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortVoteStatus                   VoteStatus;                                        // 0x78(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B88[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlayerBuildableClassContainer
struct FPlayerBuildableClassContainer
{
public:
	TArray<TSubclassOf<class ABuildingSMActor>>  BuildingClasses;                                   // 0x0(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortItemQuantityPair
struct FFortItemQuantityPair
{
public:
	struct FPrimaryAssetId                       ItemPrimaryAssetId;                                // 0x0(0x10)(Edit, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Quantity;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortZoneMissionAlertData
struct FFortZoneMissionAlertData
{
public:
	TArray<struct FFortItemQuantityPair>         MissionAlertRewards;                               // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class FString                                MissionAlertCategoryName;                          // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionAlertID;                                    // 0x20(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortZoneDifficultyIncreaseRewardData
struct FFortZoneDifficultyIncreaseRewardData
{
public:
	TArray<struct FFortItemQuantityPair>         Rewards;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xCC (0xD8 - 0xC)
// ScriptStruct FortniteGame.ActiveGameplayModifier
struct FActiveGameplayModifier : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3B89[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortGameplayModifierItemDefinition*   ModifierDef;                                       // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayModifierHandle         ModifierHandle;                                    // 0x18(0x4)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B8A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class AFortGameplayMutator*>          Mutators;                                          // 0x20(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPublic)
	int32                                        Expiration;                                        // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B8B[0xA4];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x130 - 0x108)
// ScriptStruct FortniteGame.ActiveGameplayModifierArray
struct FActiveGameplayModifierArray : public FFastArraySerializer
{
public:
	TArray<struct FActiveGameplayModifier>       Items;                                             // 0x108(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FActiveGameplayModifier>       DeferredGameplayModifiers;                         // 0x118(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        ModifierHandleGenerator;                           // 0x128(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportRuntimeModifierShutdown;                   // 0x12C(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3B8C[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ReplicatedMontageIndexPair
struct FReplicatedMontageIndexPair
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Index;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B8D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ReplicatedMontageMap
struct FReplicatedMontageMap
{
public:
	TArray<struct FReplicatedMontageIndexPair>   Mappings;                                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B8E[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.EvaluationResult
struct FEvaluationResult
{
public:
	bool                                         bSucceeded;                                        // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3B8F[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ErrorCode;                                         // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  ErrorMessage;                                      // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.PlayersLeft
struct FPlayersLeft
{
public:
	int32                                        Humans;                                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Bots;                                              // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Total;                                             // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.TotalPlayers
struct FTotalPlayers
{
public:
	int32                                        Humans;                                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Bots;                                              // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Total;                                             // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AthenaStreamIdOverride
struct FAthenaStreamIdOverride
{
public:
	class FString                                SourceName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OverriddenId;                                      // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x28 - 0xC)
// ScriptStruct FortniteGame.SpawnMachineRepData
struct FSpawnMachineRepData : public FFastArraySerializerItem
{
public:
	struct FVector                               Location;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnMachineState                SpawnMachineState;                                 // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B90[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        SpawnMachineCooldownStartTime;                     // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnMachineCooldownEndTime;                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnMachineRepDataHandle;                         // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.SpawnMachineRepDataArray
struct FSpawnMachineRepDataArray : public FFastArraySerializer
{
public:
	TArray<struct FSpawnMachineRepData>          SpawnMachineRepDataArray;                          // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AFortGameStateAthena*                  OwningGameState;                                   // 0x118(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.MeshNetworkStatus
struct FMeshNetworkStatus
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConnectedToRoot;                                  // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMeshNetworkNodeType              GameServerNodeType;                                // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x28 - 0xC)
// ScriptStruct FortniteGame.GameplayMutatorObjectData
struct FGameplayMutatorObjectData : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3B91[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UObject*                               TheObject;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectId;                                          // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectValue1;                                      // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectValue2;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B92[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.GameplayMutatorObjectDataArray
struct FGameplayMutatorObjectDataArray : public FFastArraySerializer
{
public:
	TArray<struct FGameplayMutatorObjectData>    ObjectDataList;                                    // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GameplayMutatorEventData
struct FGameplayMutatorEventData
{
public:
	int32                                        EventId;                                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventParam1;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventParam2;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventParam3;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x34 (0x40 - 0xC)
// ScriptStruct FortniteGame.PropertyOverride
struct FPropertyOverride : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3B93[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                PropertyScope;                                     // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyName;                                      // 0x20(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyData;                                      // 0x30(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PropertyOverrideScope
struct FPropertyOverrideScope
{
public:
	TArray<struct FPropertyOverride>             PropertyOverrides;                                 // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0xE0 (0x1E8 - 0x108)
// ScriptStruct FortniteGame.PlaylistPropertyArray
struct FPlaylistPropertyArray : public FFastArraySerializer
{
public:
	TArray<struct FPropertyOverride>             PropertyOverrides;                                 // 0x108(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        PlaylistReplicationKey;                            // 0x118(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B94[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortPlaylistAthena*                   BasePlaylist;                                      // 0x120(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPlaylistAthena*                   OverridePlaylist;                                  // 0x128(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FPropertyOverrideScope> PropertyOverrideScopes;                            // 0x130(0x50)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B95[0x68];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.DynamicLandData
struct FDynamicLandData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPosition;                                     // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B96[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FSlateBrush                           LandBrush;                                         // 0x18(0x88)(Edit, NativeAccessSpecifierPublic)
};

// 0x2C (0x38 - 0xC)
// ScriptStruct FortniteGame.GameMemberInfo
struct FGameMemberInfo : public FFastArraySerializerItem
{
public:
	uint8                                        SquadId;                                           // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeamIndex;                                         // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B97[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      MemberUniqueId;                                    // 0x10(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.GameMemberInfoArray
struct FGameMemberInfoArray : public FFastArraySerializer
{
public:
	TArray<struct FGameMemberInfo>               Members;                                           // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AFortGameStateAthena*                  OwningGameState;                                   // 0x118(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AircraftFlightInfo
struct FAircraftFlightInfo
{
public:
	struct FVector_NetQuantize100                FlightStartLocation;                               // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FlightStartRotation;                               // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FlightSpeed;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeTillFlightEnd;                                 // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeTillDropStart;                                 // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeTillDropEnd;                                   // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortWinnerPlayerData
struct FFortWinnerPlayerData
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.StormCapDamageThresholdInfo
struct FStormCapDamageThresholdInfo
{
public:
	float                                        ThresholdFloor;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThresholdCeiling;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ProfileGoScenario
struct FProfileGoScenario
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Orientation;                                       // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                OnBegin;                                           // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OnEnd;                                             // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoGenerated;                                     // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseSetupCheats;                                    // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B98[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.AthenaQuickChatActiveEntry
struct FAthenaQuickChatActiveEntry
{
public:
	TWeakObjectPtr<class UAthenaQuickChatBank>   Bank;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                ContextObject;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        ContextValue;                                      // 0x10(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         Index;                                             // 0x12(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B99[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlayerStateEncryptionKey
struct FPlayerStateEncryptionKey
{
public:
	TArray<uint8>                                Key;                                               // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.MarkerID
struct FMarkerID
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstanceID;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x108 (0x108 - 0x0)
// ScriptStruct FortniteGame.FortWorldMarkerData
struct FFortWorldMarkerData
{
public:
	struct FMarkerID                             MarkerID;                                          // 0x0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerState*                      Owner;                                             // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortWorldMarkerType              MarkerType;                                        // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B9A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               WorldPosition;                                     // 0x14(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPositionOffset;                               // 0x20(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldNormal;                                       // 0x2C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B9B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftClassPtr<class AActor>                  MarkedActorClass;                                  // 0x48(0x28)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                 MarkedActor;                                       // 0x70(0x28)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasCustomDisplayInfo;                             // 0x98(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseHoveredMarkerDetail;                           // 0x99(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B9C[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FMarkedActorDisplayInfo               CustomDisplayInfo;                                 // 0xA0(0x68)(NativeAccessSpecifierPrivate)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.CreativePublishOptions
struct FCreativePublishOptions
{
public:
	class FString                                UserTitle;                                         // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UserDescription;                                   // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UserYoutubeVideoId;                                // 0x20(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        DescriptionTags;                                   // 0x30(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bActivateLink;                                     // 0x40(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B9D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                UserLocale;                                        // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.ReplicatedPhysicsPawnState
struct FReplicatedPhysicsPawnState
{
public:
	struct FVector_NetQuantize100                Translation;                                       // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B9E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FQuat                                 Rotation;                                          // 0x10(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 LinearVelocity;                                    // 0x20(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 AngularVelocity;                                   // 0x2C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                       SyncKey;                                           // 0x38(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B9F[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.TimeStampedPhysicsPawnState
struct FTimeStampedPhysicsPawnState
{
public:
	float                                        WorldTime;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA0[0xC];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FReplicatedPhysicsPawnState           PhysicsPawnState;                                  // 0x10(0x40)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.FortPlaysetStreamingData
struct FFortPlaysetStreamingData
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  UniquePackageName;                                 // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bValid : 1;                                        // Mask: 0x1, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA1[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CreativeIslandInfo
struct FCreativeIslandInfo
{
public:
	class FString                                IslandTitle;                                       // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IslandIntroduction;                                // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UserLocale;                                        // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.CreativePlotSessionData
struct FCreativePlotSessionData
{
public:
	uint8                                        Pad_3BA2[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        TimesInventoryOpened;                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimesIslandMenuOpened;                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimesGameStarted;                                  // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.BuildingEditAnalyticEvent
struct FBuildingEditAnalyticEvent
{
public:
	enum class EFortBuildingType                 BuildingType;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortResourceType                 ResourceType;                                      // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PartyAssistObjectiveData
struct FPartyAssistObjectiveData
{
public:
	class FName                                  BackendName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCompleted;                                        // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA3[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PartyAssistQuestData
struct FPartyAssistQuestData
{
public:
	class UFortQuestItemDefinition*              AssistedQuestDef;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerState*                      AssistedPlayer;                                    // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentQuestStage;                                 // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         QuestCompleted;                                    // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA4[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FPartyAssistObjectiveData>     Objectives;                                        // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.QuickBarSlotData
struct FQuickBarSlotData
{
public:
	TArray<enum class EFortItemType>             AcceptedItemTypes;                                 // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bStaticSlot;                                       // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA5[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UFortWorldItemDefinition> DefaultItem;                                       // 0x18(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.QuickBarData
struct FQuickBarData
{
public:
	TArray<struct FQuickBarSlotData>             QuickbarSlots;                                     // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.SettingsHUDVisibilityAndText
struct FSettingsHUDVisibilityAndText
{
public:
	struct FGameplayTag                          HUDVisibilityGameplayTag;                          // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESlateVisibility                  DefaultHUDVisibility;                              // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA6[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  DisplayText;                                       // 0x10(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ToolTipText;                                       // 0x28(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.CreativeIslandData
struct FCreativeIslandData
{
public:
	class FString                                McpId;                                             // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  IslandName;                                        // 0x10(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                PublishedIslandCode;                               // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PublishedIslandVersion;                            // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             LastLoadedDate;                                    // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             DeletedAt;                                         // 0x48(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDeleted;                                        // 0x50(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA8[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CumulativeFrameTimeWithoutSleepLimits
struct FCumulativeFrameTimeWithoutSleepLimits
{
public:
	double                                       FrameTimeWithoutSleep;                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                       MaxCumulativeFrameTimeAboveThreshold;              // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                       MaxNumberOfFramesAboveThreshold;                   // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.HotfixVolumePlacement
struct FHotfixVolumePlacement
{
public:
	struct FVector                               Center;                                            // 0x0(0xC)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Extent;                                            // 0xC(0xC)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeededOnClient;                                   // 0x18(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA9[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSpawnActorData
struct FFortSpawnActorData
{
public:
	class UFortSpawnActorInfo*                   SpawnActorInfo;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSpawnsRemaining;                                // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilNextSpawn;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        SpawnedFortSpawnActors;                            // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.AthenaVehicleOverride
struct FAthenaVehicleOverride
{
public:
	class FString                                RequiredCalendarEvent;                             // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  DefaultVehicleClass;                               // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  OverrideVehicleClass;                              // 0x38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.ExitCraftSpawnData
struct FExitCraftSpawnData
{
public:
	class UFortAthenaExitCraftInfo*              ExitCraftInfo;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.BuildingGameplayActorSpawnData
struct FBuildingGameplayActorSpawnData
{
public:
	int32                                        BGAIndex;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSpawnedBGAs;                                    // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumBGAsToSpawn;                                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextSpawnTime;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBuildingGameplayActorAircraftSpawnSide LastSpawnSide;                                     // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BAA[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.SupplyDropZoneBasedSpawnData
struct FSupplyDropZoneBasedSpawnData
{
public:
	TArray<class AFortAthenaSupplyDrop*>         SpawnedSupplyDrops;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumDropsRemainingInWave;                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextWaveSpawnTime;                                 // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextSpawnTime;                                     // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaGamePhase                  CurrGamePhase;                                     // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BAB[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        CurrSubPhase;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalSupplyDropsSpawnedInSubPhase;                 // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.SupplyDropItemDeliverySpawnData
struct FSupplyDropItemDeliverySpawnData
{
public:
	int32                                        NumItemsToDeliver;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BAC[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<float>                                QueuedSpawnTimes;                                  // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        NextSpawnTime;                                     // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumInitialSpawns;                                  // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.SupplyDropSpawnData
struct FSupplyDropSpawnData
{
public:
	class UFortSupplyDropInfo*                   SupplyDropInfo;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSupplyDropZoneBasedSpawnData         ZoneBasedData;                                     // 0x8(0x28)(NativeAccessSpecifierPublic)
	struct FSupplyDropItemDeliverySpawnData      ItemDeliveryData;                                  // 0x30(0x20)(NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.ScorePlacementTable
struct FScorePlacementTable
{
public:
	TArray<float>                                Solo;                                              // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                Duos;                                              // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                Squads;                                            // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                FiftyFifty;                                        // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                LargeTeam;                                         // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                MediumTeam;                                        // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickSolo;                                         // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickDuo;                                          // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickSquad;                                        // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickLargeTeam;                                    // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickTwoTeam;                                      // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                QuickMediumTeam;                                   // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                SinglePlacement;                                   // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                Default;                                           // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GCSettingsOverride
struct FGCSettingsOverride
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableGCOnServerDuringMatch;                      // 0x8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BAD[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        GCFrequency;                                       // 0xC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayOverride
struct FTimeOfDayOverride
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOfDay;                                         // 0x8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOfDaySpeed;                                    // 0xC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.PropertyOverrideMk2
struct FPropertyOverrideMk2
{
public:
	class FString                                PropertyScope;                                     // 0x0(0x10)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyName;                                      // 0x10(0x10)(Edit, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyData;                                      // 0x20(0x10)(Edit, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultPropertyData;                               // 0x30(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BAE[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.PropertyOverrideId
struct FPropertyOverrideId
{
public:
	uint64                                       PropertyHashes;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.PropertyOverrideData
struct FPropertyOverrideData
{
public:
	TArray<struct FPropertyOverrideMk2>          PropertyOverrides;                                 // 0x0(0x10)(Edit, ZeroConstructor, SaveGame, RepSkip, NativeAccessSpecifierPublic)
	TArray<struct FPropertyOverrideId>           SharedPropertyIds;                                 // 0x10(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FPropertyOverrideId>           PendingPropertyIds;                                // 0x20(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BAF[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EPropertyOverrideTargetType       OverrideMode;                                      // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BB0[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UObject*                               BaseObject;                                        // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                               MutableObject;                                     // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortReplayFXState
struct FFortReplayFXState
{
public:
	int32                                        DefaultParticleLODBias;                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultDepthOfFieldQuality;                        // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OverrideParticleLODBias;                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OverrideDepthOfFieldQuality;                       // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.NotificationUISettings
struct FNotificationUISettings
{
public:
	float                                        DisplayTime;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldOverrideVisibilitySettings;                 // 0x4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BB1[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.CollisionResponseRestoreState
struct FCollisionResponseRestoreState
{
public:
	uint8                                        OverlapResponse;                                   // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BlockingResponse;                                  // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.HeldObjectMovementReplicatedData
struct FHeldObjectMovementReplicatedData
{
public:
	uint8                                        RepIncrement;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BB2[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               DetachLocation;                                    // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DetachRotation;                                    // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               MovementVelocity;                                  // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.HeldObjectThrownData
struct FHeldObjectThrownData
{
public:
	struct FScalableFloat                        MaxSpeed;                                          // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravityScale;                                      // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x3C (0x3C - 0x0)
// ScriptStruct FortniteGame.ProjectileHomingData
struct FProjectileHomingData
{
public:
	enum class EFortHomingStyle                  HomingStyle;                                       // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BB3[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MinTurnSpeed;                                      // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTurnSpeed;                                      // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RampTimeFromMinToMaxTurnSpeed;                     // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockTargetDistanceThreshold;                       // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomSeed;                                        // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortPawn>              LockedOnTarget;                                    // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LockedOnTargetPosition;                            // 0x20(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetOffset;                                      // 0x2C(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ResetTurnSpeedTimer;                               // 0x38(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BB4[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortStopSimulatingRepData
struct FFortStopSimulatingRepData
{
public:
	uint8                                        RepIncrement;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BB5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               StopLocation;                                      // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.LocalizedStringPair
struct FLocalizedStringPair
{
public:
	class FString                                Locale;                                            // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TextLiteral;                                       // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CreativeIslandMatchmakingSettings
struct FCreativeIslandMatchmakingSettings
{
public:
	int32                                        MinimumNumberOfPlayers;                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumNumberOfPlayers;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MmsType;                                           // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerCount;                                       // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumberOfTeams;                                     // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayersPerTeam;                                    // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowJoinInProgress;                              // 0x24(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BB6[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EJoinInProgress                   JoinInProgressType;                                // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BB7[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x110 (0x110 - 0x0)
// ScriptStruct FortniteGame.CreativeLoadedLinkData
struct FCreativeLoadedLinkData
{
public:
	class FString                                CreatorName;                                       // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SupportCode;                                       // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Mnemonic;                                          // 0x20(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Version;                                           // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BB8[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FLocalizedStringPair>          LinkTitle;                                         // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                  AltTitle;                                          // 0x48(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FLocalizedStringPair>          LinkTagline;                                       // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        DescriptionTags;                                   // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLocalizedStringPair>          IslandIntroduction;                                // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                LinkYoutubeId;                                     // 0x90(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ImageUrl;                                          // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IslandType;                                        // 0xB0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                QuestContextTag;                                   // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AccountId;                                         // 0xD0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCreativeIslandMatchmakingSettings    MatchmakingSettings;                               // 0xE0(0x30)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x54 (0x60 - 0xC)
// ScriptStruct FortniteGame.MinigameScoreEntry
struct FMinigameScoreEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3BB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      UniqueId;                                          // 0x10(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Score;                                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BBA[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             TimeRecorded;                                      // 0x50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasScore : 1;                                     // Mask: 0x1, PropSize: 0x10x58(0x1)(RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BBB[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.RemoteViewRotSnapshotManager
struct FRemoteViewRotSnapshotManager
{
public:
	int32                                        BufferSize;                                        // 0x0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeDelay;                                         // 0x4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseVariableTimeDelay;                             // 0x8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BBC[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        VariableTimeDelayMultiplier;                       // 0xC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBeforeDormant;                                 // 0x10(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterpSpeedWhenNoSample;                           // 0x14(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BBD[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.NamePlateFilter
struct FNamePlateFilter
{
public:
	bool                                         bIsSet;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BBE[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSet<struct FUniqueNetIdRepl>                NamePlatesToShow;                                  // 0x8(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x180 (0x180 - 0x0)
// ScriptStruct FortniteGame.SavedSpectatorCameraState
struct FSavedSpectatorCameraState
{
public:
	bool                                         bDataIsValid;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpectatorCameraType              CameraType;                                        // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BBF[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      FollowedPlayerUniqueId;                            // 0x8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCameraFilmbackSettings               FilmbackSettings;                                  // 0x30(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraLensSettings                   LensSettings;                                      // 0x3C(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC0[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FCameraFocusSettings                  FocusSettings;                                     // 0x58(0x58)(NativeAccessSpecifierPublic)
	float                                        CurrentFocalLength;                                // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentAperture;                                   // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoFocus;                                        // 0xB8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC1[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        CurrentFocusDistance;                              // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoExposure;                                     // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC2[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ManualExposureBias;                                // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC3[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            Transform;                                         // 0xD0(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              ControlRotation;                                   // 0x100(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ThirdPersonNormalizedDistance;                     // 0x10C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EThirdPersonAutoFollowMode        ThirdPersonAutoFollowMode;                         // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC4[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        DroneSpeedIndex;                                   // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplayPlaybackSpeed;                               // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNamePlatesEnabled;                                // 0x11C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerOutlinesEnabled;                            // 0x11D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bThirdPersonCamCollide;                            // 0x11E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFollowDroneDoTest;                                // 0x11F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBattleMapIsOnTimelineMode;                        // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC5[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FNamePlateFilter                      NamePlatesFilter;                                  // 0x128(0x58)(NativeAccessSpecifierPublic)
};

// 0x1D0 (0x1D0 - 0x0)
// ScriptStruct FortniteGame.SavedSpectatorCameraShot
struct FSavedSpectatorCameraShot
{
public:
	struct FSavedSpectatorCameraState            CameraState;                                       // 0x0(0x180)(NativeAccessSpecifierPublic)
	bool                                         bIsShotStart;                                      // 0x180(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC6[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Timestamp;                                         // 0x184(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotLength;                                        // 0x188(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Message;                                           // 0x190(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC8[0x18];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class ECameraShotNotificationTypes      NotificationType;                                  // 0x1B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BC9[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FNotificationUISettings               MessageUISettings;                                 // 0x1BC(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BCA[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SavedSpectatorCameras
struct FSavedSpectatorCameras
{
public:
	TArray<struct FSavedSpectatorCameraShot>     Shots;                                             // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.SavedPlayerSpectatorCameraData
struct FSavedPlayerSpectatorCameraData
{
public:
	TMap<struct FUniqueNetIdRepl, struct FSavedSpectatorCameraState> PlayerToCameraStateMap;                            // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyAnswerContainerChangeEventInfo
struct FFortPlayerSurveyAnswerContainerChangeEventInfo
{
public:
	enum class EFortPlayerSurveyAnswerContainerChangeReason Reason;                                            // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyAnswer
struct FFortPlayerSurveyAnswer
{
public:
	uint8                                        Pad_3BCB[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSelectableRewardOption
struct FFortSelectableRewardOption
{
public:
	TArray<struct FFortItemQuantityPair>         Rewards;                                           // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortHiddenRewardQuantityPair
struct FFortHiddenRewardQuantityPair
{
public:
	class FName                                  TemplateId;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortRewardInfo
struct FFortRewardInfo
{
public:
	TArray<struct FFortSelectableRewardOption>   SelectableRewards;                                 // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         StandardRewards;                                   // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortHiddenRewardQuantityPair> HiddenRewards;                                     // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookRewards
struct FFortCollectionBookRewards
{
public:
	enum class ECollectionBookRewardType         RewardType;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BCC[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  PageId;                                            // 0x4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SectionId;                                         // 0xC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpRequired;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsMajorReward;                                    // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BCD[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortRewardInfo                       Rewards;                                           // 0x38(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPendingSlottedItemOperation
struct FFortPendingSlottedItemOperation
{
public:
	class FString                                SlottedItemId;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SlotRowName;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortQuestObjectiveCompletion
struct FFortQuestObjectiveCompletion
{
public:
	class FString                                StatName;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimestampOffset;                                   // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BCE[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSubgameClientSettings
struct FFortSubgameClientSettings
{
public:
	TArray<class FString>                        PinnedQuestInstances;                              // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AccountIdAndScore
struct FAccountIdAndScore
{
public:
	class FString                                AccountId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalScore;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IndividualContribution;                            // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCriticalMatchBonus;                               // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BCF[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortQuestEarnedBadgeData
struct FFortQuestEarnedBadgeData
{
public:
	class FString                                TemplateId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD0[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortPlacedBuilding
struct FFortPlacedBuilding
{
public:
	class FString                                BuildingTag;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlacedTag;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortOutpostCoreInfo
struct FFortOutpostCoreInfo
{
public:
	TArray<struct FFortPlacedBuilding>           PlacedBuildings;                                   // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        AccountsWithEditPermission;                        // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint32                                       HighestEnduranceWaveReached;                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD1[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCloudSaveRecordInfo
struct FFortCloudSaveRecordInfo
{
public:
	int32                                        RecordIndex;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ArchiveNumber;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RecordFilename;                                    // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCloudSaveInfo
struct FFortCloudSaveInfo
{
public:
	int32                                        SaveCount;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortCloudSaveRecordInfo>      SavedRecords;                                      // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x180 (0x180 - 0x0)
// ScriptStruct FortniteGame.AccountIdAndMatchEndData
struct FAccountIdAndMatchEndData
{
public:
	class FString                                AccountId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestObjectiveCompletion> Advance;                                           // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestEarnedBadgeData>     EarnedBadgeData;                                   // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        EarnedItemCaches;                                  // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TotalScore;                                        // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCriticalMatchBonus;                               // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDidLeech;                                         // 0x45(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD3[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        NumMissionPoints;                                  // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TheaterNum;                                        // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpProfileChangeRequest              TheaterItemUpdate;                                 // 0x50(0x58)(NativeAccessSpecifierPublic)
	int32                                        OutpostNum;                                        // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD4[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FMcpProfileChangeRequest              OutpostItemUpdate;                                 // 0xB0(0x58)(NativeAccessSpecifierPublic)
	class FString                                OutpostId;                                         // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortOutpostCoreInfo                  OutpostInfo;                                       // 0x118(0x28)(NativeAccessSpecifierPublic)
	class FString                                DeployableBaseItemId;                              // 0x140(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortCloudSaveInfo                    CloudSaveInfo;                                     // 0x150(0x18)(NativeAccessSpecifierPublic)
	class FString                                LockCode;                                          // 0x168(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAbandoning;                                       // 0x178(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MissionLeechScaling;                               // 0x17C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.EndZoneScoreAndAwards
struct FEndZoneScoreAndAwards
{
public:
	bool                                         bResultsPendingSave;                               // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD6[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        TotalScore;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCriticalMatchBonus;                               // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDidLeech;                                         // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD7[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortQuestEarnedBadgeData>     EarnedBadgeData;                                   // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        EarnedItemCaches;                                  // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumMissionPoints;                                  // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissionLeechScaling;                               // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD8[0x38];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.McpVariantReader
struct FMcpVariantReader
{
public:
	class FString                                Channel;                                           // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Active;                                            // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Owned;                                             // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x130 (0x130 - 0x0)
// ScriptStruct FortniteGame.FortDialogDescription
struct FFortDialogDescription
{
public:
	struct FSlateBrush                           Icon;                                              // 0x0(0x88)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MessageHeader;                                     // 0x88(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MessageBody;                                       // 0xA0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  AcceptButtonText;                                  // 0xB8(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  IgnoreButtonText;                                  // 0xD0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  DismissButtonText;                                 // 0xE8(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        DisplayTime;                                       // 0x100(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BD9[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UUserWidget*                           AdditionalContent;                                 // 0x108(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDialogFeedbackType           FeedBackType;                                      // 0x110(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Dismissable;                                       // 0x111(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BDA[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortNotificationHandler*              NotificationHandler;                               // 0x118(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BDB[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x130 (0x130 - 0x0)
// ScriptStruct FortniteGame.VehicleSphericalPontoon
struct FVehicleSphericalPontoon
{
public:
	class FName                                  CenterSocket;                                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         SeatSocketIndex;                                   // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPontoonType                      Type;                                              // 0xD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BDC[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               LocalForce;                                        // 0x10(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CenterLocation;                                    // 0x1C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BDD[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FQuat                                 SocketRotation;                                    // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Offset;                                            // 0x40(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BDE[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        WaterHeight;                                       // 0x50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterDepth;                                        // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImmersionDepth;                                    // 0x58(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WaterPlaneLocation;                                // 0x5C(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WaterPlaneNormal;                                  // 0x68(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BDF[0xAC];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortWaterBodyActor*                   CurrentWaterBody;                                  // 0x120(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE0[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.EncounterEnvironmentQueryInfo
struct FEncounterEnvironmentQueryInfo
{
public:
	class UEnvQuery*                             EnvironmentQuery;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEnvNamedValue>                QueryParams;                                       // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE1[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         bIsDirectional;                                    // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE2[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FortEncounterSettings
struct FFortEncounterSettings
{
public:
	TArray<enum class EFortEncounterDirection>   ForbiddenSpawnDirections;                          // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRiftsDestroyPlayerBuiltBuildings;                 // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bValidateIfPlayerIsAtSpawnLocation;                // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMustFindSpawnPoints;                              // 0x12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopIfCantFindSpawnPoint;                         // 0x13(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCollisionWhenSpawningAI;                    // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrackCombatParticipation;                         // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayThreatVisuals;                             // 0x16(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE3[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        BurstSpawnThreatVisualsEndDelayOverride;           // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRiftsToUseOverride;                             // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseEQSQueryToFindAISpawnLocations : 1;            // Mask: 0x1, PropSize: 0x10x20(0x1)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRelevantForTotalAICap : 1;                        // Mask: 0x2, PropSize: 0x10x20(0x1)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableRecreateRift : 1;                           // Mask: 0x4, PropSize: 0x10x20(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRespawnRiftWhenRiftDead : 1;                      // Mask: 0x8, PropSize: 0x10x20(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRandomiseQueryRiftLocations : 1;                  // Mask: 0x10, PropSize: 0x10x20(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideEqsFallback : 1;                          // Mask: 0x20, PropSize: 0x10x20(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_286 : 2;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3BE4[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FEncounterEnvironmentQueryInfo        EqsFallbackOverride;                               // 0x28(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        PreSpawnRequeryTime;                               // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnAIIntervalTime;                               // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnRiftIntervalTime;                             // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnFirstRiftNoDelay;                            // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UEnvQuery*                             RiftSelectionQuery;                                // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnvQuery*                             RiftSlotsEQSQueryOverride;                         // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ScriptedSpawnPoints;                               // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>             RiftClassOverride;                                 // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        WorkingScriptedSpawnPoints;                        // 0x88(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        EncounterGroupID;                                  // 0x98(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneIndex;                                         // 0x9C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DifficultyIndex;                                   // 0xA0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AIDespawnDistanceOverride;                         // 0xA4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortDifficultyOptionCategoryEncounter*> InjectedOverrideCategories;                        // 0xA8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x0 (0x8 - 0x8)
// ScriptStruct FortniteGame.FortStatManagerTag
struct FFortStatManagerTag : public FGameplayTag
{
public:
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortHUDTagPromptData
struct FFortHUDTagPromptData
{
public:
	struct FGameplayTag                          VolumeTag;                                         // 0x0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Text_PromptTitle;                                  // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Text_PromptDescription;                            // 0x20(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bIsEnterData;                                      // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE6[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x330 (0x330 - 0x0)
// ScriptStruct FortniteGame.FortMultiSizeBrush
struct FFortMultiSizeBrush
{
public:
	struct FSlateBrush                           Brush_XXS;                                         // 0x0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_XS;                                          // 0x88(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_S;                                           // 0x110(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_M;                                           // 0x198(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_L;                                           // 0x220(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush_XL;                                          // 0x2A8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x34 (0x34 - 0x0)
// ScriptStruct FortniteGame.FortItemViewSettings
struct FFortItemViewSettings
{
public:
	bool                                         UsesPlacementActor;                                // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UsesFixedCamera;                                   // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SupportsZooming;                                   // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE7[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        DefaultZoomLevel;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                           ZoomRange;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortItemViewRotationMode         RotationMode;                                      // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE8[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FRotator                              CameraRotationOffset;                              // 0x1C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               MeshBoundsCenterOffset;                            // 0x28(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.ConfirmationDialogAction
struct FConfirmationDialogAction
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  ResultName;                                        // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Icon;                                              // 0x20(0x88)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  ActionName;                                        // 0xA8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x118 (0x118 - 0x0)
// ScriptStruct FortniteGame.FortDialogDescription_NUI
struct FFortDialogDescription_NUI
{
public:
	struct FSlateBrush                           Icon;                                              // 0x0(0x88)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MessageHeader;                                     // 0x88(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  MessageBody;                                       // 0xA0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FConfirmationDialogAction>     ConfirmButtonInputActions;                         // 0xB8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  DeclineButtonInputAction;                          // 0xC8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               AdditionalContent;                                 // 0xD0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               LeftAdditionalContent;                             // 0xD8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisplayTime;                                       // 0xE0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Dismissable;                                       // 0xE4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Cancelable;                                        // 0xE5(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldWaitForLatentActionOnConfirmAction;         // 0xE6(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BE9[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortNotificationHandler*              NotificationHandler;                               // 0xE8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ShowSound;                                         // 0xF0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BEA[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortDialogExternalLatentActionHandle
struct FFortDialogExternalLatentActionHandle
{
public:
	int32                                        Handle;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortGlobalActionDetails
struct FFortGlobalActionDetails
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HoldStatus;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BEB[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortGlobalActionDetailsFunctionContext
struct FFortGlobalActionDetailsFunctionContext
{
public:
	enum class ECommonInputType                  OverrideInputType;                                 // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortInputActionDetails
struct FFortInputActionDetails
{
public:
	enum class EFortInputActionType              InputActionType;                                   // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BEC[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FKey                                  ActionKey;                                         // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.GameSummaryInfo
struct FGameSummaryInfo
{
public:
	class FString                                GameSessionId;                                     // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Completed;                                         // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BED[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortItemHeaderInformation
struct FFortItemHeaderInformation
{
public:
	uint8                                        Pad_3BEE[0x98];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.SpecialActorSingleStatData
struct FSpecialActorSingleStatData
{
public:
	enum class ESpecialActorStatType             StatType;                                          // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BEF[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Value;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatLogicValue;                                    // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1FC (0x208 - 0xC)
// ScriptStruct FortniteGame.SpecialActorRepData
struct FSpecialActorRepData : public FFastArraySerializerItem
{
public:
	class FName                                  SpecialActorID;                                    // 0xC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CategoryTag;                                       // 0x14(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF0[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                SpecialActor;                                      // 0x20(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerState*                          PlayerState;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicationInterval;                               // 0x30(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicationIntervalDeviation;                      // 0x34(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextReplicationTime;                               // 0x38(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastActorNotRelevantTime;                          // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActorIsRelevant;                                  // 0x40(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasActorRelevantLastUpdate;                       // 0x41(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF1[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               CurrentLocation;                                   // 0x44(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentYaw;                                        // 0x50(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FSlateBrush                           MainIconBrush;                                     // 0x58(0x88)(NativeAccessSpecifierPublic)
	struct FVector2D                             MinimapScale;                                      // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           CompassIconBrush;                                  // 0xE8(0x88)(NativeAccessSpecifierPublic)
	struct FVector2D                             CompassScale;                                      // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawCompassIcon;                                  // 0x178(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        CurrentHealth;                                     // 0x17C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealth;                                         // 0x180(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentShield;                                     // 0x184(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxShield;                                         // 0x188(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF4[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  DisplayName;                                       // 0x190(0x18)(NativeAccessSpecifierPublic)
	float                                        RenderDistance;                                    // 0x1A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddedToClientTime;                                 // 0x1AC(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpecialActorSingleStatData>   TrackedStats;                                      // 0x1B0(0x10)(ZeroConstructor, RepSkip, NativeAccessSpecifierPublic)
	float                                        LastLocationReplicationTime;                       // 0x1C0(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevLocationReplicatedTime;                        // 0x1C4(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                LastRepLocation;                                   // 0x1C8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                PrevRepLocation;                                   // 0x1D4(0xC)(RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LerpStartLocation;                                 // 0x1E0(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastYawReplicationTime;                            // 0x1EC(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevYawReplicatedTime;                             // 0x1F0(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastRepYaw;                                        // 0x1F4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevRepYaw;                                        // 0x1F8(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LerpStartYaw;                                      // 0x1FC(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReplicateHealth;                                  // 0x200(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReplicateShield;                                  // 0x201(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BF5[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.Recipe
struct FRecipe : public FTableRowBase
{
public:
	TArray<struct FFortItemQuantityPair>         RecipeResults;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsConsumed;                                       // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF6[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortItemQuantityPair>         RecipeCosts;                                       // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredCatalysts;                                 // 0x30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        Score;                                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF7[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.HeroSpecializationAttributeRequirement
struct FHeroSpecializationAttributeRequirement
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumValue;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF8[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.FortSpecializationSlot
struct FFortSpecializationSlot
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        GrantedAbilityKit;                                 // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAbilityKit>        RemovedAbilityKit;                                 // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHeroSpecializationAttributeRequirement> AttributeRequirements;                             // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredTags;                                      // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        MinimumHeroLevel;                                  // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BF9[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.TransmogSacrifice
struct FTransmogSacrifice : public FTableRowBase
{
public:
	int32                                        TransmogSacrificePoints;                           // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BFA[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x0 (0x0 - 0x0)
// ScriptStruct FortniteGame.FortClientAnnouncementData
struct FFortClientAnnouncementData
{
public:
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct FortniteGame.FortClientAnnouncementData_Basic
struct FFortClientAnnouncementData_Basic : public FFortClientAnnouncementData
{
public:
	struct FSlateBrush                           Icon;                                              // 0x0(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  TitleText;                                         // 0x88(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  DetailText;                                        // 0xA0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  GamepadDetailText;                                 // 0xB8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        DisplayTime;                                       // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class USoundBase*                            OnStartSound;                                      // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x138 - 0xE8)
// ScriptStruct FortniteGame.FortClientAnnouncementData_Tutorial
struct FFortClientAnnouncementData_Tutorial : public FFortClientAnnouncementData_Basic
{
public:
	float                                        AutoContinueDelay;                                 // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BFD[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  NameText;                                          // 0xF0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  SystemText;                                        // 0x108(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bButtonEnabled;                                    // 0x120(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLightboxEnabled;                                  // 0x121(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLightboxDisableInputOnly;                         // 0x122(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BFE[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FMargin                               Padding;                                           // 0x124(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EVerticalAlignment                VAlign;                                            // 0x134(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHorizontalAlignment              HAlign;                                            // 0x135(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BFF[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookSlotData
struct FFortCollectionBookSlotData : public FTableRowBase
{
public:
	class FName                                  SlotXpWeightName;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SlotSourceId;                                      // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SlotSourceId2;                                     // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> AllowedItems;                                      // 0x20(0x10)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  AllowedWorkerPersonalities;                        // 0x30(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   PurchaseCosts;                                     // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.HomebaseSquadAttributeBonus
struct FHomebaseSquadAttributeBonus
{
public:
	struct FGameplayAttribute                    AttributeGranted;                                  // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  BonusCurve;                                        // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.HomebaseSquadSlot
struct FHomebaseSquadSlot
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<enum class EFortItemType>             ValidSlottableItemTypes;                           // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagFilter;                                         // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FHomebaseSquadAttributeBonus>  SlottingBonuses;                                   // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCurveTable*                           PersonalityMatchBonusTable;                        // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESquadSlotType                    SlotType;                                          // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C00[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x80 (0x88 - 0x8)
// ScriptStruct FortniteGame.HomebaseSquad
struct FHomebaseSquad : public FTableRowBase
{
public:
	class FText                                  DisplayName;                                       // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  ShortDisplayName;                                  // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class EFortHomebaseSquadType            SquadType;                                         // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C01[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTag                          ManagerSynergyTag;                                 // 0x3C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C02[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FHomebaseSquadSlot>            CrewSlots;                                         // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredTheaterTags;                               // 0x58(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        MaxNumDefendersAllowedInLevel;                     // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumDefendersAllowedInGroupLevel;                // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConsiderNumPlayersForMaxNumDefenders;             // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysRemoveOldestDefenderWhenReplacing;          // 0x81(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C03[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.FortClientObservedStat
struct FFortClientObservedStat : public FFastArraySerializerItem
{
public:
	class FName                                  StatName;                                          // 0xC(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C04[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x138 - 0x108)
// ScriptStruct FortniteGame.FortClientObservedStatArray
struct FFortClientObservedStatArray : public FFastArraySerializer
{
public:
	class UStatManager*                          MyStatManager;                                     // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortClientObservedStat>       ObservedStats;                                     // 0x110(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3C05[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.AIHotSpotSlotConfig
struct FAIHotSpotSlotConfig
{
public:
	struct FVector                               Offset;                                            // 0x0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Direction;                                         // 0xC(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortHotSpotSlot                  SlotType;                                          // 0x18(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C06[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AIHotSpotSlotInfo
struct FAIHotSpotSlotInfo
{
public:
	class AAIHotSpot*                            HotSpot;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SlotIndex;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C07[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DroppingAgentData
struct FDroppingAgentData
{
public:
	class AAthenaAIController*                   AIController;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        MovementBase;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C08[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x248 (0x248 - 0x0)
// ScriptStruct FortniteGame.BarrierFlagDisplayData
struct FBarrierFlagDisplayData
{
public:
	class UStaticMesh*                           HeadMesh;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMap_EnabledBrush;                              // 0x8(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMap_DisabledBrush;                             // 0x90(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Compass_EnabledBrush;                              // 0x118(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Compass_DisabledBrush;                             // 0x1A0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             MapSize;                                           // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CompassSize;                                       // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshScale;                                         // 0x238(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C09[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BarrierObjectiveDisplayData
struct FBarrierObjectiveDisplayData
{
public:
	class UStaticMesh*                           HeadMesh;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshScale;                                         // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MeshRelativeOffset;                                // 0x14(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            MaterialsToSwap;                                   // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AthenaBroadcastKillFeedEntryInfo
struct FAthenaBroadcastKillFeedEntryInfo
{
public:
	class FString                                InstigatorPlayerName;                              // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VictimPlayerName;                                  // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaBroadcastKillFeedEntryType EntryType;                                         // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C0A[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CharmSoundAssetEntry
struct FCharmSoundAssetEntry
{
public:
	TSoftObjectPtr<class USoundBase>             Sound;                                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Desc;                                              // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ApplyVariantsAdditionalParams
struct FApplyVariantsAdditionalParams
{
public:
	TArray<class UActorComponent*>               AdditionalVariantComponents;                       // 0x0(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bApplyToAdditionalVariantComponentsOnly;           // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C0B[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortCosmeticAdaptiveStatPair
struct FFortCosmeticAdaptiveStatPair
{
public:
	struct FFortStatManagerTag                   StatTag;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticAdaptiveStatPreview
struct FFortCosmeticAdaptiveStatPreview
{
public:
	class FText                                  UnlockCondition;                                   // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortCosmeticAdaptiveStatPair> StatValues;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticVariantPreviewElement
struct FFortCosmeticVariantPreviewElement
{
public:
	TArray<struct FMcpVariantChannelInfo>        VariantOptions;                                    // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaCosmeticItemDefinition*         Item;                                              // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticVariantPreview
struct FFortCosmeticVariantPreview
{
public:
	class FText                                  UnlockCondition;                                   // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        PreviewTime;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C0C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMcpVariantChannelInfo>        VariantOptions;                                    // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortCosmeticVariantPreviewElement> AdditionalItems;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.AthenaCosmeticMaterialOverride
struct FAthenaCosmeticMaterialOverride
{
public:
	class FName                                  ComponentName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialOverrideIndex;                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C0D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UMaterialInterface>     OverrideMaterial;                                  // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.VariantSwapMontageData
struct FVariantSwapMontageData
{
public:
	struct FGameplayTag                          VariantMetaTagRequired;                            // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MontageSectionName;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GooseWeaponTierData
struct FGooseWeaponTierData
{
public:
	TArray<class UFortWeaponItemDefinition*>     WeaponItemDefinitions;                             // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.GooseDisplayData
struct FGooseDisplayData
{
public:
	class FName                                  LootTableName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StaticMesh;                                        // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            MaterialsToSwap;                                   // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PlanePickupSpawnData
struct FPlanePickupSpawnData
{
public:
	TSubclassOf<class AAthenaGoosePickup>        PickupClass;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C0E[0x28];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.PlayerWithIndicatorState
struct FPlayerWithIndicatorState
{
public:
	TWeakObjectPtr<class AFortPlayerStateAthena> PlayerState;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayerIndicatorFlags             IndicatorState;                                    // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C0F[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BoxNavInvoker
struct FBoxNavInvoker
{
public:
	class AAthenaNavInvokerBox*                  Invoker;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C10[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PetStimuliResponse
struct FPetStimuliResponse
{
public:
	struct FGameplayTag                          ResponseTag;                                       // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResponseDuration;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResponseWeight;                                    // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct FortniteGame.AthenaQuickChatLeafEntry
struct FAthenaQuickChatLeafEntry
{
public:
	class FText                                  Label;                                             // 0x0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  FullChatMessage;                                   // 0x18(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           Brush;                                             // 0x30(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bPopulateBrushFromContextObject;                   // 0xB8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaQuickChatFilteringType     FilterType;                                        // 0xB9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C11[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UAthenaEmojiItemDefinition*            EmojiItemDefinition;                               // 0xC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETeamMemberState                  TeamCommType;                                      // 0xC8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C12[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTag                          OptionGameplayTag;                                 // 0xCC(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C13[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CloneMachineRepData
struct FCloneMachineRepData
{
public:
	class ABuildingGameplayActorCloneMachine*    CloneMachine;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C14[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortGiftBoxFortmatData
struct FFortGiftBoxFortmatData
{
public:
	class FString                                StringAssetType;                                   // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StringData;                                        // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ChallengeGiftBoxData
struct FChallengeGiftBoxData
{
public:
	TSoftObjectPtr<class UFortGiftBoxItemDefinition> GiftBoxToUse;                                      // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGiftBoxFortmatData>       GiftBoxFormatData;                                 // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.AthenaRewardItemReference
struct FAthenaRewardItemReference
{
public:
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TemplateId;                                        // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C15[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FChallengeGiftBoxData                 RewardGiftBox;                                     // 0x40(0x38)(Edit, NativeAccessSpecifierPublic)
	bool                                         IsChaseReward;                                     // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaRewardItemType             RewardType;                                        // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaRewardVisualImportanceType RewardVisualImportanceType;                        // 0x7A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C16[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.RewardNode
struct FRewardNode
{
public:
	int32                                        KeyCount;                                          // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinKeyCountToUnlock;                               // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysFromEventStartToUnlock;                        // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C17[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 ChildNodes;                                        // 0x10(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ParentNodes;                                       // 0x30(0x20)(Edit, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	struct FGameplayTag                          NodeTag;                                           // 0x50(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGrantedAtGraphDestruction;                        // 0x58(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequiredOwnership;                                // 0x59(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C18[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FAthenaRewardItemReference>    Rewards;                                           // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCosmeticVariantInfo>          HardDefinedVisuals;                                // 0x70(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AthenaSeasonRewardLevelInfo
struct FAthenaSeasonRewardLevelInfo
{
public:
	enum class EAthenaSeasonRewardTrack          Track;                                             // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C19[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Level;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpToNextLevel;                                     // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C1A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FAthenaRewardItemReference>    Rewards;                                           // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.AthenaSeasonBannerLevel
struct FAthenaSeasonBannerLevel
{
public:
	TSoftObjectPtr<class UTexture2D>             SurroundImage;                                     // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     BannerMaterial;                                    // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaSeasonBannerLevelSchedule
struct FAthenaSeasonBannerLevelSchedule
{
public:
	TArray<struct FAthenaSeasonBannerLevel>      Levels;                                            // 0x0(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaRewardScheduleLevel
struct FAthenaRewardScheduleLevel
{
public:
	TArray<struct FAthenaRewardItemReference>    Rewards;                                           // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaRewardSchedule
struct FAthenaRewardSchedule
{
public:
	TArray<struct FAthenaRewardScheduleLevel>    Levels;                                            // 0x0(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.AthenaExtendedXPCurveEntry
struct FAthenaExtendedXPCurveEntry : public FTableRowBase
{
public:
	int32                                        XpPerLevel;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UntilLevel;                                        // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.AthenaSeasonalXPCurveEntry
struct FAthenaSeasonalXPCurveEntry : public FTableRowBase
{
public:
	int32                                        Level;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpToNextLevel;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpTotal;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C1B[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.XpDisplayConversion
struct FXpDisplayConversion
{
public:
	TSoftObjectPtr<class UFortItemDefinition>    XpItemDef;                                         // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ValueToReplaceAt;                                  // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C1C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BattlePassRewardInfo
struct FBattlePassRewardInfo
{
public:
	class UFortItemDefinition*                   ItemDef;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFree;                                           // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C1D[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        QuantityRewarded;                                  // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBattlePassRewardSource           UnlockableSource;                                  // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C1E[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortItemDefinition*                   UnlockableSourceItemDef;                           // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FloatParticleParameter
struct FFloatParticleParameter
{
public:
	float                                        Value;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ParameterName;                                     // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.VectorParticleParameter
struct FVectorParticleParameter
{
public:
	struct FVector                               Value;                                             // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ParameterName;                                     // 0xC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TraversePointSpawnData
struct FTraversePointSpawnData
{
public:
	TSubclassOf<class AAthenaTraversePoint>      PointClass;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.XPDisplayData
struct FXPDisplayData
{
public:
	class FName                                  XPType;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TitleText;                                         // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  DisplayText;                                       // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    IconMaterial;                                      // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BacchusActionIconMapping
struct FBacchusActionIconMapping
{
public:
	class FName                                  Action;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPaperSprite*                          Sprite;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.BattleMapSharedData
struct FBattleMapSharedData
{
public:
	uint8                                        Pad_3C1F[0x28];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BuildingActorHotSpotDirection
struct FBuildingActorHotSpotDirection
{
public:
	class UAIHotSpotConfig*                      HotSpotConfig;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Offset;                                            // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorX : 1;                                      // Mask: 0x1, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorY : 1;                                      // Mask: 0x2, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_287 : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3C20[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EFortHotSpotDirection             Direction;                                         // 0x18(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHotspotTypeConfigMode            TypeConfigUsage;                                   // 0x19(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C21[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.RandomUpgradeCalendarData
struct FRandomUpgradeCalendarData
{
public:
	enum class ECalendarDrivenState              ReactionWhenEventIsPresent;                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C22[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                EventName;                                         // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.RandomUpgradeData
struct FRandomUpgradeData
{
public:
	class FName                                  LootTierGroupIfApplied;                            // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ChanceToApplyPerContainer;                         // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Enabled;                                           // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FRandomUpgradeCalendarData>    CalendarDrivenEnableState;                         // 0x48(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMarkedActorDisplayInfo>       MarkerDisplayInfoOverride;                         // 0x58(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSearchBounceData
struct FFortSearchBounceData
{
public:
	struct FVector                               BounceNormal;                                      // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       SearchAnimationCount;                              // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.ConnectivityCube
struct FConnectivityCube
{
public:
	uint8                                        Pad_3C23[0xC0];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AuxiliaryEditTileMeshData
struct FAuxiliaryEditTileMeshData
{
public:
	class UStaticMesh*                           TileMesh;                                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            TileTexture;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRot;                                       // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C24[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.EditModeState
struct FEditModeState
{
public:
	TSubclassOf<class ABuildingSMActor>          EditClass;                                         // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RotationIterations;                                // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMirrored;                                         // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCurrentlyValid;                                   // 0xD(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C25[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.TileCompInterpData
struct FTileCompInterpData
{
public:
	struct FVector                               InitialTranslation;                                // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DesiredTranslation;                                // 0xC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FillFloorPositionData
struct FFillFloorPositionData
{
public:
	struct FScalableFloat                        MoveTime;                                          // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Height;                                            // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PostMoveDelay;                                     // 0x40(0x20)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C26[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.BuildingFoundationLODActorData
struct FBuildingFoundationLODActorData
{
public:
	uint8                                        Pad_3C27[0x18];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class UMaterialInstanceDynamic*              VisibilityMaterial;                                // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2DDynamic*                     VisibilityTexture;                                 // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.DynamicBuildingFoundationRepData
struct FDynamicBuildingFoundationRepData
{
public:
	struct FVector                               Translation;                                       // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C28[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FQuat                                 Rotation;                                          // 0x10(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EDynamicFoundationEnabledState    EnabledState;                                      // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C29[0xF];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.BuildingFoundationStreamingData
struct FBuildingFoundationStreamingData
{
public:
	class FName                                  FoundationName;                                    // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FoundationLocation;                                // 0x8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                  BoundingBox;                                       // 0x14(0x1C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FIntPoint                             GridCoordinates;                                   // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TLazyObjectPtr<class AFortHLODSMActor>> ProxyInfo;                                         // 0x58(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<int32>                                ChildStreamingDataIndices;                         // 0x68(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        PersistentHLODLevelIndex;                          // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C2A[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RebootCardReplicatedState
struct FRebootCardReplicatedState
{
public:
	float                                        ChipExpirationServerStartTime;                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C2B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MapSelectionData
struct FMapSelectionData
{
public:
	uint8                                        Pad_3C2C[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortMapData
struct FFortMapData
{
public:
	TSoftObjectPtr<class UWorld>                 BuildingWorld;                                     // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 BuildingLevelTags;                                 // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        SelectionWeight;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C2D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.ItemCollectorOverrideItemRow
struct FItemCollectorOverrideItemRow : public FTableRowBase
{
public:
	struct FPrimaryAssetId                       ItemPrimaryAssetId;                                // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C2E[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.ItemCollectorRow
struct FItemCollectorRow : public FTableRowBase
{
public:
	class UDataTable*                            OverrideItemsTable;                                // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       OverrideRarity;                                    // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C2F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        OverrideGoal;                                      // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bOverrideLootRules;                                // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bUseOverrideRarity;                                // 0x1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.CollectorTrackedData
struct FCollectorTrackedData
{
public:
	uint8                                        Team;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C30[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerState*                      Player;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C31[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CollectedItemValue
struct FCollectedItemValue
{
public:
	class UFortWorldItemDefinition*              CollectedItem;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DepositAmount;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DepositGoal;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CaptureCount;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C32[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.GameplayEffectApplicationInfo
struct FGameplayEffectApplicationInfo
{
public:
	TSoftClassPtr<class UGameplayEffect>         GameplayEffect;                                    // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Level;                                             // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C33[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectDeliveryInfo
struct FFortGameplayEffectDeliveryInfo
{
public:
	struct FFortDeliveryInfoRequirementsFilter   DeliveryRequirements;                              // 0x0(0x98)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfo> GameplayEffects;                                   // 0x98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x108 (0x108 - 0x0)
// ScriptStruct FortniteGame.CollectorUnitInfo
struct FCollectorUnitInfo
{
public:
	class UFortWorldItemDefinition*              InputItem;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InputCount;                                        // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture*                              OverrideInputItemTexture;                          // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseDefinedOutputItem : 1;                         // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_288 : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3C34[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortWorldItemDefinition*              OutputItem;                                        // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortItemEntry>                OutputItemEntry;                                   // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class FName                                  OverrideOutputItemLootTierGroupName;               // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGameplayEffectDeliveryInfo       OutputGameplayEffect;                              // 0x58(0xA8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture*                              OverrideOutputItemTexture;                         // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.WeaponUpgradeItemRow
struct FWeaponUpgradeItemRow : public FTableRowBase
{
public:
	class UFortWeaponRangedItemDefinition*       CurrentWeaponDef;                                  // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponRangedItemDefinition*       UpgradedWeaponDef;                                 // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortWeaponUpgradeCosts           WoodCost;                                          // 0x18(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortWeaponUpgradeCosts           MetalCost;                                         // 0x19(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortWeaponUpgradeCosts           BrickCost;                                         // 0x1A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortWeaponUpgradeDirection       Direction;                                         // 0x1B(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C35[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CaptureAreaTeamInfo
struct FCaptureAreaTeamInfo
{
public:
	TArray<class AFortPlayerController*>         Players;                                           // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        InsideTeamIndex;                                   // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C36[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.CaptureHandle
struct FCaptureHandle
{
public:
	uint8                                        Pad_3C37[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.SpawnGroupVisuals
struct FSpawnGroupVisuals
{
public:
	TSoftClassPtr<class UFortDifficultyOptionEncounter_SpawnGroupProgression> SpawnGroup;                                        // 0x0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortAIPawn>             AIPawn;                                            // 0x28(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPhysicsAsset>          PhysicsAsset;                                      // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.MusicTrackData
struct FMusicTrackData : public FTableRowBase
{
public:
	bool                                         Enabled;                                           // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C38[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class USoundBase>             MusicTrackPath;                                    // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TrackName;                                         // 0x38(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.MusicPlayerData
struct FMusicPlayerData
{
public:
	int32                                        SongIndex;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerTimeSongStarted;                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortRiftReservationHandle
struct FFortRiftReservationHandle
{
public:
	int32                                        RiftReservationID;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortRiftReservation
struct FFortRiftReservation
{
public:
	uint8                                        bDesiredVisible : 1;                               // Mask: 0x1, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDesiredActive : 1;                                // Mask: 0x2, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_289 : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3C39[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortRiftReservationHandle            ReservationHandle;                                 // 0x4(0x4)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSpawnSlotData
struct FFortSpawnSlotData
{
public:
	struct FVector                               SpawnSlotLocation;                                 // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C3A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortAIPawn*                           OccupyingAI;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRiftSlotStatus               SlotStatus;                                        // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C3B[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ProxyGameplayCueDamagePhysical
struct FProxyGameplayCueDamagePhysical
{
public:
	float                                        ProxyGameplayCueDamagePhysicalMagnitude;           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C3C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayEffectContextHandle          EffectContext;                                     // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.QuantizedBuildingAttribute
struct FQuantizedBuildingAttribute
{
public:
	float                                        Value;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BuildingActorMinimalReplicationProxy
struct FBuildingActorMinimalReplicationProxy
{
public:
	uint8                                        Pad_3C3D[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FQuantizedBuildingAttribute           BuildTime;                                         // 0x8(0x4)(NoDestructor, NativeAccessSpecifierPublic)
	struct FQuantizedBuildingAttribute           RepairTime;                                        // 0xC(0x4)(NoDestructor, NativeAccessSpecifierPublic)
	int16                                        Health;                                            // 0x10(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                        MaxHealth;                                         // 0x12(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C3E[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.BuildingDuplicationData
struct FBuildingDuplicationData
{
public:
	class UClass*                                ClassData;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuildingTextureData*                  TextureData[0x4];                                  // 0x8(0x20)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.EditorOnlyBuildingInstanceMaterialParameters
struct FEditorOnlyBuildingInstanceMaterialParameters
{
public:
	TArray<struct FScalarParameterValue>         ScalarParams;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVectorParameterValue>         VectorParams;                                      // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTextureParameterValue>        TextureParams;                                     // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.RandomDayphaseFX
struct FRandomDayphaseFX
{
public:
	class UParticleSystem*                       ParticleSystem;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystem*>               AltParticleSystems;                                // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortDayPhase>             RequiredDayphases;                                 // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ChanceToSpawnFX;                                   // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDetailMode                       DetailMode;                                        // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C3F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MaxDrawDistance;                                   // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRandomSelectionAlreadyHappened;                   // 0x34(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C40[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UParticleSystemComponent*              SpawnedComponent;                                  // 0x38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BuildingNavObstacle
struct FBuildingNavObstacle
{
public:
	struct FBox                                  LocalBounds;                                       // 0x0(0x1C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EBuildingNavObstacleType          ObstacleType;                                      // 0x1C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C41[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.ChosenQuotaInfo
struct FChosenQuotaInfo
{
public:
	int32                                        LootTier;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LootTierKey;                                       // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AnimatingMaterialPair
struct FAnimatingMaterialPair
{
public:
	class UMaterialInterface*                    Original;                                          // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    Override;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TaggedParticleSubstitution
struct FTaggedParticleSubstitution
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       Substitute;                                        // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.AddOrRemoveGameplayTags
struct FAddOrRemoveGameplayTags
{
public:
	struct FGameplayTagContainer                 Added;                                             // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 Removed;                                           // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TaggedSoundSubstitution
struct FTaggedSoundSubstitution
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            Substitute;                                        // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TaggedStaticMeshSubstitution
struct FTaggedStaticMeshSubstitution
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           Substitute;                                        // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.LightProperty_Color
struct FLightProperty_Color
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C42[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FLinearColor                          Color;                                             // 0x4(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsingSRGB;                                        // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C43[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TaggedInLightProperties
struct FTaggedInLightProperties
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLightProperty_Color                  ColorSubstitute;                                   // 0x8(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.MeshSet
struct FMeshSet
{
public:
	float                                        Weight;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortResourceType                 ResourceType;                                      // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDoNotBlockBuildings : 1;                          // Mask: 0x1, PropSize: 0x10x5(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDestroyOnPlayerBuildingPlacement : 1;             // Mask: 0x2, PropSize: 0x10x5(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNeedsDamageOverlay : 1;                           // Mask: 0x4, PropSize: 0x10x5(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_28A : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3C44[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UStaticMesh*                           BaseMesh;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BreakEffect;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DeathParticles;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DeathParticleSocketName;                           // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DeathSound;                                        // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ConstructedEffect;                                 // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTaggedParticleSubstitution>   SwapInParticles;                                   // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTaggedSoundSubstitution>      SwapInSounds;                                      // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTaggedStaticMeshSubstitution> SwapInMeshes;                                      // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTaggedInLightProperties>      SwapInLightProperties;                             // 0x68(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FAddOrRemoveGameplayTags              BuildingOwnedTagDelta;                             // 0x78(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UStaticMesh*                           SearchedMesh;                                      // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  SearchSpeed;                                       // 0xC0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LootNoiseRange;                                    // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LootSpawnLocation;                                 // 0xD4(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.TierMeshSets
struct FTierMeshSets
{
public:
	int32                                        Tier;                                              // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C45[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMeshSet>                      MeshSets;                                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.LogicalBuilding
struct FLogicalBuilding
{
public:
	uint8                                        Pad_3C46[0xA8];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.BuildingNavigationCellInfo
struct FBuildingNavigationCellInfo
{
public:
	uint8                                        Pad_3C47[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.BuildingSupportCellIndex
struct FBuildingSupportCellIndex
{
public:
	int32                                        X;                                                 // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Y;                                                 // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Z;                                                 // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.NeighboringWallInfo
struct FNeighboringWallInfo
{
public:
	TWeakObjectPtr<class ABuildingSMActor>       NeighboringActor;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBuildingSupportCellIndex             NeighboringCellIdx;                                // 0x8(0xC)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStructuralWallPosition           WallPosition;                                      // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C48[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.NeighboringCenterCellInfo
struct FNeighboringCenterCellInfo
{
public:
	TWeakObjectPtr<class ABuildingSMActor>       NeighboringActor;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBuildingSupportCellIndex             NeighboringCellIdx;                                // 0x8(0xC)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.NeighboringFloorInfo
struct FNeighboringFloorInfo
{
public:
	TWeakObjectPtr<class ABuildingSMActor>       NeighboringActor;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBuildingSupportCellIndex             NeighboringCellIdx;                                // 0x8(0xC)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStructuralFloorPosition          FloorPosition;                                     // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C49[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BuildingNeighboringActorInfo
struct FBuildingNeighboringActorInfo
{
public:
	TArray<struct FNeighboringWallInfo>          NeighboringWallInfos;                              // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNeighboringFloorInfo>         NeighboringFloorInfos;                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNeighboringCenterCellInfo>    NeighboringCenterCellInfos;                        // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.BuildingGridActorFilter
struct FBuildingGridActorFilter
{
public:
	bool                                         bIncludeWalls;                                     // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeFloors;                                    // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeFloorInTop;                                // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeCenterCell;                                // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.BuildingValueRules
struct FBuildingValueRules
{
public:
	int32                                        CellsAbove;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CellsBelow;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CellHorizontalRadius;                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromObjectiveWeight;                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackWeight;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StructuralWeight;                                  // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrapWeight;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayBlueprintDefaultVariables
struct FTimeOfDayBlueprintDefaultVariables
{
public:
	class UStaticMesh*                           AlternateShadowStaticMesh;                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricLightScatteringIntensity;                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTODLightsAndMaterialEmissiveValues;        // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableStaticMeshShadowCastingWhenLightsAreActive; // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAnAlternateShadowMeshWhenTheLightIsOff;        // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCastVolumetricShadows;                            // 0xF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PointConfiguration
struct FPointConfiguration
{
public:
	TArray<struct FVector>                       PointLocations;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.WaypointIndex
struct FWaypointIndex
{
public:
	int32                                        WaypointGroup;                                     // 0x0(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WaypointIndex;                                     // 0x4(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MOBATurretPrioritySetting
struct FMOBATurretPrioritySetting
{
public:
	int32                                        AIPriority;                                        // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerPriority;                                    // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuildingPriority;                                  // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortBounceData
struct FFortBounceData
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceValue;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DeformationVector;                                 // 0xC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DeformationCenter;                                 // 0x1C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBounceType                   BounceType;                                        // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocalInstigator;                                  // 0x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C4A[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.BulletWhipTrackerData
struct FBulletWhipTrackerData
{
public:
	bool                                         bAttachSoundToOwner;                               // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C4B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        PassByRadiusMax;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassByRadiusMin;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C4C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class USoundBase*                            PassByFarSound;                                    // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            PassByCloseSound;                                  // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumTriggerDistance;                            // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerAheadDistance;                              // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       CurrentAudioComp;                                  // 0x28(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreviousPlaneDotProd;                              // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedPassDistance;                                // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassByClosenessIntensity;                          // 0x38(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActive;                                           // 0x3C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C4D[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ClimbLinkData
struct FClimbLinkData
{
public:
	uint8                                        Pad_3C4E[0x20];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	uint32                                       UniqueLinkId;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C4F[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.CombatThresholdData
struct FCombatThresholdData
{
public:
	struct FScalableFloat                        HeatLevel;                                         // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitHeatLevel;                                     // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	class FString                                ThresholdName;                                     // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DebugGraphColor;                                   // 0x50(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.CombatEventMultiplier
struct FCombatEventMultiplier
{
public:
	enum class EFortCombatEvents                 CombatEvent;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C50[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MaxContribution;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CombatFactorData
struct FCombatFactorData
{
public:
	TArray<struct FCombatEventMultiplier>        ContributingCombatEvents;                          // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MaxValue;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C51[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                DebugFactorName;                                   // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DebugGraphColor;                                   // 0x28(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CombatEventData
struct FCombatEventData
{
public:
	float                                        Heat;                                              // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHeatContribution;                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolDownRate;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C52[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                EventName;                                         // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DebugGraphColor;                                   // 0x20(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCombatEventContribution      ContributionType;                                  // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C53[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.CreativeMiniMapComponentIconData
struct FCreativeMiniMapComponentIconData
{
public:
	int32                                        IconIndex;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreativeMinimapComponentIconColorType IconColor;                                         // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C54[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortMiniMapIndicatorTextData
struct FFortMiniMapIndicatorTextData
{
public:
	class FText                                  DisplayText;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        DisplayTextFont;                                   // 0x18(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DisplayTextColor;                                  // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             DisplayTextOffset;                                 // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CreativeQuestData
struct FCreativeQuestData
{
public:
	class APlayerState*                          PlayerState;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Progress;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActive;                                           // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C55[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.CreativeItemInfo
struct FCreativeItemInfo
{
public:
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 Guid;                                              // 0x8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DesiredSlot;                                       // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C56[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.CreativeThumbnailCacheData
struct FCreativeThumbnailCacheData
{
public:
	uint8                                        Pad_3C57[0x78];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CustomPartMaterialOverrideData
struct FCustomPartMaterialOverrideData
{
public:
	int32                                        MaterialOverrideIndex;                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C58[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UMaterialInterface>     OverrideMaterial;                                  // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.CustomPartVectorParameter
struct FCustomPartVectorParameter
{
public:
	int32                                        MaterialIndexForVectorParameter;                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VectorParameterNameForMaterial;                    // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VectorOverride;                                    // 0xC(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CustomPartScalarParameter
struct FCustomPartScalarParameter
{
public:
	int32                                        MaterialIndexForScalarParameter;                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ScalarParameterNameForMaterial;                    // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScalarOverride;                                    // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CustomPartTextureParameter
struct FCustomPartTextureParameter
{
public:
	int32                                        MaterialIndexForTextureParameter;                  // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextureParameterNameForMaterial;                   // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C59[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UTexture>               TextureOverride;                                   // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.GameplayTagAnimationData
struct FGameplayTagAnimationData
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x0(0x20)(Edit, NativeAccessSpecifierPrivate)
	enum class EFortCustomGender                 ValidGenders;                                      // 0x20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C5A[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UAnimMontage>           AnimMontage;                                       // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GameplayTagAnimations
struct FGameplayTagAnimations
{
public:
	TArray<struct FGameplayTagAnimationData>     GameplayTagAnimData;                               // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BlackWidowLegSinAnimationScalar
struct FBlackWidowLegSinAnimationScalar
{
public:
	bool                                         bUseConstantValue;                                 // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C5B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ConstantValue;                                     // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeOffset;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FrequencyOffset;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SinOffset;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResultMultiplier;                                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MappedRangeOutput;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.BlackWidowLegSinAnimationRotator
struct FBlackWidowLegSinAnimationRotator
{
public:
	struct FBlackWidowLegSinAnimationScalar      RollAnimation;                                     // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationScalar      PitchAnimation;                                    // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FBlackWidowLegSinAnimationScalar      YawAnimation;                                      // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ColorSwatchPair
struct FColorSwatchPair
{
public:
	class FName                                  ColorName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ColorValue;                                        // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.DeferredActorData
struct FDeferredActorData
{
public:
	class ABuildingActor*                        BuildingActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActorRecordIndex;                                  // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C5C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            BuildingTransform;                                 // 0x10(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.EarnedBadgePlayerData
struct FEarnedBadgePlayerData
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x28)(BlueprintVisible, BlueprintReadOnly, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C5D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x24 (0x30 - 0xC)
// ScriptStruct FortniteGame.EarnedBadgeEntry
struct FEarnedBadgeEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3C5E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortBadgeItemDefinition*              Badge;                                             // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEarnedBadgePlayerData>        PlayerData;                                        // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	enum class EFortRewardType                   RewardType;                                        // 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C5F[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.EarnedBadgeEntryArray
struct FEarnedBadgeEntryArray : public FFastArraySerializer
{
public:
	TArray<struct FEarnedBadgeEntry>             Items;                                             // 0x108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.ViewOffsetData
struct FViewOffsetData
{
public:
	struct FVector                               OffsetHigh;                                        // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OffsetMid;                                         // 0xC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OffsetLow;                                         // 0x18(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PenetrationAvoidanceFeeler
struct FPenetrationAvoidanceFeeler
{
public:
	struct FRotator                              AdjustmentRot;                                     // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        WorldWeight;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnWeight;                                        // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Extent;                                            // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TraceInterval;                                     // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FramesUntilNextTrace;                              // 0x1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AbilityToolSpawnParameters
struct FAbilityToolSpawnParameters
{
public:
	TSubclassOf<class ABuildingActor>            SpawnClass;                                        // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x8(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0x14(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      AttachedToActor;                                   // 0x20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AbilityKitItem
struct FAbilityKitItem
{
public:
	class UFortItemDefinition*                   Item;                                              // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortReplenishmentType            Replenishment;                                     // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C60[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DebugNativeActionInfo
struct FDebugNativeActionInfo
{
public:
	uint8                                        Pad_3C61[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim_Base
struct FGameplayAbilityRepSharedAnim_Base
{
public:
	enum class EFortSharedAnimationState         AnimState;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MontageSectionToPlay;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x6 (0x8 - 0x2)
// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim_Index
struct FGameplayAbilityRepSharedAnim_Index : public FGameplayAbilityRepSharedAnim_Base
{
public:
	uint8                                        Pad_3C62[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MontageIndex;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE (0x10 - 0x2)
// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim
struct FGameplayAbilityRepSharedAnim : public FGameplayAbilityRepSharedAnim_Base
{
public:
	uint8                                        Pad_3C63[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UAnimMontage*                          AnimMontage;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ReplicatedMontagePair
struct FReplicatedMontagePair
{
public:
	class UAnimMontage*                          Montage1;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Montage2;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Section1;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Section2;                                          // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         RepIndex;                                          // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C64[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AttributeInfo
struct FAttributeInfo
{
public:
	uint8                                        Pad_3C65[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.TokenAttributePair
struct FTokenAttributePair
{
public:
	struct FGameplayTag                          Token;                                             // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                    Attribute;                                         // 0x8(0x20)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectModifierDescription
struct FFortGameplayEffectModifierDescription
{
public:
	struct FGameplayAttribute                    ModAttribute;                                      // 0x0(0x20)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ModDescription;                                    // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsBuff;                                           // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAttributeDisplay             MagnitudeFormat;                                   // 0x39(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortStatDisplayType              DisplayType;                                       // 0x3A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C66[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Magnitude;                                         // 0x3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectDescription
struct FFortGameplayEffectDescription
{
public:
	class FText                                  EffectDisplayName;                                 // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  EffectWrittenDescription;                          // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayEffectModifierDescription> ModDescriptions;                                   // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                          GrantedTagDescriptions;                            // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAbilityTagRelationship
struct FFortAbilityTagRelationship
{
public:
	struct FGameplayTag                          AbilityTag;                                        // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AbilityTagsToBlock;                                // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AbilityTagsToCancel;                               // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortTargetFilter
struct FFortTargetFilter
{
public:
	enum class EFortTargetSelectionFilter        ActorTypeFilter;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C67[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UClass*                                ActorClassFilter;                                  // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeInstigator : 1;                            // Mask: 0x1, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseTrapsOwningPawnAsInstigator : 1;               // Mask: 0x2, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeRequester : 1;                             // Mask: 0x4, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAllAttachedToInstigator : 1;               // Mask: 0x8, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAthenaVehicleOfInstigator : 1;             // Mask: 0x10, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAllAttachedToRequester : 1;                // Mask: 0x20, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludePawnFriends : 1;                           // Mask: 0x40, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeFriendlyAI : 1;                            // Mask: 0x80, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAllAI : 1;                                 // Mask: 0x1, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludePawnEnemies : 1;                           // Mask: 0x2, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonPawnFriends : 1;                        // Mask: 0x4, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonPawnEnemies : 1;                        // Mask: 0x8, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderFriendlyFireWhenExcludingFriends : 1;     // Mask: 0x10, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeDBNOPawns : 1;                             // Mask: 0x20, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeWaterVolumes : 1;                          // Mask: 0x40, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeWaterBodies : 1;                           // Mask: 0x80, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAthenaVehicleOccupiedBySource : 1;         // Mask: 0x1, PropSize: 0x10x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAthenaVehicleUnoccupied : 1;               // Mask: 0x2, PropSize: 0x10x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAthenaVehicleOccupied : 1;                 // Mask: 0x4, PropSize: 0x10x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeAthenaVehicleFromObstructionChecks : 1;    // Mask: 0x8, PropSize: 0x10x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeWithoutNavigationCorridor : 1;             // Mask: 0x10, PropSize: 0x10x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonPlayerBuiltPieces : 1;                  // Mask: 0x20, PropSize: 0x10x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludePlayerBuiltPieces : 1;                     // Mask: 0x40, PropSize: 0x10x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonBGABuildings : 1;                       // Mask: 0x80, PropSize: 0x10x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeNonBlockingHits : 1;                       // Mask: 0x1, PropSize: 0x10x13(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bExcludeProjectiles : 1;                           // Mask: 0x2, PropSize: 0x10x13(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTraceComplexCollision : 1;                        // Mask: 0x4, PropSize: 0x10x13(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_28B : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3C68[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 ExclusionGameplayTags;                             // 0x18(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct FortniteGame.FortAbilityTargetSelection
struct FFortAbilityTargetSelection
{
public:
	enum class EFortTargetSelectionShape         Shape;                                             // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C69[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                CustomShapeComponentName;                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTargetSelectionTestType      TestType;                                          // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAbilityTargetingSource       PrimarySource;                                     // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAbilityTargetingSource       SecondarySource;                                   // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C6A[0x5];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FScalableFloat                        Range;                                             // 0x20(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                               HalfExtents;                                       // 0x40(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlignShapeEdgeToSourceLocation;                   // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C6B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FScalableFloat                        ConeYawAngle;                                      // 0x50(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ConePitchAngle;                                    // 0x70(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ConeMinRadius;                                     // 0x90(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFortTargetFilter                     TargetFilter;                                      // 0xB0(0x38)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bExcludeObstructedByWorld;                         // 0xE8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldAttachedActorsObstructTarget;               // 0xE9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateHitResultWhenNoTargetsFound;                // 0xEA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseProjectileRotationForDamageZones;              // 0xEB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAbilityTargetSelectionUsage  TargetSelectionUsage;                              // 0xEC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C6C[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MaxTargets;                                        // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C6D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAbilityTargetSelectionList
struct FFortAbilityTargetSelectionList
{
public:
	TArray<struct FFortAbilityTargetSelection>   List;                                              // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        bStopAtFirstSuccess : 1;                           // Mask: 0x1, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bKeepCheckingListOnIndestructibleHit : 1;          // Mask: 0x2, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_28C : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3C6E[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 AbilityTargetBlockedGameplayTags;                  // 0x18(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        bUseWeaponRanges : 1;                              // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseMaxYawAngleToTarget : 1;                       // Mask: 0x2, PropSize: 0x10x38(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_28D : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3C6F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MaxYawAngleToTarget;                               // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C70[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VisibilityTestPoint
struct FVisibilityTestPoint
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C71[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UPrimitiveComponent*                   Component;                                         // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAbilityCanHitParameters
struct FFortAbilityCanHitParameters
{
public:
	uint8                                        Pad_3C72[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AbilityTrackedActorSettings
struct FAbilityTrackedActorSettings
{
public:
	struct FScalableFloat                        MaximumTrackedActors;                              // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.AbilityTrackedActorEntry
struct FAbilityTrackedActorEntry
{
public:
	uint8                                        Pad_3C73[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0xA0 - 0x98)
// ScriptStruct FortniteGame.FortGameplayAbilityTargetData_SingleTargetHit
struct FFortGameplayAbilityTargetData_SingleTargetHit : public FGameplayAbilityTargetData_SingleTargetHit
{
public:
	int32                                        CartridgeID;                                       // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WeaponInfo;                                        // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0xB8 - 0xA8)
// ScriptStruct FortniteGame.ProximityBasedGEDeliveryInfo
struct FProximityBasedGEDeliveryInfo : public FProximityBasedGEDeliveryInfoBase
{
public:
	TArray<struct FGameplayEffectApplicationInfo> EffectsToApply;                                    // 0xA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortConditionalIncludeTags
struct FFortConditionalIncludeTags
{
public:
	struct FGameplayTagContainer                 ConditionTags;                                     // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 IncludeTags;                                       // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x68 (0xD8 - 0x70)
// ScriptStruct FortniteGame.FortGameplayEffectContext
struct FFortGameplayEffectContext : public FGameplayEffectContext
{
public:
	bool                                         bIsFatalHit;                                       // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCriticalHit;                                    // 0x71(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDiceCritical;                                   // 0x72(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFullBodyHit;                                    // 0x73(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackMagnitude;                                // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackZAngle;                                   // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunTime;                                          // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeMagnitude;                                   // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectDirectionX;                                  // 0x84(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectDirectionY;                                  // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C74[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 TooltipTags;                                       // 0x90(0x20)(NativeAccessSpecifierPublic)
	int32                                        CartridgeID;                                       // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 ItemGuid;                                          // 0xB4(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UObject>                DamageSourceObject;                                // 0xC4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SourceLevel;                                       // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnmodifiedDamage;                                  // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3C75[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.GoalSelectionQueryInfo
struct FGoalSelectionQueryInfo
{
public:
	class UEnvQuery*                             GoalSelectionQuery;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortBuddyTagListener
struct FFortBuddyTagListener
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C76[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterQueryData
struct FFortAIEncounterQueryData
{
public:
	TArray<struct FVector>                       QueryLocations;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        QueryActors;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AIPawnUpdateInfo
struct FAIPawnUpdateInfo
{
public:
	class AFortAIPawn*                           AIPawn;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C77[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterRequirements
struct FFortAIEncounterRequirements
{
public:
	enum class EFortMissionType                  AssociatedMissionType;                             // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C78[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagQuery                     TagQuery;                                          // 0x8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAILootDropModifiers
struct FFortAILootDropModifiers
{
public:
	struct FFortAIEncounterRequirements          Requirements;                                      // 0x0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           LootDropModifierRows;                              // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct FortniteGame.FortAILootDropModifierRow
struct FFortAILootDropModifierRow : public FTableRowBase
{
public:
	int32                                        Priority;                                          // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemDropChanceMultiplier;                          // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemLootTierGroup;                            // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AITagsContainer;                                   // 0x18(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct FortniteGame.FortAIBaseLootDropRow
struct FFortAIBaseLootDropRow : public FTableRowBase
{
public:
	int32                                        Priority;                                          // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemDropChance;                                    // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemLootTierGroup;                            // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemInstancedLootTierGroup;                   // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AccountItemLootTierGroup;                          // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AITagsContainer;                                   // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortEncounterGroupLimitData
struct FFortEncounterGroupLimitData
{
public:
	int32                                        DesiredPawnNumCap;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemainingDesiredLimit;                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentEncounterLimit;                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPendingStoppedEncounterData
struct FFortPendingStoppedEncounterData
{
public:
	class UFortAIEncounterInfo*                  Encounter;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortObjectiveStatus              ObjectiveStatus;                                   // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDestroyAI;                                   // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEncounterCompletedSuccessfully;                   // 0xA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C79[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterPawnDifficultyLevelModifier
struct FFortAIEncounterPawnDifficultyLevelModifier
{
public:
	struct FGameplayTagQuery                     EncounterTagRequirementsQuery;                     // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  DifficultyLevelModifierCurve;                      // 0x48(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAISpawnGroupUpgradeData
struct FFortAISpawnGroupUpgradeData
{
public:
	TSubclassOf<class UFortAISpawnGroupUpgrade>  SpawnGroupUpgrade;                                 // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAISpawnGroupUpgradeProbabilities> UpgradeProbabilities;                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAISpawnGroupCapsCategorySet> SpawnGroupCapsCategories;                          // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     EncounterTagRequirementsQuery;                     // 0x18(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAIPawnUpgradeProbability
struct FFortAIPawnUpgradeProbability
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  UpgradeProbability;                                // 0x48(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnPointsProfile
struct FFortAIEncounterSpawnPointsProfile
{
public:
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCurveTableRowHandle>          MaxSpawnPointsPerPlayerCount;                      // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCurveTableRowHandle>          MinSpawnPointsPerPlayerCount;                      // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCap
struct FFortAIEncounterSpawnGroupCap
{
public:
	struct FCurveTableRowHandle                  MinSpawnGroupNumberCap;                            // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxSpawnGroupNumberCap;                            // 0x10(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCapsCategory
struct FFortAIEncounterSpawnGroupCapsCategory
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bApplyGroupPopulationCurveToCategoryMax;           // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C7A[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FCurveTableRowHandle                  InitialSpawnGroupAvailabilityDelaySeconds;         // 0x50(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  SpawnGroupAvailabilityDelaySeconds;                // 0x60(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     UnlockingTagQuery;                                 // 0x70(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterSpawnGroupCap> SpawnGroupCapsPerPlayerCount;                      // 0xB8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        InitialSpawnGroupAvailabilityTime;                 // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumActiveCategorySpawnGroups;                      // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                SpawnGroupAvailabilityTimes;                       // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumSpawnGroupAvailable;                            // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UObject*                               CategorySource;                                    // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C7C[0x50];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCapsProfile
struct FFortAIEncounterSpawnGroupCapsProfile
{
public:
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> PopulationCategories;                              // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEncounterPawnNumberCaps
struct FFortEncounterPawnNumberCaps
{
public:
	bool                                         bApplyPawnNumberCaps;                              // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C7D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FCurveTableRowHandle>          PawnCapsPerPlayerCount;                            // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortPlayerPerformanceEstimateSettings
struct FFortPlayerPerformanceEstimateSettings
{
public:
	struct FCurveTableRowHandle                  PlayerPerformanceEstimateTransformMin;             // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PlayerPerformanceEstimateTransformOrigin;          // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PlayerPerformanceEstimateTransformMax;             // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterPlayerPerformanceWeight;                  // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreviousWavePlayerPerformanceWeight;               // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CampaignPlayerPerformanceWeight;                   // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C7E[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterPIDController
struct FFortAIEncounterPIDController
{
public:
	float                                        ProportionalGain;                                  // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntegralGain;                                      // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DerivativeGain;                                    // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C7F[0x5C];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterPIDControllerSettings
struct FFortAIEncounterPIDControllerSettings
{
public:
	struct FCurveTableRowHandle                  ProportionalGain;                                  // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  IntegralGain;                                      // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  DerivativeGain;                                    // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.UtilityContribution
struct FUtilityContribution
{
public:
	enum class EFortCombatFactors                ContributingFactor;                                // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorFactor             ContributingAIDirectorFactor;                      // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C80[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MaxContribution;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFactorContributionType       ContributionType;                                  // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C81[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.UtilityData
struct FUtilityData
{
public:
	TArray<struct FUtilityContribution>          ContributingFactors;                               // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ContributionsTotal;                                // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyRecentSelectionPenalty;                      // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C82[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        RecentlySelectedPenaltyPercentage;                 // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PenaltyFallOffRate;                                // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DebugGraphName;                                    // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DebugGraphColor;                                   // 0x30(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.UtilityTypeFloatPair
struct FUtilityTypeFloatPair
{
public:
	enum class EFortAIUtility                    Utility;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C83[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Value;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.IntensityContribution
struct FIntensityContribution
{
public:
	enum class EFortCombatFactors                CombatFactor;                                      // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorFactor             ContributingAIDirectorFactor;                      // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C84[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MaxContribution;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyContributionByCompletionPercentage;         // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C85[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FCurveTableRowHandle                  CompletionPercentageInitialMultiplier;             // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  CompletionPercentageToStartReducingMultiplier;     // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  CompletionPercentageToStopReducingMultiplier;      // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyByNumberOfCriticalEncounterGoals;           // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C86[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.IntensityData
struct FIntensityData
{
public:
	TArray<struct FIntensityContribution>        ContributingFactors;                               // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ContributionsTotal;                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C87[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UBuildingEditModeMetadata*>     ExceptionEditModes;                                // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ExceptionEditModeWeight;                           // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C88[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.FortAIPawnLootDropData
struct FFortAIPawnLootDropData
{
public:
	float                                        LootDropChance;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemTierGroup;                                // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldItemInstancedTierGroup;                       // 0xC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AccountItemTierGroup;                              // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortAISpawnGroupUpgradeUIData
struct FFortAISpawnGroupUpgradeUIData
{
public:
	bool                                         bAlwaysDisplayHealthBar;                           // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideHealthBarColor;                           // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C89[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UTexture2D>             UpgradeIconImage;                                  // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                           UpgradeIconTintColor;                              // 0x30(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                          HealthBarColorOverride;                            // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UpgradeName;                                       // 0x68(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x158 (0x158 - 0x0)
// ScriptStruct FortniteGame.PendingSpawnInfo
struct FPendingSpawnInfo
{
public:
	TSubclassOf<class AFortAIPawn>               PawnClassToSpawn;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnPoint;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocation;                                     // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotation;                                     // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                SpawnSource;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnedFromExternalSpawner;                       // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C8A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        SpawnSetIndex;                                     // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortressAIType                   AIType;                                            // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C8B[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerController*                 TargetPlayer;                                      // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAIEncounterInfo*                  EncounterInfo;                                     // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyLevel;                                   // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortAISpawnGroup*                     SpawnGroup;                                        // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 SpawnGroupGuid;                                    // 0x60(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemyIndexInSpawnGroup;                            // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToSpawn;                                       // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 PendingSpawnInfoGuid;                              // 0x78(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCollision;                                  // 0x88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKillBuildingActorsAtSpawnLocation;                // 0x89(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C8D[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        EncounterAILifespan;                               // 0x8C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScoreMultiplier;                                   // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugSpawnedAI;                                   // 0x94(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C8E[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UFortAbilitySet*>               AbilitySetsToGrantOnSpawn;                         // 0x98(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortGameplayModifierItemDefinition*> ModifiersToApplyOnSpawn;                           // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortAISpawnGroupUpgradeUIData        UpgradeUIData;                                     // 0xB8(0x80)(NativeAccessSpecifierPublic)
	struct FFortAIPawnLootDropData               LootDropData;                                      // 0x138(0x1C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C8F[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortAIDirectorFactorContribution
struct FFortAIDirectorFactorContribution
{
public:
	enum class EFortAIDirectorEvent              AIDirectorEvent;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C90[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MaxContribution;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorFactorContribution ContributionType;                                  // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C91[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIDirectorFactorData
struct FFortAIDirectorFactorData
{
public:
	enum class EFortAIDirectorFactor             AIDirectorFactor;                                  // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C92[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortAIDirectorFactorContribution> ContributingEvents;                                // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MaxValue;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C93[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AIDirectorEventData
struct FAIDirectorEventData
{
public:
	enum class EFortAIDirectorEvent              Event;                                             // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C94[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FCurveTableRowHandle                  DataMax;                                           // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  CoolDownRate;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorEventContribution  ContributionType;                                  // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIDirectorEventParticipant   OwnerParticipantType;                              // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C95[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortGoalActorEncounterDataManagerPair
struct FFortGoalActorEncounterDataManagerPair
{
public:
	class AActor*                                GoalActor;                                         // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIDirectorDataManager*            EncounterDataManager;                              // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterWaveProgressEstimation
struct FFortAIEncounterWaveProgressEstimation
{
public:
	float                                        SectionProgressEstimate;                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SectionStartTime;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastWaveProgressUpdateTime;                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeakAndFadeWavePercentage;                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAdjustmentPerSecond;                            // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIWaveProgressSection        CurrentSection;                                    // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C96[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        NumberOfWaveSegments;                              // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.EncounterEnvironmentQueryInstance
struct FEncounterEnvironmentQueryInstance
{
public:
	struct FEncounterEnvironmentQueryInfo        EnvironmentQueryInfo;                              // 0x0(0x28)(NativeAccessSpecifierPublic)
	int32                                        QueryID;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWaitingForQueryResults;                         // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterDirection           ChosenDirection;                                   // 0x2D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C97[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FVector>                       QueryLocations;                                    // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ABuildingRift*>                 FoundRifts;                                        // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumTimesUsed;                                      // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C98[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortEncounterAIDirectorFactor
struct FFortEncounterAIDirectorFactor
{
public:
	float                                        CurrentValue;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccumulatedPeriodValue;                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalPeriodTime;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortSpawnAIRequest
struct FFortSpawnAIRequest
{
public:
	struct FGuid                                 SpawnGroupInstanceGuid;                            // 0x0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemyIndex;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocation;                                     // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotation;                                     // 0x20(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C99[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                SpawnPoint;                                        // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAbilitySet*>               AbilitySetsToGrantOnSpawn;                         // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCollisionWhenSpawning;                      // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C9A[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAISpawnerData
struct FFortAISpawnerData
{
public:
	struct FGuid                                 SpawnGroupInstanceGuid;                            // 0x0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortSpawnAIRequest                   ReservedSpawnRequest;                              // 0x10(0x50)(NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAIPawnUpgradeData
struct FFortAIPawnUpgradeData
{
public:
	struct FCurveTableRowHandle                  SpawnPointsMultiplierCurve;                        // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  LifespanMultiplierCurve;                           // 0x10(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  ScoreMultiplierCurve;                              // 0x20(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGameplayModifierItemDefinition*   ModifierDefinition;                                // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortGameplayModifierItemDefinition*> AdditionalModifiers;                               // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x108 (0x108 - 0x0)
// ScriptStruct FortniteGame.SpawnGroupInstanceInfo
struct FSpawnGroupInstanceInfo
{
public:
	class UFortAISpawnGroup*                     SpawnGroup;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumActiveAlive;                                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalGroupCost;                                    // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnPointsUsed;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumEngaged;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReadyToSpawn;                                     // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFinishedSpawning;                                 // 0x19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C9B[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGuid                                 GroupGuid;                                         // 0x1C(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemySpawnDataIndex;                               // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeSelected;                                      // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NextEnemyToSpawnIndex;                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 UpgradeTags;                                       // 0x38(0x20)(NativeAccessSpecifierPublic)
	struct FFortAISpawnGroupUpgradeUIData        UpgradeUIData;                                     // 0x58(0x80)(NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnUpgradeData>        PawnUpgrades;                                      // 0xD8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortGameplayModifierItemDefinition*> ModifiersForAllPawns;                              // 0xE8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AFortAIPawn*>                   PawnList;                                          // 0xF8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortCurveSequenceInstanceInfo
struct FFortCurveSequenceInstanceInfo
{
public:
	uint8                                        Pad_3C9C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0x10 - 0x4)
// ScriptStruct FortniteGame.FortIntensityCurveSequenceInstanceInfo
struct FFortIntensityCurveSequenceInstanceInfo : public FFortCurveSequenceInstanceInfo
{
public:
	uint8                                        Pad_3C9D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortIntensityCurveSequence*           IntensityCurveSequence;                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0xC (0x10 - 0x4)
// ScriptStruct FortniteGame.FortSpawnPointsPercentageCurveSequenceInstanceInfo
struct FFortSpawnPointsPercentageCurveSequenceInstanceInfo : public FFortCurveSequenceInstanceInfo
{
public:
	uint8                                        Pad_3C9E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortSpawnPointsPercentageCurveSequence* SpawnPointsPercentageCurveSequence;                // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CurrentIntensityAnalyticsBucket
struct FCurrentIntensityAnalyticsBucket
{
public:
	uint8                                        Pad_3C9F[0x38];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct FortniteGame.FortIntensityCurve
struct FFortIntensityCurve : public FTableRowBase
{
public:
	class UCurveTable*                           IntensityCurveTable;                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  IntensityCurveTableRow;                            // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LowPlayerPerformancePeakIntensityThreshold;        // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NormalPlayerPerformancePeakIntensityThreshold;     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HighPlayerPerformancePeakIntensityThreshold;       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRampTime;                                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeEndIntensityThreshold;                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartIntensityOffsetFloor;                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndIntensityOffsetFloor;                           // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartIntensityOffsetCeiling;                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndIntensityOffsetCeiling;                         // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3CA0[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortSpawnPointsPercentageCurve
struct FFortSpawnPointsPercentageCurve : public FTableRowBase
{
public:
	class UCurveTable*                           SpawnPointsPercentageCurveTable;                   // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpawnPointsPercentageCurveTableRow;                // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRampTime;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3CA1[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AIEncounterSpawnGroupWeights
struct FAIEncounterSpawnGroupWeights
{
public:
	uint8                                        Pad_3CA2[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.SpawnGroupProgression
struct FSpawnGroupProgression
{
public:
	class UFortAISpawnGroup*                     SpawnGroup;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterQueryDirectionTracker
struct FFortAIEncounterQueryDirectionTracker
{
public:
	bool                                         bHasTriedPreviousDirections;                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CA3[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<enum class EFortEncounterDirection>   PreviousQueryDirections;                           // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortEncounterDirection>   ChosenDirections;                                  // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortEncounterDirection>   FailedDirections;                                  // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortEncounterDirection>   AvailableDirections;                               // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x128 (0x128 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterRiftManagerInitializationData
struct FFortAIEncounterRiftManagerInitializationData
{
public:
	class UFortAIEncounterInfo*                  EncounterInfo;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortEncounterSettings                EncounterSettings;                                 // 0x8(0xB8)(NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        CurrentEnvironmentQueryInfo;                       // 0xC0(0x28)(NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        FallbackEnvironmentQueryInfo;                      // 0xE8(0x28)(NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>             RiftClassTemplate;                                 // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRiftsToUse;                                     // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRiftsToUse;                                     // 0x11C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateIntervalTimeSeconds;                         // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CA4[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterRift
struct FFortAIEncounterRift
{
public:
	int32                                        QueryID;                                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RiftLocation;                                      // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingRift*                         RiftActor;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRiftReservationHandle            RiftReservationHandle;                             // 0x18(0x4)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CA5[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterSpawnArea
struct FFortAIEncounterSpawnArea
{
public:
	TArray<struct FEncounterEnvironmentQueryInstance> QueryInstances;                                    // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterRift>          PendingRifts;                                      // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterRift>          Rifts;                                             // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortPathCostEstimator*>        PathEstimators;                                    // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsActive;                                         // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsingFallbackQuery;                               // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLocationManagementMode SpawnLocationManagementMode;                       // 0x42(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CA6[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAIGoalInfo
struct FFortAIGoalInfo
{
public:
	TWeakObjectPtr<class AActor>                 Actor;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Location;                                          // 0x8(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActorAlwaysPerceived;                             // 0x14(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3CA7[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.FortAIGoal
struct FFortAIGoal : public FFortAIGoalInfo
{
public:
	TArray<class UAIGoalComponent*>              GoalComponentsAssignedToGoal;                      // 0x18(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.AIAssignmentInfo
struct FAIAssignmentInfo
{
public:
	TWeakObjectPtr<class UFortAIAssignment>      CurrentAssignment;                                 // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortAIGoalInfo                       CurrentGoal;                                       // 0x8(0x18)(NoDestructor, NativeAccessSpecifierPrivate)
	float                                        TimeCurrentGoalWasChosen;                          // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeExitedLastAssignmentOfType[0x4];               // 0x24(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFortAIAssignment>      PreviousAssignment;                                // 0x34(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortAIGoalInfo                       PreviousGoal;                                      // 0x3C(0x18)(NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bWaitingForQueryResponse;                          // 0x54(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSuppressGoalUpdates;                              // 0x55(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReportEnemyGoalSelection;                         // 0x56(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CA8[0x29];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AIDiscouragedGoalTimer
struct FAIDiscouragedGoalTimer
{
public:
	struct FFortAIGoalInfo                       DiscouragedGoalInfo;                               // 0x0(0x18)(NoDestructor, NativeAccessSpecifierPublic)
	double                                       ExpirationTime;                                    // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       NumberOfTimesMarkedForDiscouragement;              // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CA9[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.GoalSelectionCriteria
struct FGoalSelectionCriteria
{
public:
	class UEnvQuery*                             GoalSelectionQuery;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.PawnGoalSelectionCriteria
struct FPawnGoalSelectionCriteria
{
public:
	struct FGameplayTagContainer                 IncludeEnemiesWithTags;                            // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExcludeEnemiesWithTags;                            // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGoalSelectionCriteria>        GoalSelectionCriteria;                             // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.PawnGoalSelectionTableEntry
struct FPawnGoalSelectionTableEntry
{
public:
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FPawnGoalSelectionCriteria            PawnGoalSelectionCriteria;                         // 0x20(0x50)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.EncounterGoalSelectionTableEntry
struct FEncounterGoalSelectionTableEntry
{
public:
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGoalSelectionCriteria                GoalSelectionCriteria;                             // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x20 - 0x10)
// ScriptStruct FortniteGame.AutoAcquireSlot
struct FAutoAcquireSlot : public FAIHotSpotSlotInfo
{
public:
	uint8                                        Pad_3CAA[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortAimAssist2D_InputParams
struct FFortAimAssist2D_InputParams
{
public:
	uint8                                        Pad_3CAB[0x40];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x150 (0x150 - 0x0)
// ScriptStruct FortniteGame.FortAimAssist2D_OwnerInfo
struct FFortAimAssist2D_OwnerInfo
{
public:
	class AFortPlayerController*                 FortPC;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlayerInput*                      FortPI;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       FortPawn;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CAC[0x138];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortAimAssist2D_Target
struct FFortAimAssist2D_Target
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CAD[0x40];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x220 (0x220 - 0x0)
// ScriptStruct FortniteGame.FortAimAssist2D
struct FFortAimAssist2D
{
public:
	struct FFortAimAssist2D_InputParams          InputParams;                                       // 0x0(0x40)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortAimAssist2D_OwnerInfo            OwnerInfo;                                         // 0x40(0x150)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAimAssist2D_Target>       TargetCache0;                                      // 0x190(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAimAssist2D_Target>       TargetCache1;                                      // 0x1A0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3CAE[0x70];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x300 (0x300 - 0x0)
// ScriptStruct FortniteGame.FortAimAssist2D_Settings
struct FFortAimAssist2D_Settings
{
public:
	struct FScalableFloat                        AssistInnerReticleWidth;                           // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AssistInnerReticleHeight;                          // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AssistOuterReticleWidth;                           // 0x40(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AssistOuterReticleHeight;                          // 0x60(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TargetingReticleWidth;                             // 0x80(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TargetingReticleHeight;                            // 0xA0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TargetRange;                                       // 0xC0(0x20)(Edit, NativeAccessSpecifierPublic)
	class UCurveFloat*                           TargetWeightCurve;                                 // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TargetWeightDBNOScale;                             // 0xE8(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FFortTargetFilter                     TargetFilter;                                      // 0x108(0x38)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PullInnerStrengthHip;                              // 0x140(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PullOuterStrengthHip;                              // 0x160(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PullInnerStrengthAds;                              // 0x180(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PullOuterStrengthAds;                              // 0x1A0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PullLerpInRate;                                    // 0x1C0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PullLerpOutRate;                                   // 0x1E0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PullMaxRotationRate;                               // 0x200(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlowInnerStrengthHip;                              // 0x220(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlowOuterStrengthHip;                              // 0x240(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlowInnerStrengthAds;                              // 0x260(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlowOuterStrengthAds;                              // 0x280(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlowLerpInRate;                                    // 0x2A0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlowLerpOutRate;                                   // 0x2C0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlowMinRotationRate;                               // 0x2E0(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x44 (0x44 - 0x0)
// ScriptStruct FortniteGame.FortAISharedRepMovement
struct FFortAISharedRepMovement
{
public:
	struct FRepMovement                          RepMovement;                                       // 0x0(0x34)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RepTimeStamp;                                      // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RepMovementMode;                                   // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAILODLevel                   RepCurrentFortAILODLevel;                          // 0x39(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CAF[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayAbilityRepSharedAnim_Index   RepSharedAnimInfo;                                 // 0x3C(0x8)(Transient, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAIBatchedDamageCues
struct FFortAIBatchedDamageCues
{
public:
	bool                                         bImpact;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImpactWeapon;                                     // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDamage;                                           // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDamageShields;                                    // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDamageWeapon;                                     // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFatal;                                            // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponActivated;                                  // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CB0[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector_NetQuantize10                 HitLocation;                                       // 0x8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CB1[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                TargetActor;                                       // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortAIAttributeReplicationProxy
struct FFortAIAttributeReplicationProxy
{
public:
	uint32                                       Health;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       MaxHealth;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DamagerInfoAnalytics
struct FDamagerInfoAnalytics
{
public:
	class FString                                DamageCauser;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamageAmount;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CB2[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct FortniteGame.FortPawnStats
struct FFortPawnStats : public FTableRowBase
{
public:
	float                                        MaximumHealth;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedWalk;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedRun;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedSprint;                                       // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedFly;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedCrouchedRun;                                  // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedCrouchedSprint;                               // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedBackwardsMultiplier;                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedDBNO;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AccelerationStrafeMultiplierSprint;                // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinAnalogWalkSpeed;                                // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GroundFriction;                                    // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingDecelerationWalking;                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingDecelerationFalling;                        // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingDecelerationFlying;                         // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingFrictionFactor;                             // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAcceleration;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAccelerationFlying;                             // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JumpZVelocity;                                     // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3CB3[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveTable*                           FallingDamageTable;                                // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FallingDamageTableRow;                             // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           VehicleEjectDamageTable;                           // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthRegenRate;                                   // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthRegenDelay;                                  // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthRegenThreshold;                              // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxShield;                                         // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldRegenRate;                                   // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldRegenDelay;                                  // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldRegenThreshold;                              // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxControlResistance;                              // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControlResistanceRegenRate;                        // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControlResistanceRegenDelay;                       // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControlResistanceRegenThreshold;                   // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnockbackMultiplier;                               // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnockbackThreshold;                                // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowChainStun;                                   // 0xA4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortControlRecoveryBehavior      ControlRecoveryBehavior;                           // 0xA5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3CB4[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x100 - 0xA8)
// ScriptStruct FortniteGame.FortAIPawnStats
struct FFortAIPawnStats : public FFortPawnStats
{
public:
	int32                                        ScoreValue;                                        // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DormantSightRadius;                                // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DormantHearingThreshold;                           // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DormantLOSHearingThreshold;                        // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DormantPeripheralVisionAngle;                      // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertSightRadius;                                  // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertHearingThreshold;                             // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertLOSHearingThreshold;                          // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlertPeripheralVisionAngle;                        // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoSuccessRangeFromLastSeenLocation;              // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           HealthScalingTable;                                // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HealthScalingTableRow;                             // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           ControlResistanceScalingTable;                     // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ControlResistanceScalingTableRow;                  // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           DifficultyRatingTable;                             // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DifficultyRatingTableRow;                          // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAIAppearanceOverrideEntry
struct FFortAIAppearanceOverrideEntry
{
public:
	class FName                                  AppearanceName;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFemale;                                         // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class USkeletalMesh>          SkeletalMesh;                                      // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortFeedbackBank>      FeedbackBank;                                      // 0x38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MinimapGoalByTagColorsData
struct FMinimapGoalByTagColorsData
{
public:
	struct FGameplayTagContainer                 GoalTags;                                          // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapColor;                                      // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.RunVariationData
struct FRunVariationData
{
public:
	TWeakObjectPtr<class AFortAIPawn>            FortAIPawn;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Distance;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.FortVariantSpawnPoints
struct FFortVariantSpawnPoints : public FTableRowBase
{
public:
	int32                                        BudgetPoints;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CB6[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortAIPawnVariantDefinition
struct FFortAIPawnVariantDefinition
{
public:
	TSubclassOf<class AFortAIPawn>               PawnClass;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  VariantWeightCurve;                                // 0x8(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentWeight;                                     // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CB7[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagQuery                     RequiredTagsQuery;                                 // 0x20(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortSpawnGroupEncounterTypeData
struct FFortSpawnGroupEncounterTypeData
{
public:
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxGroupCategoryPopulationDensityCurve;            // 0x20(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  RespawnDelayCurve;                                 // 0x30(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SpawnGroupEnemy
struct FSpawnGroupEnemy
{
public:
	TSubclassOf<class UFortAIPawnVariant>        EnemyVariantClass;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideVariantSpawnPointValue;                   // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CB8[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        SpawnValue;                                        // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAIPawnUpgrade
struct FFortAIPawnUpgrade
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnUpgradeData>        PawnUpgradeDataPerPlayerCount;                     // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortMoveConfig
struct FFortMoveConfig
{
public:
	uint8                                        Pad_3CB9[0x18];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                FocusTarget;                                       // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortPawn>                 PushPawnClassOnBump;                               // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.DistanceToTargetComparison
struct FDistanceToTargetComparison
{
public:
	bool                                         bUseOverriddenValue;                               // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CBA[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        OverriddenValue;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DistanceDataTags;                                  // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	enum class EArithmeticKeyOperation           Operator;                                          // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETargetDistanceComparisonType     ComparisonType;                                    // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CBB[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x18 - 0x10)
// ScriptStruct FortniteGame.AIHotSpotUseInfo
struct FAIHotSpotUseInfo : public FAIHotSpotSlotInfo
{
public:
	uint8                                        Pad_3CBC[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortNavLinkPattern
struct FFortNavLinkPattern
{
public:
	int32                                        PatternBits;                                       // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WildcardBits;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.BuildingActorNavArea
struct FBuildingActorNavArea
{
public:
	int32                                        AreaBits;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortAIAssignmentIdentifier
struct FFortAIAssignmentIdentifier
{
public:
	enum class EAssignmentType                   AssignmentType;                                    // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CBD[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 AssignmentGameplayTags;                            // 0x8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EFortTeam                         AssignmentTeam;                                    // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CBE[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.AlterationOption
struct FAlterationOption
{
public:
	TSoftObjectPtr<class UFortAlterationItemDefinition> AlterationDef;                                     // 0x0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         Costs;                                             // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.AlterationSlot
struct FAlterationSlot
{
public:
	int32                                        UnlockLevel;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       UnlockRarity;                                      // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CBF[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  SlotDefinitionRow;                                 // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRespeccable;                                      // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC0[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  SlotRarityInitRow;                                 // 0x14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       SlotInitMin;                                       // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       SlotInitMax;                                       // 0x1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC1[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        SlotInitIndex;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.AlterationSlotsLoadout
struct FAlterationSlotsLoadout : public FTableRowBase
{
public:
	TArray<struct FAlterationSlot>               AlterationSlots;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.AlterationSlotRarity
struct FAlterationSlotRarity : public FTableRowBase
{
public:
	TMap<enum class EFortRarity, int32>          RarityWeights;                                     // 0x8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.AlterationSlotDefinition
struct FAlterationSlotDefinition : public FTableRowBase
{
public:
	class FName                                  InitTierGroup;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         BaseRespecCosts;                                   // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AlterationWeightData
struct FAlterationWeightData
{
public:
	class FString                                AID;                                               // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialRollWeight;                                 // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        ExclusionNames;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AlterationWeightSet
struct FAlterationWeightSet
{
public:
	TArray<struct FAlterationWeightData>         WeightData;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.AlterationGroup
struct FAlterationGroup : public FTableRowBase
{
public:
	TMap<enum class EFortRarity, struct FAlterationWeightSet> RarityMapping;                                     // 0x8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.AlterationNamedExclusions
struct FAlterationNamedExclusions : public FTableRowBase
{
public:
	TArray<class FString>                        ExclusionNames;                                    // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.AlterationIntrinsicMapping
struct FAlterationIntrinsicMapping : public FTableRowBase
{
public:
	class FString                                NewAlteration;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.AlterationMapping
struct FAlterationMapping : public FTableRowBase
{
public:
	class FString                                NewAlteration;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AdditionalAlteration;                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x5B8 (0x5B8 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticModification
struct FFortCosmeticModification
{
public:
	TSoftObjectPtr<class UMaterialInterface>     CosmeticMaterial;                                  // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        AmbientParticleSystem;                             // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        MuzzleParticleSystem;                              // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>         MuzzleNiagaraSystem;                               // 0x78(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        ReloadParticleSystem;                              // 0xA0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        BeamParticleSystem;                                // 0xC8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>         BeamNiagaraSystem;                                 // 0xF0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        ImpactPhysicalSurfaceEffects[0x1A];                // 0x118(0x410)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UNiagaraSystem>> ImpactNiagaraPhysicalSurfaceEffects;               // 0x528(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortTracerBase>         TracerTemplate;                                    // 0x538(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyColor;                                      // 0x560(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC3[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FLinearColor                          ColorAlteration;                                   // 0x564(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ColorParameterName;                                // 0x574(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyDecalColour;                                // 0x57C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC4[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FLinearColor                          DecalColourAlterationStart;                        // 0x580(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DecalColourAlterationEnd;                          // 0x590(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bModifyShellColour;                                // 0x5A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FLinearColor                          ShellColourAlteration;                             // 0x5A4(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC6[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x5D8 (0x5D8 - 0x0)
// ScriptStruct FortniteGame.FortConditionalCosmeticModification
struct FFortConditionalCosmeticModification
{
public:
	struct FFortCosmeticModification             CosmeticModification;                              // 0x0(0x5B8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ConditionalTags;                                   // 0x5B8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.StreamedAudioLoop
struct FStreamedAudioLoop
{
public:
	class UAudioComponent*                       AudioComponent;                                    // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrossfadeTime;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC7[0x14];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.AmbientLoopKey
struct FAmbientLoopKey
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TOD;                                               // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CC8[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2C8 (0x2C8 - 0x0)
// ScriptStruct FortniteGame.FortAnalyticsClientEngagement
struct FFortAnalyticsClientEngagement
{
public:
	uint8                                        Pad_3CC9[0x2C8];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_DBNOCarried
struct FFortAnimInput_DBNOCarried
{
public:
	struct FCachedAnimStateData                  DropStateData;                                     // 0x0(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFloatSpringState                     CarrierYawSpringState;                             // 0x1C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFloatSpringState                     CarrierSpinePitchSpringState;                      // 0x24(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CCA[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UAnimMontage*                          CarrierDropMontage;                                // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          CarrierPickupMontage;                              // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       CarrierPawn;                                       // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlayerAnimInstance*               CarrierAnimBP;                                     // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LHandIKLocation;                                   // 0x50(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LHandIKRotation;                                   // 0x5C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               TempAttachLocation;                                // 0x68(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              TempAttachRotation;                                // 0x74(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SubAnimPhysicsWeight;                              // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropMontagePosition;                               // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupMontagePosition;                             // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupToIdleTransitionPosition;                    // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarrierPawnVelocityZ;                              // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarrierYawDeltaSmoothed;                           // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarriedJogNAnimPosition;                           // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarriedJogSAnimPosition;                           // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarriedCrouchNAnimPosition;                        // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarriedCrouchSAnimPosition;                        // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarriedSprintAnimPosition;                         // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarriedCrouchSprintAnimPosition;                   // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CarrierSpinePitch;                                 // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropStateWeight;                                   // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBeingCarried : 1;                                 // Mask: 0x1, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBeingPickedUp : 1;                              // Mask: 0x2, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBeingDropped : 1;                               // Mask: 0x4, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCarrierIsCrouching : 1;                           // Mask: 0x8, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCarrierIsMovingBackward : 1;                      // Mask: 0x10, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCarrierHasSyncMarkers : 1;                        // Mask: 0x20, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransitionFromPickupToIdle : 1;                   // Mask: 0x40, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransitionFromIdleToJogging : 1;                  // Mask: 0x80, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransitionFromJoggingToSprinting : 1;             // Mask: 0x1, PropSize: 0x10xB9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransitionFromInAirToLanding : 1;                 // Mask: 0x2, PropSize: 0x10xB9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bJackalPlayJumpTrickVertical : 1;                  // Mask: 0x4, PropSize: 0x10xB9(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CCB[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_SocketBasedIKTarget
struct FFortAnimInput_SocketBasedIKTarget
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AlphaCurveName;                                    // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              TargetRotation;                                    // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation;                                    // 0x1C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Alpha;                                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_PelvisAdjustment
struct FFortAnimInput_PelvisAdjustment
{
public:
	class USkeletalMeshComponent*                PawnMesh;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceToFeet;                                    // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegLength;                                         // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DesiredLegLengthTreshold;                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DotProductBetweenUpVectorsTreshold;                // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PelvisInterpSpeed;                                 // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmotePelvisOffsetInterpSpeed;                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmotePelvisOffsetAlpha;                            // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CurrentEmotePelvisOffset;                          // 0x24(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PelvisBoneIndex;                                   // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FootLeftBoneIndex;                                 // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FootRightBoneIndex;                                // 0x38(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CCC[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_HandIK
struct FFortAnimInput_HandIK
{
public:
	float                                        IKAlphaOverrideInterpSpeed;                        // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IKSpaceSwitchOverrideInterpSpeed;                  // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HandIKRetargetingWeight;                           // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HandsInRootSpaceAlpha;                             // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftHandIKAlpha;                                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightHandIKAlpha;                                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortHandIKOverrideType           LeftHandIKOverrideType;                            // 0x18(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortHandIKOverrideType           RightHandIKOverrideType;                           // 0x19(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CCD[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x84 (0x84 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_SkydivingExternalForce
struct FFortAnimInput_SkydivingExternalForce
{
public:
	bool                                         bUseSkydivingVectorForce;                          // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CCE[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               SkydivingVectorForce;                              // 0x4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HeadToPelvisDirection;                             // 0x10(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FloatingMultiplier;                                // 0x1C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FloatingAdditive;                                  // 0x28(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DivingMultiplier;                                  // 0x34(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DivingAdditive;                                    // 0x40(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ParachutingMultiplier;                             // 0x4C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ParachutingAdditive;                               // 0x58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseNoisyClothGravity;                             // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyNoiseInActorSpace;                           // 0x65(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CCF[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        PerlinRangedOutMinX;                               // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMaxX;                               // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMinY;                               // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMaxY;                               // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMinZ;                               // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerlinRangedOutMaxZ;                               // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CD0[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x190 (0x190 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_PlayerGliderAnimAsset
struct FFortAnimInput_PlayerGliderAnimAsset
{
public:
	class UBlendSpaceBase*                       Default_Base_BS;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_BodyAdditive_MaleMedium_BS;                // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_BodyAdditive_MaleLarge_BS;                 // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_BodyAdditive_FemaleSmall_BS;               // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_BodyAdditive_FemaleMedium_BS;              // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_BodyAdditive_FemaleLarge_BS;               // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_TurnAdditive_MaleMedium_BS;                // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_TurnAdditive_MaleLarge_BS;                 // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_TurnAdditive_FemaleSmall_BS;               // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_TurnAdditive_FemaleMedium_BS;              // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Default_TurnAdditive_FemaleLarge_BS;               // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_Base_BS;                                      // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_BodyAdditive_MaleMedium_BS;                   // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_BodyAdditive_MaleLarge_BS;                    // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_BodyAdditive_FemaleSmall_BS;                  // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_BodyAdditive_FemaleMedium_BS;                 // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_BodyAdditive_FemaleLarge_BS;                  // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_TurnAdditive_MaleMedium_BS;                   // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_TurnAdditive_MaleLarge_BS;                    // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_TurnAdditive_FemaleSmall_BS;                  // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_TurnAdditive_FemaleMedium_BS;                 // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Into_TurnAdditive_FemaleLarge_BS;                  // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Lean_MaleMedium_BS;                                // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Lean_MaleLarge_BS;                                 // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Lean_FemaleSmall_BS;                               // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Lean_FemaleMedium_BS;                              // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Lean_FemaleLarge_BS;                               // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_Center_MaleMedium_Pose;               // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_Center_MaleLarge_Pose;                // 0xE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_Center_FemaleSmall_Pose;              // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_Center_FemaleMedium_Pose;             // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_Center_FemaleLarge_Pose;              // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_ForwardInto_Anim;                     // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_ForwardInto_FromDeploy_Anim;          // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_BackInto_Anim;                        // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_LeftInto_Anim;                        // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_RightInto_Anim;                       // 0x120(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_ForwardOut_Anim;                      // 0x128(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_BackOut_Anim;                         // 0x130(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_LeftOut_Anim;                         // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         LeanAdditive_RightOut_Anim;                        // 0x140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       ToGlide_BS;                                        // 0x148(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       ToGlide_Lean_BS;                                   // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       ToDive_BS;                                         // 0x158(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       ToDive_Lean_BS;                                    // 0x160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       Dive_WeaponR_Additive_BS;                          // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         Glide_WeaponR_Additive_Anim;                       // 0x170(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootModPitchMin;                                   // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootModPitchMax;                                   // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootModYOffsetMin;                                 // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootModYOffsetMax;                                 // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPlayerDeployRootMod;                         // 0x188(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CD1[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortAnimPlayrateRange
struct FFortAnimPlayrateRange
{
public:
	float                                        MinPlayrate;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPlayrate;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_AdjustedAimOffset
struct FFortAnimInput_AdjustedAimOffset
{
public:
	float                                        YawOffset;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchOffset;                                       // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingYawOffset;                                // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingPitchOffset;                              // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x230 (0x230 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_PlayerAnimAsset
struct FFortAnimInput_PlayerAnimAsset
{
public:
	bool                                         bPlayUpperBodySlotOnFullBodyInAir;                 // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableFullBodyAimOffsetDuringMelee;              // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldApplyAimOffsetFullBody;                     // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CD2[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        FullBodyAimOffsetAlpha;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpperBodyAimOffsetAlpha;                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideDisableArmsHeadAdditive;                  // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CD3[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        DisableArmsHeadAdditiveOverride;                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimPlayrateRange                SprintPlayrateClampRange;                          // 0x14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimPlayrateRange                SprintTargetingPlayrateClampRange;                 // 0x1C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimPlayrateRange                CrouchSprintPlayrateClampRange;                    // 0x24(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimPlayrateRange                CrouchSprintTargetingPlayrateClampRange;           // 0x2C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CD4[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UAnimSequence*                         TargetingPose;                                     // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  TargetingAimOffset;                                // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         NonTargetingPose;                                  // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  NonTargetingAimOffset;                             // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         RelaxedPose;                                       // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         RelaxedPoseLevel2;                                 // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  RelaxedAimOffset;                                  // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       JogAdditiveBlendSpace;                             // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       JogAdditiveBlendSpaceRelaxed;                      // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       JogAdditiveBlendSpaceRelaxedLevel2;                // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       JogAdditiveBlendSpaceMeleeGuarding;                // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditive_N;                                     // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditive_E;                                     // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditive_S;                                     // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditive_W;                                     // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditiveRelaxed_N;                              // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditiveRelaxed_E;                              // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditiveRelaxed_S;                              // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditiveRelaxed_W;                              // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditiveRelaxedLevel2_N;                        // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditiveRelaxedLevel2_E;                        // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditiveRelaxedLevel2_S;                        // 0xE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         JogAdditiveRelaxedLevel2_W;                        // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SprintAnimation;                                   // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SprintTargetingAnimation;                          // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchTargetingPose;                               // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchNonTargetingPose;                            // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchRelaxedPose;                                 // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       CrouchCoreTargetingBlendSpace;                     // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       CrouchCoreNonTargetingBlendSpace;                  // 0x120(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       CrouchWalkAdditiveBlendSpace;                      // 0x128(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       CrouchJogAdditiveBlendSpace;                       // 0x130(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       CrouchJogAdditiveBlendSpaceRelaxed;                // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchWalkAdditive_N;                              // 0x140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchWalkAdditive_E;                              // 0x148(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchWalkAdditive_S;                              // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchWalkAdditive_W;                              // 0x158(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchJogAdditive_N;                               // 0x160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchJogAdditive_E;                               // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchJogAdditive_S;                               // 0x170(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchJogAdditive_W;                               // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchJogAdditiveRelaxed_N;                        // 0x180(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchJogAdditiveRelaxed_E;                        // 0x188(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchJogAdditiveRelaxed_S;                        // 0x190(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchJogAdditiveRelaxed_W;                        // 0x198(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchSprintAnimation;                             // 0x1A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CrouchSprintTargetingAnimation;                    // 0x1A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SwimRelaxedPose;                                   // 0x1B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SwimTargetingPose;                                 // 0x1B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SwimNonTargetingPose;                              // 0x1C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       SwimJogAdditiveBlendSpace;                         // 0x1C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpaceBase*                       SwimJogAdditiveBlendSpaceRelaxed;                  // 0x1D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SwimSprintAnimation;                               // 0x1D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAimOffsetBlendSpace*                  SwimTargetingAimOffset;                            // 0x1E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SwimIdleNoise;                                     // 0x1E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         IdleNoise;                                         // 0x1F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         IdleNoise_AR_DownSights;                           // 0x1F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         WeaponInspectAnimation;                            // 0x200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverridePitchAndYawOffsets;                       // 0x208(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortAnimInput_AdjustedAimOffset      AnimSetOffsets;                                    // 0x20C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CD6[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FName>                          BonesToHide;                                       // 0x220(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_Skydiving
struct FFortAnimInput_Skydiving
{
public:
	struct FVector                               ParaGilderRootOffset;                              // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ParaGliderRootRotationOverride;                    // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bUseParaGlideRootModifier : 1;                     // Mask: 0x1, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydivingFromLaunchPad : 1;                     // Mask: 0x2, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydivingFromBus : 1;                           // Mask: 0x4, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInVortex : 1;                                   // Mask: 0x8, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUsingUmbrella : 1;                              // Mask: 0x10, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsActivelyStrafingInAir : 1;                      // Mask: 0x20, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDiving : 1;                                     // Mask: 0x40, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDivingUpInVortex : 1;                           // Mask: 0x80, PropSize: 0x10x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsParachuteOpen : 1;                              // Mask: 0x1, PropSize: 0x10x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydiving : 1;                                  // Mask: 0x2, PropSize: 0x10x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsParachuteLeaning : 1;                           // Mask: 0x4, PropSize: 0x10x19(0x1)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydiveLeaning : 1;                             // Mask: 0x8, PropSize: 0x10x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaning : 1;                                    // Mask: 0x10, PropSize: 0x10x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSkydiveDiveMode : 1;                            // Mask: 0x20, PropSize: 0x10x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bParachuteLeanTransition : 1;                      // Mask: 0x40, PropSize: 0x10x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayedParachuteLeanTransition : 1;                // Mask: 0x80, PropSize: 0x10x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlaySkydiveDrift : 1;                             // Mask: 0x1, PropSize: 0x10x1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSkydiveDriftDelayActive : 1;                      // Mask: 0x2, PropSize: 0x10x1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSkydiveDriftAnimAllowed : 1;                      // Mask: 0x4, PropSize: 0x10x1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_28E : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CD7[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LocalAccelForward;                                 // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelRight;                                   // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalVelocityRight;                                // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveAimPitch;                                   // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveAimPitchInterpSpeed;                        // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveAimYaw;                                     // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeployChuteAnimRate;                               // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveDriftAnimRate;                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveDriftAnimRateCurrent;                       // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveFidgetAnimRate;                             // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveFidgetAnimRateCurrent;                      // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveAdditiveAlpha;                              // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveDriftDelay;                                 // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkydiveDriftAnim;                                  // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkydiveDriftAnimMax;                               // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LaunchpadAnim;                                     // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkydivingDirection               LocalAccelDir;                                     // 0x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkydivingDirection               DirectionLast;                                     // 0x5D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CD8[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x240 (0x240 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_AdjustedAim
struct FFortAnimInput_AdjustedAim
{
public:
	struct FFortAnimInput_AdjustedAimOffset      WeaponOffsets[0x22];                               // 0x0(0x220)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        YawOffset;                                         // 0x220(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchOffset;                                       // 0x224(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawScale;                                          // 0x228(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchScale;                                        // 0x22C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResultingYaw;                                      // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResultingPitch;                                    // 0x234(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ZeroOutPitchWeightCurveName;                       // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_TurnInPlace
struct FFortAnimInput_TurnInPlace
{
public:
	struct FCachedAnimStateArray                 TurnInitiatingStates;                              // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FCachedAnimStateArray                 TurnTransitionStates;                              // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FName                                  TurnRotationAmountCurveName;                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AllowTurnInPlaceCurveName;                         // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             EmoteYawOffsetSofteningInputRange;                 // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             EmoteYawOffsetSofteningOutputRange;                // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnThreshold90;                                   // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialTurnCurveValue;                             // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAllowedRootYawOffset;                           // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootYawOffset;                                     // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RootYawOffsetAlpha;                                // 0x60(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToTurn : 1;                                  // Mask: 0x1, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToTurnInVehicle : 1;                         // Mask: 0x2, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToTurnAgain : 1;                             // Mask: 0x4, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTurningLeft : 1;                                  // Mask: 0x8, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_28F : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CD9[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LastTurnRotationAmount;                            // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CDA[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_SpeedWarping
struct FFortAnimInput_SpeedWarping
{
public:
	class UCurveFloat*                           PlayRateAdjustmentCurve;                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SpeedWarpingLimits;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SpeedWarpingLimitsAddlRateScale;                   // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedWarpingAmount;                                // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayRate;                                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_BowWeapon
struct FFortAnimInput_BowWeapon
{
public:
	class UCurveFloat*                           BowChargeSpeedModifierCurve;                       // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CDB[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            RightHandIKExtraOffset;                            // 0x10(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               RightHandIKOffsetLocation;                         // 0x40(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RightHandIKOffsetRotation;                         // 0x4C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  WeaponAttachmentSocketName;                        // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ArrowNockSocketName;                               // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BowAimYaw;                                         // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BowAimPitch;                                       // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeBlendSpaceCrouchSpeed;                       // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeBlendSpaceCrouchSpeedInterpRate;             // 0x74(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeBlendSpaceCrouchSpeedTarget;                 // 0x78(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargePlayRate;                                    // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeBlendInTime;                                 // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FastChargeThreshold;                               // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeBlendInTimeDefault;                          // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeBlendInTimeFastCharge;                       // 0x8C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponRaisedAdditiveLeanMultiplier;                // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBowEquipped : 1;                                // Mask: 0x1, PropSize: 0x10x94(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBowCharging : 1;                                // Mask: 0x2, PropSize: 0x10x94(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBowAtMaxCharge : 1;                             // Mask: 0x4, PropSize: 0x10x94(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableRightHandIK : 1;                            // Mask: 0x8, PropSize: 0x10x94(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CDC[0xB];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_CommonWeapon
struct FFortAnimInput_CommonWeapon
{
public:
	uint8                                        bIsWeaponEquipped : 1;                             // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceUpperBodyTargeting : 1;                      // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CDD[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_CommonVehicle
struct FFortAnimInput_CommonVehicle
{
public:
	uint8                                        bIsUsingVehicle : 1;                               // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumpingVehicle : 1;                             // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanChargeJump : 1;                                // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsChargingJump : 1;                               // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_290 : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CDE[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        bIsJumping : 1;                                    // Mask: 0x1, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnGround : 1;                                   // Mask: 0x2, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanDriverAimWeapon : 1;                           // Mask: 0x4, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CDF[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x5C (0x5C - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_ShoppingCart
struct FFortAnimInput_ShoppingCart
{
public:
	uint8                                        bIsUsingShoppingCart : 1;                          // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_291 : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	enum class ECoastState                       CoastState;                                        // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastStatePedaling : 1;                         // Mask: 0x1, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastStateCoasting : 1;                         // Mask: 0x2, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastStateDismount : 1;                         // Mask: 0x4, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastStateIdle : 1;                             // Mask: 0x8, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInAir : 1;                                      // Mask: 0x10, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoasting : 1;                                   // Mask: 0x20, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPedaling : 1;                                   // Mask: 0x40, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReadyToPedal : 1;                               // Mask: 0x80, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CE0[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        IsReadyToPedal;                                    // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWantsToCoast : 1;                                 // Mask: 0x1, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastIdling : 1;                                // Mask: 0x2, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStartCoasting : 1;                              // Mask: 0x4, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsEndCoasting : 1;                                // Mask: 0x8, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDismountingFromCoast : 1;                       // Mask: 0x10, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCoastingOrDismountingFromCoast : 1;             // Mask: 0x20, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStandingInPlace : 1;                            // Mask: 0x40, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask: 0x80, PropSize: 0x10x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprintingAndMovingForward : 1;                  // Mask: 0x1, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForwardNotSprinting : 1;                  // Mask: 0x2, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask: 0x4, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask: 0x8, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask: 0x10, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask: 0x20, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingBackwards : 1;                            // Mask: 0x40, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingOrTurningInPlace : 1;                     // Mask: 0x80, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInAirSteady : 1;                                // Mask: 0x1, PropSize: 0x10xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnSlope : 1;                                    // Mask: 0x2, PropSize: 0x10xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimFWD : 1;                                       // Mask: 0x4, PropSize: 0x10xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimBWD : 1;                                       // Mask: 0x8, PropSize: 0x10xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimLFT : 1;                                       // Mask: 0x10, PropSize: 0x10xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimRGT : 1;                                       // Mask: 0x20, PropSize: 0x10xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_292 : 2;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CE1[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ForwardVelocity;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardSpeedKmH;                                   // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentBrakeForce;                                 // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunForwardAlpha;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAcceleratingForward : 1;                        // Mask: 0x1, PropSize: 0x10x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAccelBreakingOrReversing : 1;                   // Mask: 0x2, PropSize: 0x10x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_293 : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CE2[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        SteerAngle;                                        // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngleInterpSpeed;                             // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastSteerAngleInterpSpeed;                        // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IsReadyToPedalInterpSpeed;                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandingInPlaceSteerAngle;                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirDeadZoneAngleDegrees;                    // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirAngleOffsetDegrees;                      // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFWDDeltaAngleDegrees;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimBWDDeltaAngleDegrees;                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLFTDeltaAngleDegrees;                           // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimRGTDeltaAngleDegrees;                           // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCardDirIndex;                                  // 0x58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x64 (0x64 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_FerretVehicle
struct FFortAnimInput_FerretVehicle
{
public:
	uint8                                        bIsUsingFerretVehicle : 1;                         // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDriver : 1;                                     // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassenger : 1;                             // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackLeftPassenger : 1;                          // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackRightPassenger : 1;                         // Mask: 0x10, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassengerAndLeaning : 1;                   // Mask: 0x20, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackPassengerAndLeaning : 1;                    // Mask: 0x40, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDrifting : 1;                                   // Mask: 0x80, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask: 0x1, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask: 0x2, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask: 0x4, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask: 0x8, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask: 0x10, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaning : 1;                                    // Mask: 0x20, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaningOrBouncing : 1;                          // Mask: 0x40, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouching : 1;                            // Mask: 0x80, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouched : 1;                             // Mask: 0x1, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceJumping : 1;                              // Mask: 0x2, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceRecoiling : 1;                            // Mask: 0x4, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_294 : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        bIsSteeringRight;                                  // 0x3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringLeft;                                   // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsShooting;                                       // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFerretPassengerRotating;                        // 0x6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CE3[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        RunForwardAlpha;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCompression;                                 // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeanPosition;                                      // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionX;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionY;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionZ;                                     // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimFWD : 1;                                       // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimBWD : 1;                                       // Mask: 0x2, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimLFT : 1;                                       // Mask: 0x4, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimRGT : 1;                                       // Mask: 0x8, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_295 : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CE4[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirDeadZoneAngleDegrees;                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirAngleOffsetDegrees;                      // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCardDirIndex;                                  // 0x38(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFWDDeltaAngleDegrees;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimBWDDeltaAngleDegrees;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLFTDeltaAngleDegrees;                           // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimRGTDeltaAngleDegrees;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngle;                                        // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SeatSwitchDirection;                               // 0x58(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_MountedTurret
struct FFortAnimInput_MountedTurret
{
public:
	bool                                         bIsUsingMountedTurret;                             // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CE5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        AimingYaw;                                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimingPitch;                                       // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalScaler;                                       // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_Quad
struct FFortAnimInput_Quad
{
public:
	uint8                                        bIsUsingQuad : 1;                                  // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDriver : 1;                                     // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassenger : 1;                             // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackPassenger : 1;                              // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackPassengerAndLeaning : 1;                    // Mask: 0x10, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDrifting : 1;                                   // Mask: 0x20, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask: 0x40, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask: 0x80, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask: 0x1, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask: 0x2, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask: 0x4, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaning : 1;                                    // Mask: 0x8, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaningOrBouncing : 1;                          // Mask: 0x10, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouching : 1;                            // Mask: 0x20, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouched : 1;                             // Mask: 0x40, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceJumping : 1;                              // Mask: 0x80, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceRecoiling : 1;                            // Mask: 0x1, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringRight : 1;                              // Mask: 0x2, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringLeft : 1;                               // Mask: 0x4, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_296 : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CE6[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        RunForwardAlpha;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCompression;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeanPosition;                                      // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionX;                                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionY;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionZ;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalVelocity;                                  // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalAcceleration;                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimFWD : 1;                                       // Mask: 0x1, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimBWD : 1;                                       // Mask: 0x2, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimLFT : 1;                                       // Mask: 0x4, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimRGT : 1;                                       // Mask: 0x8, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_297 : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CE7[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirDeadZoneAngleDegrees;                    // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirAngleOffsetDegrees;                      // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCardDirIndex;                                  // 0x3C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFWDDeltaAngleDegrees;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimBWDDeltaAngleDegrees;                           // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLFTDeltaAngleDegrees;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimRGTDeltaAngleDegrees;                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngle;                                        // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlpha;                                        // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngleDeadZoneDegrees;                         // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteeringRotation;                                  // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehiclePitch;                                      // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRoll;                                       // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x54 (0x54 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_GolfCart
struct FFortAnimInput_GolfCart
{
public:
	uint8                                        bIsUsingGolfCart : 1;                              // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDriver : 1;                                     // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassenger : 1;                             // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackLeftPassenger : 1;                          // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackRightPassenger : 1;                         // Mask: 0x10, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFrontPassengerAndLeaning : 1;                   // Mask: 0x20, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackPassengerAndLeaning : 1;                    // Mask: 0x40, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDrifting : 1;                                   // Mask: 0x80, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask: 0x1, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsEBraking : 1;                                   // Mask: 0x2, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask: 0x4, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask: 0x8, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask: 0x10, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask: 0x20, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPowerSliding : 1;                               // Mask: 0x40, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaning : 1;                                    // Mask: 0x80, PropSize: 0x10x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeaningOrBouncing : 1;                          // Mask: 0x1, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouching : 1;                            // Mask: 0x2, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceCrouched : 1;                             // Mask: 0x4, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceJumping : 1;                              // Mask: 0x8, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBounceRecoiling : 1;                            // Mask: 0x10, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringRight : 1;                              // Mask: 0x20, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringLeft : 1;                               // Mask: 0x40, PropSize: 0x10x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_298 : 1;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CE8[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        RunForwardAlpha;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCompression;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeanPosition;                                      // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionX;                                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionY;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanPositionZ;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimFWD : 1;                                       // Mask: 0x1, PropSize: 0x10x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimBWD : 1;                                       // Mask: 0x2, PropSize: 0x10x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimLFT : 1;                                       // Mask: 0x4, PropSize: 0x10x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimRGT : 1;                                       // Mask: 0x8, PropSize: 0x10x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_299 : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CE9[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        PawnToVehicleDeltaYawAngleDegrees;                 // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirDeadZoneAngleDegrees;                    // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCardDirAngleOffsetDegrees;                      // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastCardDirIndex;                                  // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFWDDeltaAngleDegrees;                           // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimBWDDeltaAngleDegrees;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimLFTDeltaAngleDegrees;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimRGTDeltaAngleDegrees;                           // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngle;                                        // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_SpaghettiVehicle
struct FFortAnimInput_SpaghettiVehicle
{
public:
	uint8                                        bIsUsingSpaghettiVehicle : 1;                      // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_OctopusVehicle
struct FFortAnimInput_OctopusVehicle
{
public:
	uint8                                        bIsUsingOctopusVehicle : 1;                        // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xBC (0xBC - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_VelocityImpact
struct FFortAnimInput_VelocityImpact
{
public:
	struct FVector                               LastVelocity;                                      // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DeltaVelocityThreshold;                            // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ImpactScale;                                       // 0x18(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputRange                           ImpactLimitX;                                      // 0x24(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FInputRange                           ImpactLimitY;                                      // 0x2C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FInputRange                           ImpactLimitZ;                                      // 0x34(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFloatRK4SpringInterpolator           SpringInterpolatorX;                               // 0x3C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CEA[0x1C];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFloatRK4SpringInterpolator           SpringInterpolatorY;                               // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CEB[0x1C];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFloatRK4SpringInterpolator           SpringInterpolatorZ;                               // 0x84(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CEC[0x1C];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        bTestVelocity : 1;                                 // Mask: 0x1, PropSize: 0x10xA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_29A : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CED[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               TestVelocity;                                      // 0xAC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsForwardImpact : 1;                              // Mask: 0x1, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackwardImpact : 1;                             // Mask: 0x2, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLeftImpact : 1;                                 // Mask: 0x4, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsRightImpact : 1;                                // Mask: 0x8, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUpImpact : 1;                                   // Mask: 0x10, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDownImpact : 1;                                 // Mask: 0x20, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CEE[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1AC (0x1AC - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_JackalVehicle
struct FFortAnimInput_JackalVehicle
{
public:
	uint8                                        bIsUsingJackalVehicle : 1;                         // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringLeft : 1;                               // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSteeringRight : 1;                              // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_29B : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CEF[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        SteerAngleDeadZoneDegrees;                         // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAngle;                                        // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanYaw;                                           // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuantizedSteerAngle;                               // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlpha;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunForwardAlpha;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopePitchDegreeAngle;                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeRollDegreeAngle;                              // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceFromGround;                                // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotPlayRate;                                     // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReversing : 1;                                  // Mask: 0x1, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask: 0x2, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving : 1;                                     // Mask: 0x4, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMovingForward : 1;                              // Mask: 0x8, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask: 0x10, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInAir : 1;                                        // Mask: 0x20, PropSize: 0x10x2C(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFalling : 1;                                    // Mask: 0x40, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumping : 1;                                    // Mask: 0x80, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsRelaxed : 1;                                    // Mask: 0x1, PropSize: 0x10x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBoosting : 1;                                   // Mask: 0x2, PropSize: 0x10x2D(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasReachedJumpChargeStartThreshold : 1;           // Mask: 0x4, PropSize: 0x10x2D(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasReachedJumpChargeMidThreshold : 1;             // Mask: 0x8, PropSize: 0x10x2D(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasReachedJumpChargeFullThreshold : 1;            // Mask: 0x10, PropSize: 0x10x2D(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAdjustRootForFemaleRider : 1;                     // Mask: 0x20, PropSize: 0x10x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPlayingEmoteOnHoverboard : 1;                   // Mask: 0x40, PropSize: 0x10x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldApplyAdditive : 1;                          // Mask: 0x80, PropSize: 0x10x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayPivotOnGroundAndNotBoosting : 1;              // Mask: 0x1, PropSize: 0x10x2E(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnLowerHill : 1;                                // Mask: 0x2, PropSize: 0x10x2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLowerBodyIdleToLoopTransition : 1;                // Mask: 0x4, PropSize: 0x10x2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInterruptHoverboardFullybody : 1;                 // Mask: 0x8, PropSize: 0x10x2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnterFullBodyHoverboardState : 1;                 // Mask: 0x10, PropSize: 0x10x2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDefaultToJumpStartTransition : 1;                 // Mask: 0x20, PropSize: 0x10x2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLocomotionPoseToJumpTransition : 1;               // Mask: 0x40, PropSize: 0x10x2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBoostingToBoostingJumpTransition : 1;             // Mask: 0x80, PropSize: 0x10x2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bJumpToLocomotionPoseTransition : 1;               // Mask: 0x1, PropSize: 0x10x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bJumpApexToJumpFallTransition : 1;                 // Mask: 0x2, PropSize: 0x10x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIdleToMovementStartTransition : 1;                // Mask: 0x4, PropSize: 0x10x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIdleToMovementLoopTransition : 1;                 // Mask: 0x8, PropSize: 0x10x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementLoopToMovementStopTransition : 1;         // Mask: 0x10, PropSize: 0x10x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementLoopToPivotTransition : 1;                // Mask: 0x20, PropSize: 0x10x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementLoopToIdleTransition : 1;                 // Mask: 0x40, PropSize: 0x10x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIdleAdditiveToCollisionNTransition : 1;           // Mask: 0x80, PropSize: 0x10x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSplitBodyToHoverboardBRTransition : 1;            // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHoverboardBRToSplitBodyTransition : 1;            // Mask: 0x2, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHoverboardBRMovementToJumpChargeTransition : 1;   // Mask: 0x4, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIdlesToJackalVehicleTransition : 1;               // Mask: 0x8, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayAdditiveLeans : 1;                            // Mask: 0x10, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayBalloonLeans : 1;                             // Mask: 0x20, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayJumpTrickVertical : 1;                        // Mask: 0x40, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayJumpTrick : 1;                                // Mask: 0x80, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayMovingFast : 1;                               // Mask: 0x1, PropSize: 0x10x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayHipAdjustmentAdditive : 1;                    // Mask: 0x2, PropSize: 0x10x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayDriveSouth : 1;                               // Mask: 0x4, PropSize: 0x10x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayHeadAimOffset : 1;                            // Mask: 0x8, PropSize: 0x10x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlaySlopeAimOffset : 1;                           // Mask: 0x10, PropSize: 0x10x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_29C : 3;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CF0[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        JumpCombatAdditiveWeight;                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistIdle;                                    // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistLocomotionLoop;                          // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_VelocityImpact         VelocityImpact;                                    // 0x40(0xBC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ImpactDisplacement;                                // 0xFC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF1[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        SteerYaw;                                          // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EmoteHoverboardPosition;                           // 0x114(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              EmoteHoverboardRotation;                           // 0x120(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bShouldAttachFeetToHoverboard : 1;                 // Mask: 0x1, PropSize: 0x10x12C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_29D : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CF2[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               FootLeftLocationOffset;                            // 0x130(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FootLeftRotationOffset;                            // 0x13C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               FootRightLocationOffset;                           // 0x148(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FootRightRotationOffset;                           // 0x154(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        StoppedThreshold;                                  // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovingForwardThreshold;                            // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovingFowardFastThreshold;                         // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultToJumpStartTransitionThreshold;             // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpTrickAngularVelocityThreshold;                 // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpDistanceFromGroundThreshold;                   // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityStartThreshold;                            // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovingFastThreshold;                               // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RelaxedSpeedThreshold;                             // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpChargeStartThreshold;                          // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpChargeMidThreshold;                            // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpChargeFullThreshold;                           // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotatingAngularVelocityThreshold;                  // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleToLoopTransitionSpeedThreshold;                // 0x194(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdleToMovementLoopTransitionThreshold;             // 0x198(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistIdleMultiplier;                          // 0x19C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistLocomotionLoopMultiplier;                // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanYawForMaxPivotPlayRate;                        // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlphaForMaxPivotPlayRate;                     // 0x1A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_HoverBoard
struct FFortAnimInput_HoverBoard
{
public:
	bool                                         bIsUsingHoverboard;                                // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        HoverTransformAlpha;                               // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              HoverTransformRotation;                            // 0x8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               HoverTransformTranslation;                         // 0x14(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverCycle;                                        // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF4[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveFloat*                           HoverCycleVelocityCurve;                           // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverHeight;                                       // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF5[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveFloat*                           HoverHeightCurve;                                  // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverLeanAngle;                                    // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF6[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveFloat*                           HoverLeanCurve;                                    // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverPitchAngle;                                   // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverYaw;                                          // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverYawCurrent;                                   // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoverIdleLeanAlpha;                                // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           HoverPitchCurve;                                   // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_Zipline
struct FFortAnimInput_Zipline
{
public:
	uint8                                        bIsZiplining : 1;                                  // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayPivotTransition : 1;                    // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_29E : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3CF7[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LeanYaw;                                           // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotBlendDelayRemaining;                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotBlendDelay;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            PivotCardinalDirection;                            // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF8[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               WorldVelocityLastTick;                             // 0x14(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_CreativeMoveTool
struct FFortAnimInput_CreativeMoveTool
{
public:
	bool                                         bIsFlying;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x78 - 0x68)
// ScriptStruct FortniteGame.FortAnimNode_AnimSetDrivenRandom
struct FFortAnimNode_AnimSetDrivenRandom : public FAnimNode_RandomPlayer
{
public:
	struct FGameplayTag                          RandomSlotName;                                    // 0x68(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAnimSet*                          AnimSet;                                           // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SourceDriver
struct FSourceDriver
{
public:
	struct FBoneReference                        SourceBone;                                        // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class EComponentType                    SourceComponent;                                   // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseQuaternion;                                     // 0x11(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF9[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveFloat*                           DrivingCurve;                                      // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Multiplier;                                        // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseRange;                                         // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CFA[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        RangeMin;                                          // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeMax;                                          // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemappedMin;                                       // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemappedMax;                                       // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0xF8 - 0xC8)
// ScriptStruct FortniteGame.FortAnimNode_Flap
struct FFortAnimNode_Flap : public FAnimNode_SkeletalControlBase
{
public:
	TArray<struct FSourceDriver>                 SourceDrives;                                      // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        TargetBone;                                        // 0xD8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class EComponentType                    TargetComponent;                                   // 0xE8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESourceSelectionMode              SelectionMode;                                     // 0xE9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseClamp;                                         // 0xEA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CFB[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        TargetClampMin;                                    // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetClampMax;                                    // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CFC[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.OrientationWarpingSpineBoneData
struct FOrientationWarpingSpineBoneData
{
public:
	uint8                                        Pad_3CFD[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OrientationWarpingSpineBoneSettings
struct FOrientationWarpingSpineBoneSettings
{
public:
	struct FBoneReference                        Bone;                                              // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.OrientationWarpingSettings
struct FOrientationWarpingSettings
{
public:
	enum class EAxis                             YawRotationAxis;                                   // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CFE[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        BodyOrientationAlpha;                              // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOrientationWarpingSpineBoneSettings> SpineBones;                                        // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        IKFootRootBone;                                    // 0x18(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FBoneReference>                IKFootBones;                                       // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x130 - 0xC8)
// ScriptStruct FortniteGame.FortAnimNode_OrientationWarping
struct FFortAnimNode_OrientationWarping : public FAnimNode_SkeletalControlBase
{
public:
	float                                        LocomotionAngle;                                   // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FOrientationWarpingSettings           Settings;                                          // 0xD0(0x38)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FOrientationWarpingSpineBoneData> SpineBoneDataArray;                                // 0x108(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D00[0x14];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        CachedDeltaTime;                                   // 0x12C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x150 (0x160 - 0x10)
// ScriptStruct FortniteGame.FortAnimNode_ScaleHuskBones
struct FFortAnimNode_ScaleHuskBones : public FAnimNode_Base
{
public:
	struct FPoseLink                             PreScalePose;                                      // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D01[0x140];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SlopeWarpingFootDefinition
struct FSlopeWarpingFootDefinition
{
public:
	struct FBoneReference                        IKFootBone;                                        // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        FKFootBone;                                        // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        NumBonesInLimb;                                    // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ToeSocketName;                                     // 0x24(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeelSocketName;                                    // 0x2C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootSize;                                          // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.SlopeWarpingFootData
struct FSlopeWarpingFootData
{
public:
	uint8                                        Pad_3D02[0xA0];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x160 (0x228 - 0xC8)
// ScriptStruct FortniteGame.FortAnimNode_SlopeWarping
struct FFortAnimNode_SlopeWarping : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                        Pad_3D03[0x18];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FBoneReference                        IKFootRootBone;                                    // 0xE0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        PelvisBone;                                        // 0xF0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FSlopeWarpingFootDefinition>   FeetDefinitions;                                   // 0x100(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSlopeWarpingFootData>         FeetData;                                          // 0x110(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          PelvisOffsetInterpolator;                          // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D04[0x34];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               GravityDir;                                        // 0x15C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CustomFloorOffset;                                 // 0x168(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedDeltaTime;                                   // 0x174(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetFloorNormalWorldSpace;                       // 0x178(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          FloorNormalInterpolator;                           // 0x184(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D05[0x34];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               TargetFloorOffsetLocalSpace;                       // 0x1C0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          FloorOffsetInterpolator;                           // 0x1CC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D06[0x34];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MaxStepHeight;                                     // 0x208(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bKeepMeshInsideOfCapsule : 1;                      // Mask: 0x1, PropSize: 0x10x20C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPullPelvisDown : 1;                               // Mask: 0x2, PropSize: 0x10x20C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseCustomFloorOffset : 1;                         // Mask: 0x4, PropSize: 0x10x20C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseCapsuleInfoInsteadOfFootTraces : 1;            // Mask: 0x8, PropSize: 0x10x20C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bWasOnGround : 1;                                  // Mask: 0x10, PropSize: 0x10x20C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowDebug : 1;                                    // Mask: 0x20, PropSize: 0x10x20C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFloorSmoothingInitialized : 1;                    // Mask: 0x40, PropSize: 0x10x20C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_29F : 1;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3D07[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               ActorLocation;                                     // 0x210(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GravityDirCompSpace;                               // 0x21C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.SpeedWarpingFootDefinition
struct FSpeedWarpingFootDefinition
{
public:
	struct FBoneReference                        IKFootBone;                                        // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                        FKFootBone;                                        // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        NumBonesInLimb;                                    // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.SpeedWarpingFootData
struct FSpeedWarpingFootData
{
public:
	uint8                                        Pad_3D08[0x40];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xF0 (0x1B8 - 0xC8)
// ScriptStruct FortniteGame.FortAnimNode_SpeedWarping
struct FFortAnimNode_SpeedWarping : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                        Pad_3D09[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FBoneReference                        IKFootRootBone;                                    // 0xD0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FSpeedWarpingFootDefinition>   FeetDefinitions;                                   // 0xE0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSpeedWarpingFootData>         FeetData;                                          // 0xF0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FBoneReference                        PelvisBone;                                        // 0x100(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class ESpeedWarpingAxisMode             SpeedWarpingAxisMode;                              // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpeedWarpingAxisMode             FloorNormalAxisMode;                               // 0x111(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpeedWarpingAxisMode             GravityDirAxisMode;                                // 0x112(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D0A[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        SpeedScaling;                                      // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputScaleBiasClamp                  SpeedScalingScaleBiasClamp;                        // 0x118(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ManualSpeedWarpingDir;                             // 0x148(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ManualFloorNormalInput;                            // 0x154(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ManualGravityDirInput;                             // 0x160(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PelvisPostAdjustmentAlpha;                         // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PelvisAdjustmentMaxIter;                           // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator          PelvisAdjustmentInterp;                            // 0x174(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D0B[0x34];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        bAdjustThighBonesRotation : 1;                     // Mask: 0x1, PropSize: 0x10x1B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClampIKUsingFKLeg : 1;                            // Mask: 0x2, PropSize: 0x10x1B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOrientSpeedWarpingAxisBasedOnFloorNormal : 1;     // Mask: 0x4, PropSize: 0x10x1B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2A0 : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3D0C[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        CachedDeltaTime;                                   // 0x1B4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.EmoteRetargetingNotifyParameters
struct FEmoteRetargetingNotifyParameters
{
public:
	enum class EFortPlayerAnimBodyType           BodyTypeToAffect;                                  // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortHandIKOverrideType           LeftHandIK;                                        // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortHandIKOverrideType           RightHandIK;                                       // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.EmotePropMaterialScalarParam
struct FEmotePropMaterialScalarParam
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParamValue;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortAnimSetRandomAnimation
struct FFortAnimSetRandomAnimation
{
public:
	struct FGameplayTagQuery                     Requirements;                                      // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FRandomPlayerSequenceEntry            RandomEntry;                                       // 0x48(0x50)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortDirectionalAnimRef
struct FFortDirectionalAnimRef
{
public:
	class UAnimSequenceBase*                     NorthAnim;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     SouthAnimLeft;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     SouthAnimRight;                                    // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     EastAnim;                                          // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     WestAnim;                                          // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortCachedFloatCurve
struct FFortCachedFloatCurve
{
public:
	class FName                                  CurveName;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D0D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x0 (0xC - 0xC)
// ScriptStruct FortniteGame.FortDistanceCurve
struct FFortDistanceCurve : public FFortCachedFloatCurve
{
public:
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_Facial
struct FFortAnimInput_Facial
{
public:
	struct FLiveLinkSubjectName                  SubjectName;                                       // 0x0(0x8)(Edit, BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFacialAnimTypes              CurrentAnimType;                                   // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCurvesOnly;                                       // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D0E[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AntelopeVehicleBoostLevel
struct FAntelopeVehicleBoostLevel
{
public:
	float                                        AccumulationPercent;                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTime;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAppActivationSoundMixPair
struct FFortAppActivationSoundMixPair
{
public:
	class USoundMix*                             TrueMix;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                             FalseMix;                                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.LookAtSetting
struct FLookAtSetting
{
public:
	struct FScalableFloat                        LookAtDuration;                                    // 0x0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LookAtDurationDeviation;                           // 0x20(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LookAtDelay;                                       // 0x40(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LookAtDelayDeviation;                              // 0x60(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.LookAtDigestedSetting
struct FLookAtDigestedSetting
{
public:
	float                                        LookAtDuration;                                    // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtDurationDeviation;                           // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtDelay;                                       // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtDelayDeviation;                              // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.DigestedTrackingOffsetModifierCurves
struct FDigestedTrackingOffsetModifierCurves
{
public:
	int32                                        Values[0xA];                                       // 0x0(0x28)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.DigestedTrackingOffsetModifiers
struct FDigestedTrackingOffsetModifiers
{
public:
	float                                        CombatStartDuration;                               // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetLowHealthThreshold;                          // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDigestedTrackingOffsetModifierCurves Curves[0x3];                                       // 0x8(0x78)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.TrackingOffsetModifiers
struct FTrackingOffsetModifiers
{
public:
	struct FScalableFloat                        CombatStartDuration;                               // 0x0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        TargetLowHealthThreshold;                          // 0x20(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        Curves[0x3];                                       // 0x40(0x60)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.TrackingOffsetModifierInfo
struct FTrackingOffsetModifierInfo
{
public:
	struct FScalableFloat                        MinSkill;                                          // 0x0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        MaxSkill;                                          // 0x20(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTrackingOffsetModifiers              Modifiers;                                         // 0x40(0xA0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.DigestedWeaponAccuracy
struct FDigestedWeaponAccuracy
{
public:
	struct FScalableFloat                        TrackingOffsetError;                               // 0x0(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        TargetingTrackingOffsetError;                      // 0x20(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        TargetingActivationProbability;                    // 0x40(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        FiringRestrictedToTargetingActive;                 // 0x60(0x20)(Transient, NativeAccessSpecifierPrivate)
	float                                        IdealAttackRange;                                  // 0x80(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetingIdealAttackRange;                         // 0x84(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxAttackRange;                                    // 0x88(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D0F[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.DigestedWeaponAccuracyCategorySpecialization
struct FDigestedWeaponAccuracyCategorySpecialization
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedWeaponAccuracy               WeaponAccuracy;                                    // 0x20(0x90)(Transient, NativeAccessSpecifierPrivate)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.DigestedWeaponAccuracyCategory
struct FDigestedWeaponAccuracyCategory
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedWeaponAccuracy               WeaponAccuracy;                                    // 0x20(0x90)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FDigestedWeaponAccuracyCategorySpecialization> Specializations;                                   // 0xB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.WeaponAccuracy
struct FWeaponAccuracy
{
public:
	struct FScalableFloat                        MaxTrackingOffsetError;                            // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        TargetingMaxTrackingOffsetError;                   // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        TargetingActivationProbability;                    // 0x40(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        FiringRestrictedToTargetingActive;                 // 0x60(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        IdealAttackRange;                                  // 0x80(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        TargetingIdealAttackRange;                         // 0xA0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        MaxAttackRangeFactor;                              // 0xC0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x100 (0x100 - 0x0)
// ScriptStruct FortniteGame.WeaponAccuracyCategorySpecialization
struct FWeaponAccuracyCategorySpecialization
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FWeaponAccuracy                       WeaponAccuracy;                                    // 0x20(0xE0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x110 (0x110 - 0x0)
// ScriptStruct FortniteGame.WeaponAccuracyCategory
struct FWeaponAccuracyCategory
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FWeaponAccuracy                       WeaponAccuracy;                                    // 0x20(0xE0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FWeaponAccuracyCategorySpecialization> Specializations;                                   // 0x100(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BotPerceivedSound
struct FBotPerceivedSound
{
public:
	class AActor*                                SourceActor;                                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D10[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.BotDelayedStimulus
struct FBotDelayedStimulus
{
public:
	class AActor*                                SourceActor;                                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D11[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortBotInventoryInfo
struct FFortBotInventoryInfo
{
public:
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortWorldItem*                        FortItem;                                          // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D12[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.FortBotTargetInfo
struct FFortBotTargetInfo
{
public:
	class AActor*                                SourceActor;                                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SupportingActor;                                   // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D13[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class ABuildingActor*                        AlternateTargetingActor;                           // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D14[0x88];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortBotTargetHandler
struct FFortBotTargetHandler
{
public:
	uint8                                        Pad_3D15[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortBotTargetInfo>            Targets;                                           // 0x10(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortBotProjectileThreatInfo
struct FFortBotProjectileThreatInfo
{
public:
	class AFortProjectileBase*                   Projectile;                                        // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D16[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.DBNOSquadmateInfo
struct FDBNOSquadmateInfo
{
public:
	uint8                                        Pad_3D17[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerPawnAthena*                 Pawn;                                              // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortBotDigestedHealingItems
struct FFortBotDigestedHealingItems
{
public:
	float                                        UseItemResourceThreshold;                          // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D18[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 ItemTags;                                          // 0x8(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortBotHealingItems
struct FFortBotHealingItems
{
public:
	struct FScalableFloat                        UseItemResourceThreshold;                          // 0x0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 ItemTags;                                          // 0x20(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.WeaponAmmoCheat
struct FWeaponAmmoCheat
{
public:
	struct FGameplayTag                          WeaponTag;                                         // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        HasInfiniteAmmo;                                   // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        CheckLoadedAmmoForInfiniteAmmo;                    // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.DigestedBotEquipWeaponInfo
struct FDigestedBotEquipWeaponInfo
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x0(0x48)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        DistanceEffectivenessWithThreat;                   // 0x48(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        DistanceEffectivenessNoThreat;                     // 0x68(0x20)(Transient, NativeAccessSpecifierPrivate)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.BotEquipWeaponInfo
struct FBotEquipWeaponInfo
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        DistanceEffectivenessWithThreat;                   // 0x48(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        DistanceEffectivenessNoThreat;                     // 0x68(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortAthenaAIBotNameRegionData
struct FFortAthenaAIBotNameRegionData
{
public:
	class FString                                RegionId;                                          // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             NameDataTable;                                     // 0x10(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortAthenaAIBotNameDataTableRow
struct FFortAthenaAIBotNameDataTableRow : public FTableRowBase
{
public:
	class FString                                Name;                                              // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UniqueId;                                          // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.SoundPerceptionSetting
struct FSoundPerceptionSetting
{
public:
	struct FScalableFloat                        Loudness;                                          // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        IgnoreTime;                                        // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.PerceptionStateSettings
struct FPerceptionStateSettings
{
public:
	struct FScalableFloat                        ForgetTime;                                        // 0x0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ForgetTimeDeviation;                               // 0x20(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ForgetDistance;                                    // 0x40(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ForgetDistanceDeviation;                           // 0x60(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ThreatDistanceWeight;                              // 0x80(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.SoundPerceptionDigestedSetting
struct FSoundPerceptionDigestedSetting
{
public:
	float                                        Loudness;                                          // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IgnoreTime;                                        // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.DigestedPerceptionStateSettings
struct FDigestedPerceptionStateSettings
{
public:
	float                                        ForgetTime;                                        // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForgetTimeDeviation;                               // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForgetDistance;                                    // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForgetDistanceDeviation;                           // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D19[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AlertLevelInfo
struct FAlertLevelInfo
{
public:
	TArray<class UAISenseConfig*>                SensesConfig;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DigestedRangedWeaponSkill
struct FDigestedRangedWeaponSkill
{
public:
	float                                        DelayBetweenShots;                                 // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayDeviationTimeBetweenShots;                    // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TriggerHoldDuration;                               // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TriggerHoldDeviationTime;                          // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayBeforeFirstShot;                              // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ShotDelayAfterTargeting;                           // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.DigestedRangedWeaponSkillCategorySpecialization
struct FDigestedRangedWeaponSkillCategorySpecialization
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedRangedWeaponSkill            WeaponSkill;                                       // 0x20(0x18)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.DigestedRangedWeaponSkillCategory
struct FDigestedRangedWeaponSkillCategory
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedRangedWeaponSkill            WeaponSkill;                                       // 0x20(0x18)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FDigestedRangedWeaponSkillCategorySpecialization> Specializations;                                   // 0x38(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.RangedWeaponSkill
struct FRangedWeaponSkill
{
public:
	struct FScalableFloat                        DelayBetweenShots;                                 // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        DelayDeviationTimeBetweenShots;                    // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        TriggerHoldDuration;                               // 0x40(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        TriggerHoldDeviationTime;                          // 0x60(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        DelayBeforeFirstShot;                              // 0x80(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        ShotDelayAfterTargeting;                           // 0xA0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.RangedWeaponSkillCategorySpecialization
struct FRangedWeaponSkillCategorySpecialization
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkill                    WeaponSkill;                                       // 0x20(0xC0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct FortniteGame.RangedWeaponSkillCategory
struct FRangedWeaponSkillCategory
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkill                    WeaponSkill;                                       // 0x20(0xC0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FRangedWeaponSkillCategorySpecialization> Specializations;                                   // 0xE0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct FortniteGame.FortRechargingActionTimer
struct FFortRechargingActionTimer
{
public:
	uint8                                        Pad_3D1A[0xA8];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ChargeRate;                                        // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActiveExpenseRate;                                 // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassiveExpenseRate;                                // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinActiveDuration;                                 // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinActivationCharge;                               // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActiveCooldownTime;                                // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargeThreshold;                                   // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Charge;                                            // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsActive;                                         // 0xC8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCharging;                                       // 0xC9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPassive;                                        // 0xCA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D1B[0xD];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.AileronRoll
struct FAileronRoll
{
public:
	struct FFortRechargingActionTimer            Action;                                            // 0x0(0xD8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class EAileronRollDirection             Direction;                                         // 0xD8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D1C[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FlightControlSurfaces
struct FFlightControlSurfaces
{
public:
	float                                        RudderAngle;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AileronAngle;                                      // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElevatorAngle;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlapAngle;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.ReplicatedControlState
struct FReplicatedControlState
{
public:
	struct FVector_NetQuantizeNormal             Up;                                                // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             Forward;                                           // 0xC(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsEngineOn : 1;                                   // Mask: 0x1, PropSize: 0x10x18(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D1D[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.RotationLerpData
struct FRotationLerpData
{
public:
	struct FQuat                                 RotationLerp_Start;                                // 0x0(0x10)(IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FQuat                                 RotationLerp_End;                                  // 0x10(0x10)(IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FQuat                                 RotationLerp_Target;                               // 0x20(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TotalLerpTime;                                     // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D1E[0x1C];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.LocationLerpData
struct FLocationLerpData
{
public:
	struct FVector                               PositionLerp_Start;                                // 0x0(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PositionLerp_End;                                  // 0xC(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PositionLerp_Target;                               // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalLerpTime;                                     // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D1F[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x188 (0x188 - 0x0)
// ScriptStruct FortniteGame.ExitCraftInfo
struct FExitCraftInfo
{
public:
	struct FGameplayTag                          RequiredExitCraftTag;                              // 0x0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftSpawnerZOffset;                           // 0x8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftSpawnDelay;                               // 0x28(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnDestructionInitialDelay;                      // 0x48(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnDestructionDelayBetweenPieces;                // 0x68(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftZOffset;                                  // 0x88(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftTargetZOffset;                            // 0xA8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftTimeToHoverLocation;                      // 0xC8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitCraftTimeToHoverRotation;                      // 0xE8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinLandingSpeed;                                   // 0x108(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitZOffset;                                       // 0x128(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ExitTime;                                          // 0x148(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InteractionTime;                                   // 0x168(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AthenaLoadoutEntry
struct FAthenaLoadoutEntry
{
public:
	class UFortWorldItemDefinition*              ItemToGrant;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberOfItemsToGrant;                              // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	int32                                        DesiredSlot;                                       // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D20[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x150 (0x150 - 0x0)
// ScriptStruct FortniteGame.BuildingGameplayActorSpawnDetails
struct FBuildingGameplayActorSpawnDetails
{
public:
	TSubclassOf<class ABuildingGameplayActor>    BuildingGameplayActorClass;                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    TargetActorClass;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnHeight;                                       // 0x10(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GlobalMaxBGAs;                                     // 0x30(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinNumToSpawnPerPhase;                             // 0x50(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxNumToSpawnPerPhase;                             // 0x70(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinTimeToStartSpawnningBGAs;                       // 0x90(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxTimeToStartSpawnningBGAs;                       // 0xB0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinTimeBetweenBGASpawns;                           // 0xD0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxTimeBetweenBGASpawns;                           // 0xF0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinTimeToRepeatSpawningBGAs;                       // 0x110(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxTimeToRepeatSpawningBGAs;                       // 0x130(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.VehicleClassDetails
struct FVehicleClassDetails
{
public:
	TSoftClassPtr<class AActor>                  VehicleClass;                                      // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMinSpawnPercent;                            // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMaxSpawnPercent;                            // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x100 (0x100 - 0x0)
// ScriptStruct FortniteGame.FortRespawnLogicData
struct FFortRespawnLogicData
{
public:
	struct FScalableFloat                        DirectionDeviation;                                // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinDistFromCenterPercent;                          // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxDistFromCenterPercent;                          // 0x40(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SingleBusRespawnNearDeathLocation;                 // 0x60(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinHeightFromGround;                               // 0x80(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinHeightFromZero;                                 // 0xA0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CameraDistance;                                    // 0xC0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        RespawnTraceHeight;                                // 0xE0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x80 (0x180 - 0x100)
// ScriptStruct FortniteGame.FortRespawnLogicData_Teams
struct FFortRespawnLogicData_Teams : public FFortRespawnLogicData
{
public:
	struct FScalableFloat                        TryPlaceByTeammates;                               // 0x100(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AlsoPlaceBehindTeammates;                          // 0x120(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxDistanceFromTeammates;                          // 0x140(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinDistanceFromTeammates;                          // 0x160(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AshtonStoneState
struct FAshtonStoneState
{
public:
	enum class EAshtonStoneType                  StoneType;                                         // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAshtonStoneStateType             StoneState;                                        // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D21[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTag                          GameplayTag;                                       // 0x4(0x8)(Edit, DisableEditOnInstance, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnTime;                                         // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasEverSpawned;                                   // 0x10(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D22[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        SpawnDataIdx;                                      // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.AshtonStoneData
struct FAshtonStoneData
{
public:
	enum class EAshtonStoneType                  StoneType;                                         // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D23[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortWorldItemDefinition*              StoneItemDefinition;                               // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           StoneIconBrush;                                    // 0x10(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                             MapIconScale;                                      // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GameplayTag;                                       // 0xA0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PickupTag;                                         // 0xA8(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAshtonStoneStateType             InitialStoneState;                                 // 0xB0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D24[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortPieSliceSpawnData
struct FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SpawnDirection;                                    // 0x0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnDirectionDeviation;                           // 0x20(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpawnDistanceFromCenter;                        // 0x40(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpawnDistanceFromCenter;                        // 0x60(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0xC0 - 0x80)
// ScriptStruct FortniteGame.AshtonStoneSpawnData
struct FAshtonStoneSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SpawnDelay;                                        // 0x80(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnSafeZoneIndex;                                // 0xA0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.BagelLeaderboardQuery
struct FBagelLeaderboardQuery
{
public:
	struct FUniqueNetIdRepl                      RequestingId;                                      // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D25[0x60];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.BagelLeaderboardEntry
struct FBagelLeaderboardEntry
{
public:
	class FString                                DisplayName;                                       // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      UserNetId;                                         // 0x18(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSpecialEntry;                                   // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLocalPlayer;                                    // 0x41(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D26[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.BagelFriendsLeaderboard
struct FBagelFriendsLeaderboard
{
public:
	class FString                                Name;                                              // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBagelLeaderboardEntry>        LeaderBoard;                                       // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.BagelLootTierOverrideAssetData
struct FBagelLootTierOverrideAssetData
{
public:
	int32                                        SafeZoneIndex;                                     // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TieredGroup;                                       // 0x4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.BagelDifficultySettings
struct FBagelDifficultySettings
{
public:
	struct FScalableFloat                        SpawnCountPlayerCountMultiplier;                   // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnCountDifficultyMultiplier;                    // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AIEffectPlayerCountMultiplier;                     // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AIEffectDifficultyMultiplier;                      // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SpawnCountMultiplier;                              // 0x80(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AIEffectMultiplier;                                // 0x84(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.BagelScoreData
struct FBagelScoreData
{
public:
	TSubclassOf<class AActor>                    ActorClass;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 Tags;                                              // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExclusionTags;                                     // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ScoreValue;                                        // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ScoreText;                                         // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x74 (0x80 - 0xC)
// ScriptStruct FortniteGame.BagelPlayerDataEntry
struct FBagelPlayerDataEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3D27[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Scores[0xE];                                       // 0x18(0x38)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalScore;                                        // 0x50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        StreakScoreLevel;                                  // 0x54(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        StreakMultiplierCurrentKillCount;                  // 0x55(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D28[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LastAIKillTime;                                    // 0x58(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D29[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<float>                                AIKillTimes;                                       // 0x60(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPublic)
	struct FTimerHandle                          ResetStreakScoreMultiplierTimerHandle;             // 0x70(0x8)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalAIKillCount;                                  // 0x78(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D2A[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.BagelPlayerDataArray
struct FBagelPlayerDataArray : public FFastArraySerializer
{
public:
	TArray<struct FBagelPlayerDataEntry>         Entries;                                           // 0x108(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BagelScoreMultiplierInstanceData
struct FBagelScoreMultiplierInstanceData
{
public:
	class ABuildingActor*                        Actor;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialActorID;                                    // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BagelObjectiveAreaInstanceData
struct FBagelObjectiveAreaInstanceData
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D2B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                AreaActor;                                         // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialActorID;                                    // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBagelScoreMultiplierInstanceData> ScoreMultipliers;                                  // 0x20(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x1B8 (0x238 - 0x80)
// ScriptStruct FortniteGame.BagelScoreMultiplierSpawnData
struct FBagelScoreMultiplierSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        ScoreMultiplier;                                   // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnCount;                                        // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpawnTime;                                      // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpawnTime;                                      // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingActor>            ObjectClass;                                       // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorTag;                                   // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorMinimapIconBrush;                      // 0x110(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorMinimapIconScale;                      // 0x198(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorCompassIconBrush;                      // 0x1A0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorCompassIconScale;                      // 0x228(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDrawCompassIcon;                            // 0x230(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D2C[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x130 (0x130 - 0x0)
// ScriptStruct FortniteGame.BagelAreaSpecialActorData
struct FBagelAreaSpecialActorData
{
public:
	struct FGameplayTag                          SpecialActorTag;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorMinimapIconBrush;                      // 0x8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorMinimapIconScale;                      // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorCompassIconBrush;                      // 0x98(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorCompassIconScale;                      // 0x120(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDrawCompassIcon;                            // 0x128(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D2D[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemsToSpawn
struct FItemsToSpawn
{
public:
	class UFortWorldItemDefinition*              ItemToDrop;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberToDrop;                                      // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BarrierMountedTurretData
struct FBarrierMountedTurretData
{
public:
	TArray<class UMaterialInterface*>            MaterialOverrides;                                 // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    BaseMaterialOverride;                              // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BarrierHeadData
struct FBarrierHeadData
{
public:
	TArray<class UCustomCharacterPart*>          PartsToSwapIn;                                     // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.BarrierTeamState
struct FBarrierTeamState
{
public:
	uint8                                        TeamNum;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBarrierFoodTeam                  FoodTeam;                                          // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D2E[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AAthenaBarrierFlag*                    ObjectiveFlag;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAthenaBarrierObjective*               ObjectiveObject;                                   // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRespawnEnabled;                                   // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D2F[0xF];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.LimitedLifeDataEntry
struct FLimitedLifeDataEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3D30[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                BackingActor;                                      // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeamId;                                            // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D31[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Lives;                                             // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.LimitedLifeDataArray
struct FLimitedLifeDataArray : public FFastArraySerializer
{
public:
	TArray<struct FLimitedLifeDataEntry>         Entries;                                           // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.LimitedLifeByTeamData
struct FLimitedLifeByTeamData
{
public:
	bool                                         bUseTeamPooledLives;                               // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D32[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Lives;                                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.UpdateBotSkillInfo
struct FUpdateBotSkillInfo
{
public:
	uint8                                        Pad_3D33[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MMRSpawingInfo
struct FMMRSpawingInfo
{
public:
	uint8                                        Pad_3D34[0x18];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UBotELOSpawningInfo*>           ELOSpawningInfos;                                  // 0x18(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D35[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.OverrideTablePair
struct FOverrideTablePair
{
public:
	class FString                                ParentTablePath;                                   // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OverrideTablePath;                                 // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortOverrideDataTableRow
struct FFortOverrideDataTableRow : public FTableRowBase
{
public:
	class FString                                Name;                                              // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D36[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FOverrideTablePair>            OverrideTableList;                                 // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MMRSpawningDataTableInfo
struct FMMRSpawningDataTableInfo
{
public:
	float                                        Skill;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawingItemIndex;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.MMRPhaseSpawningDataTableInfo
struct FMMRPhaseSpawningDataTableInfo
{
public:
	int32                                        GamePhaseIndexToSpawn;                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D37[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMMRSpawningDataTableInfo>     SpawningItems;                                     // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.MMRSpawningBracketDataTableRow
struct FMMRSpawningBracketDataTableRow : public FTableRowBase
{
public:
	int32                                        MMRBracketLow;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MMRBracketHigh;                                    // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMMRPhaseSpawningDataTableInfo> PhaseSpawningItems;                                // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.CenterOnLocationPOI
struct FCenterOnLocationPOI
{
public:
	struct FScalableFloat                        Enabled;                                           // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        RelativeToPreviousChosenLocation;                  // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FVector                               LocationForPOI;                                    // 0x40(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D38[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FScalableFloat                        WithinRadius;                                      // 0x50(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.LocationPOIList
struct FLocationPOIList
{
public:
	struct FScalableFloat                        Enabled;                                           // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ChanceToApply;                                     // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FCenterOnLocationPOI>          List;                                              // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.CenterOnTaggedPOI
struct FCenterOnTaggedPOI
{
public:
	struct FScalableFloat                        Enabled;                                           // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TagForPOI;                                         // 0x20(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WithinRadius;                                      // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.TaggedPOIList
struct FTaggedPOIList
{
public:
	struct FScalableFloat                        Enabled;                                           // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ChanceToApply;                                     // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FCenterOnTaggedPOI>            List;                                              // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x158 (0x158 - 0x0)
// ScriptStruct FortniteGame.CrucibleWorkManager
struct FCrucibleWorkManager
{
public:
	uint8                                        Pad_3D39[0x158];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.CrucibleLeaderboardEntry
struct FCrucibleLeaderboardEntry
{
public:
	class FString                                DisplayName;                                       // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLocalPlayer;                                    // 0x18(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D3A[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      UserNetId;                                         // 0x20(0x28)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CrucibleLeaderboardData
struct FCrucibleLeaderboardData
{
public:
	enum class EFortCrucibleLeaderboardId        LeaderboardId;                                     // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCrucibleLeaderboardState     CurrentState;                                      // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D3B[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                LeaderboardName;                                   // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCrucibleLeaderboardEntry>     CurrentCompiledResults;                            // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bHasBeenRequestedByUser;                           // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasHadWorkQueued;                                 // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D3C[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        NumQueries;                                        // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.CrucibleParticipantData
struct FCrucibleParticipantData
{
public:
	TWeakObjectPtr<class AFortPlayerControllerAthena> AthenaPC;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D3D[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TMap<class FString, int64>                   LatestRetrievedRawStats;                           // 0x18(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D3E[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.CrucibleSegmentData
struct FCrucibleSegmentData
{
public:
	bool                                         bRegistered;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D3F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        NumAI;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumTargets;                                        // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissedTargetPenalty;                               // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCrucibleStatType             BackendStatType;                                   // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D40[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CrucibleCourseData
struct FCrucibleCourseData
{
public:
	TArray<struct FCrucibleSegmentData>          SegmentsData;                                      // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.CrucibleSegmentResults
struct FCrucibleSegmentResults
{
public:
	int32                                        SegmentId;                                         // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CalculatedScore;                                   // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CalculatedPenalty;                                 // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CalculatedMissedTargets;                           // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartTime;                                         // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinishTime;                                        // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelTime;                                        // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumAIElims;                                        // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumTargetElims;                                    // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CrucibleCourseResults
struct FCrucibleCourseResults
{
public:
	float                                        CalculatedScore;                                   // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CalculatedTotalPenalty;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CalculatedMissedTargets;                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CalculatedSpawnedTargets;                          // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCrucibleSegmentResults>       SegmentResults;                                    // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        StartTime;                                         // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinishTime;                                        // 0x24(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelTime;                                        // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInputMethodWasKBMAtAnyPoint;                      // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D41[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CrucibleStatValue
struct FCrucibleStatValue
{
public:
	float                                        BestTime;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D42[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int64                                        RawBestTime;                                       // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCrucibleStatSource           Source;                                            // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D43[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                BackendStatName;                                   // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDadbroPickupDespawnData
struct FFortDadbroPickupDespawnData
{
public:
	float                                        DespawnTime;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D44[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPickup*                           Pickup;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1D8 (0x1D8 - 0x0)
// ScriptStruct FortniteGame.FortAthenaMutator_SurvivalObjectiveData
struct FFortAthenaMutator_SurvivalObjectiveData
{
public:
	TSubclassOf<class ABuildingActor>            BuildingActorObjectiveClass;                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScalableFloat                        SpawnDistanceFromGround;                           // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        ActivationSafezoneIndex;                           // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bEndMatchOnDestroy : 1;                            // Mask: 0x1, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bSpawnOnPOI : 1;                                   // Mask: 0x2, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_2A1 : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	bool                                         bClearAreaOnSpawn;                                 // 0x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D45[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ClearAreaRadiusOverride;                           // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ClearAreaHalfHeightOverride;                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bIsSpecialActor : 1;                               // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_2A2 : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3D46[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagQuery                     POIFilterQuery;                                    // 0x40(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        RandomizedPOICount;                                // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D47[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<int32>                                ExtraSafezoneIndexes;                              // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class ABuildingActor*                        SpawnedBuildingActorObjective;                     // 0xA0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          SpecialActorTag;                                   // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           SpecialActorMinimapIconBrush;                      // 0xB0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FVector2D                             SpecialActorMinimapIconScale;                      // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           SpecialActorCompassIconBrush;                      // 0x140(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FVector2D                             SpecialActorCompassIconScale;                      // 0x1C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SpecialActorID;                                    // 0x1D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ControlPointInstanceData
struct FControlPointInstanceData
{
public:
	class AAthenaCapturePoint*                   ControlPoint;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EControlPointState                ControlPointState;                                 // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D48[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        SpawnDataIdx;                                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnTime;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnableTime;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisableTime;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        PrevOwningTeam;                                    // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D49[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortTeamInfoAthena*                   CachedOwningTeamInfo;                              // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointAccrualTime;                                  // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointsRemainder;                                   // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BonusPointAccrualTime;                             // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BonusPointsRemainder;                              // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedPointAccrualValue;                           // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CachedBonusPointAccrualValue;                      // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPointFinished;                                    // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D4A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        CachedSafeZonePhaseWhenToSpawn;                    // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreForOrderMessaging;                          // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysInPlay;                                     // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D4B[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        TimeOfShutdown;                                    // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x148 (0x1C8 - 0x80)
// ScriptStruct FortniteGame.ControlPointSpawnData
struct FControlPointSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SpawnDelayTime;                                    // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SafeZonePhaseWhenToSpawn;                          // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SafeZonePhaseWhereToSpawn;                         // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        EnableDelayTime;                                   // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        EnableInSafeZonePhase;                             // 0x100(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DisableDelayTime;                                  // 0x120(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DisableInSafeZonePhase;                            // 0x140(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PointsEarnedPerSecond;                             // 0x160(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BonusPointsEarnedPerSecond;                        // 0x180(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        bIgnoreForOrderMessaging;                          // 0x1A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        IconMaterialIndex;                                 // 0x1C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysInPlay;                                     // 0x1C4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D4C[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ControlPointAssetData
struct FControlPointAssetData
{
public:
	TSubclassOf<class AAthenaCapturePoint>       CapturePointClass;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnDistanceFromGround;                           // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                             MiniMapIconScale;                                  // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CompassIconScale;                                  // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.TargetDataEntry
struct FTargetDataEntry
{
public:
	TArray<class AAthenaBuildingFoundationObjective*> Targets;                                           // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FoundationTag;                                     // 0x10(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        HealthPercentRequiredToMoveOn;                     // 0x18(0x20)(Edit, NativeAccessSpecifierPublic)
	bool                                         bFindInStormCircle;                                // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D4D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<int32>                                StormCircleIndices;                                // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberOfFoundationsToFind;                         // 0x50(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.TeamSetupDataEntry
struct FTeamSetupDataEntry
{
public:
	uint8                                        TeamNum;                                           // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D4E[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UCustomCharacterPart*>          PartsToSwapIn;                                     // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.GunGameGunEntry
struct FGunGameGunEntry
{
public:
	class UFortWeaponItemDefinition*             Weapon;                                            // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Enabled;                                           // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AwardAtElim;                                       // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GunGameGunEntries
struct FGunGameGunEntries
{
public:
	TArray<struct FGunGameGunEntry>              Entries;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.GunGamePlayerData
struct FGunGamePlayerData
{
public:
	TArray<class UFortWeaponItemDefinition*>     CurrentlyAssignedWeapons;                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemsToGiveAtPhase
struct FItemsToGiveAtPhase
{
public:
	class UFortWorldItemDefinition*              ItemToDrop;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberToGive;                                      // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemsToGive
struct FItemsToGive
{
public:
	class UFortWorldItemDefinition*              ItemToDrop;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberToGive;                                      // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlaneLootEntry
struct FPlaneLootEntry
{
public:
	class FName                                  LootTableName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LootWeight;                                        // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.PlaneLootHeightEntry
struct FPlaneLootHeightEntry
{
public:
	struct FScalableFloat                        RelativeWeight;                                    // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinHeightOffGround;                                // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxHeightOffGround;                                // 0x40(0x20)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FPlaneLootEntry>               LootEntries;                                       // 0x60(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PlaneLootTypeEntry
struct FPlaneLootTypeEntry
{
public:
	struct FScalableFloat                        RelativeWeight;                                    // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FPlaneLootHeightEntry>         LootHeightEntries;                                 // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PlaneSpawnData
struct FPlaneSpawnData
{
public:
	uint8                                        Pad_3D4F[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x3C (0x48 - 0xC)
// ScriptStruct FortniteGame.PlaneSquadInfo
struct FPlaneSquadInfo : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3D50[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class AFortPlayerControllerAthena*>   Controllers;                                       // 0x10(0x10)(ZeroConstructor, RepSkip, NativeAccessSpecifierPublic)
	class AFortPlayerStateAthena*                LastDriver;                                        // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SquadId;                                           // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D51[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        PlanesRemaining;                                   // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LastCollectedChest;                                // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAthenaVehicle*                    LastCollectedChestVehicle;                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastCollectedChestServerTime;                      // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D52[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x130 - 0x108)
// ScriptStruct FortniteGame.PlaneSquadInfoArray
struct FPlaneSquadInfoArray : public FFastArraySerializer
{
public:
	TArray<struct FPlaneSquadInfo>               SquadData;                                         // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerControllerAthena*>   RemovedControllers;                                // 0x118(0x10)(ZeroConstructor, RepSkip, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D53[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.GravityMovementData
struct FGravityMovementData
{
public:
	float                                        GravityZScale;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleGravityZScale;                              // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpZVelocityOverride;                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpHorizontalAccelerationOverride;                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpHorizontalVelocityOverride;                    // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.HeistTeamHoldingJewelInfo
struct FHeistTeamHoldingJewelInfo
{
public:
	int32                                        JewelsHeld;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeStartedHoldingJewel;                           // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccumulatedTotalTime;                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.HeistPostMatchAnalyticsData
struct FHeistPostMatchAnalyticsData
{
public:
	int32                                        SupplyDropsOpenedPerMatch;                         // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        JewelsLostToStorm;                                 // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HeistDropsLostToStorm;                             // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        JewelsEquippedPerMatch;                            // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                TimeJewelHeldPerTeam;                              // 0x10(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                PlayersAlivePerEscape;                             // 0x20(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        NumSuccessfulEscapes;                              // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D54[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<uint8>                                WinningTeams;                                      // 0x38(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.HeistExitCraftData
struct FHeistExitCraftData
{
public:
	class AFortAthenaExitCraftSpawner*           ExitCraftSpawner;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAthenaExitCraft*                  SpawnedExitCraft;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHeistExitCraftState              ExitCraftState;                                    // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D55[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class AFortPlayerPawnAthena*>         DepartedPawns;                                     // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        SpawnTime;                                         // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUsed;                                           // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasDeparted;                                      // 0x2D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D56[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0xA0 - 0x80)
// ScriptStruct FortniteGame.HeistBlingDropSpawnData
struct FHeistBlingDropSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SafeZonePhaseWhereToSpawn;                         // 0x80(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x60 (0xE0 - 0x80)
// ScriptStruct FortniteGame.HeistExitCraftSpawnData
struct FHeistExitCraftSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        SpawnDelayTime;                                    // 0x80(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SafeZonePhaseWhenToSpawn;                          // 0xA0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SafeZonePhaseWhereToSpawn;                         // 0xC0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.ItemLoadoutTeamMap
struct FItemLoadoutTeamMap
{
public:
	uint8                                        TeamIndex;                                         // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LoadoutIndex;                                      // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaInventorySpawnOverride     UpdateOverrideType;                                // 0x2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaLootDropOverride           DropAllItemsOverride;                              // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ItemLoadoutContainer
struct FItemLoadoutContainer
{
public:
	TArray<struct FItemAndCount>                 Loadout;                                           // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemsToDropOnDeath
struct FItemsToDropOnDeath
{
public:
	class UFortWorldItemDefinition*              ItemToDrop;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberToDrop;                                      // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.PlayerLoudoutEntry
struct FPlayerLoudoutEntry
{
public:
	class UFortWorldItemDefinition*              ItemToGrant;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        NumberOfItemsToGrant;                              // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        RemoveItemOnNextSwap;                              // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        RandomWeight;                                      // 0x48(0x20)(Edit, NativeAccessSpecifierPublic)
	int32                                        DesiredSlot;                                       // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D57[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RandomItemEntries
struct FRandomItemEntries
{
public:
	TArray<struct FPlayerLoudoutEntry>           WeightedEntries;                                   // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PlayerLoadout
struct FPlayerLoadout
{
public:
	TArray<struct FPlayerLoudoutEntry>           AlwaysGrantedLoadoutItems;                         // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRandomItemEntries>            RandomlyGrantedLoadoutItems;                       // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LoadoutDuration;                                   // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CustomLootOverrideData
struct FCustomLootOverrideData
{
public:
	enum class ECustomLootSelection              CustomLootType;                                    // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D58[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UDataTable*                            LootTierData;                                      // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            LootPackages;                                      // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ExperimentalLootTierData;                          // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ExperimentalLootPackages;                          // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.MashLeaderboardQuery
struct FMashLeaderboardQuery
{
public:
	struct FUniqueNetIdRepl                      RequestingId;                                      // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D59[0x60];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.MashLeaderboardEntry
struct FMashLeaderboardEntry
{
public:
	class FString                                DisplayName;                                       // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      UserNetId;                                         // 0x18(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSpecialEntry;                                   // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLocalPlayer;                                    // 0x41(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D5A[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.MashFriendsLeaderboard
struct FMashFriendsLeaderboard
{
public:
	class FString                                Name;                                              // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMashLeaderboardEntry>         LeaderBoard;                                       // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MashLootTierOverrideAssetData
struct FMashLootTierOverrideAssetData
{
public:
	int32                                        SafeZoneIndex;                                     // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TieredGroup;                                       // 0x4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.MashDifficultySettings
struct FMashDifficultySettings
{
public:
	struct FScalableFloat                        SpawnCountPlayerCountMultiplier;                   // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnCountDifficultyMultiplier;                    // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AIEffectPlayerCountMultiplier;                     // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AIEffectDifficultyMultiplier;                      // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SpawnCountMultiplier;                              // 0x80(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AIEffectMultiplier;                                // 0x84(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.RiftDamagerInfo
struct FRiftDamagerInfo
{
public:
	class ABuildingRift*                         Rift;                                              // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AController*>                   Damagers;                                          // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.MashScoreData
struct FMashScoreData
{
public:
	TSubclassOf<class AActor>                    ActorClass;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 Tags;                                              // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExclusionTags;                                     // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ScoreValue;                                        // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ScoreText;                                         // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x74 (0x80 - 0xC)
// ScriptStruct FortniteGame.MashPlayerDataEntry
struct FMashPlayerDataEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3D5B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Scores[0xE];                                       // 0x18(0x38)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalScore;                                        // 0x50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        StreakScoreLevel;                                  // 0x54(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        StreakMultiplierCurrentKillCount;                  // 0x55(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D5C[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LastAIKillTime;                                    // 0x58(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<float>                                AIKillTimes;                                       // 0x60(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPublic)
	struct FTimerHandle                          ResetStreakScoreMultiplierTimerHandle;             // 0x70(0x8)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalAIKillCount;                                  // 0x78(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D5E[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.MashPlayerDataArray
struct FMashPlayerDataArray : public FFastArraySerializer
{
public:
	TArray<struct FMashPlayerDataEntry>          Entries;                                           // 0x108(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MashScoreMultiplierInstanceData
struct FMashScoreMultiplierInstanceData
{
public:
	class ABuildingActor*                        Actor;                                             // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialActorID;                                    // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MashObjectiveAreaInstanceData
struct FMashObjectiveAreaInstanceData
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D5F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                AreaActor;                                         // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialActorID;                                    // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMashScoreMultiplierInstanceData> ScoreMultipliers;                                  // 0x20(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x1B8 (0x238 - 0x80)
// ScriptStruct FortniteGame.MashScoreMultiplierSpawnData
struct FMashScoreMultiplierSpawnData : public FFortPieSliceSpawnData
{
public:
	struct FScalableFloat                        ScoreMultiplier;                                   // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnCount;                                        // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpawnTime;                                      // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpawnTime;                                      // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingActor>            ObjectClass;                                       // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpecialActorTag;                                   // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorMinimapIconBrush;                      // 0x110(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorMinimapIconScale;                      // 0x198(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorCompassIconBrush;                      // 0x1A0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorCompassIconScale;                      // 0x228(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDrawCompassIcon;                            // 0x230(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D60[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x130 (0x130 - 0x0)
// ScriptStruct FortniteGame.MashAreaSpecialActorData
struct FMashAreaSpecialActorData
{
public:
	struct FGameplayTag                          SpecialActorTag;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorMinimapIconBrush;                      // 0x8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorMinimapIconScale;                      // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SpecialActorCompassIconBrush;                      // 0x98(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SpecialActorCompassIconScale;                      // 0x120(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDrawCompassIcon;                            // 0x128(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D61[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OmahaCharacterVariantInfoData
struct FOmahaCharacterVariantInfoData
{
public:
	TArray<struct FMcpVariantChannelInfo>        VariantChannelInfo;                                // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.BonePlayerDamageMultiplier
struct FBonePlayerDamageMultiplier
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DamageMultiplier;                                  // 0x8(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.MutatorPlayerSettingsData
struct FMutatorPlayerSettingsData
{
public:
	class UFortPlayerSettingsComponentBase*      ScopeSettings;                                     // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D62[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1C (0x28 - 0xC)
// ScriptStruct FortniteGame.PowPlayerDataEntry
struct FPowPlayerDataEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3D63[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentMaxShield;                                  // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentShield;                                     // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAthenaMutator_Pow*                PowMutator;                                        // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.PowPlayerDataArray
struct FPowPlayerDataArray : public FFastArraySerializer
{
public:
	class AFortAthenaMutator_Pow*                OwningMutator;                                     // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPowPlayerDataEntry>           Entries;                                           // 0x110(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.HotfixableBlacklistLiteralLocations
struct FHotfixableBlacklistLiteralLocations
{
public:
	struct FVector2D                             Position;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.SkyCapTargetData
struct FSkyCapTargetData
{
public:
	float                                        TargetHeight;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveTime;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.SkyCapPositionData
struct FSkyCapPositionData
{
public:
	struct FScalableFloat                        MoveTime;                                          // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Height;                                            // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaitTime;                                          // 0x40(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SpawningInfo
struct FSpawningInfo
{
public:
	uint8                                        Pad_3D64[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortAthenaMutator_SpawningPolicyData* ItemSpawnData;                                     // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ObjectiveSpecialActorContainer
struct FObjectiveSpecialActorContainer
{
public:
	class AActor*                                TheSpawnedObjective;                               // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D65[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSpecialEventGEData
struct FFortSpecialEventGEData
{
public:
	TSubclassOf<class UGameplayEffect>           GameplayEffect;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D66[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSpecialEventOverrideParts
struct FFortSpecialEventOverrideParts
{
public:
	TArray<class UCustomCharacterPart*>          OverrideParts;                                     // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortSpecialEventGEData               GameplayEffectToApplyOnSwap;                       // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSpecialEventEmoteData
struct FFortSpecialEventEmoteData
{
public:
	TArray<class FName>                          BoundActions;                                      // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UAthenaDanceItemDefinition*>    Emotes;                                            // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortDelayRTMMData
struct FFortDelayRTMMData
{
public:
	bool                                         bDelayRTTM;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D67[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MinRTTMDelay;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRTTMDelay;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortItemDeliverySupplyDropMutatorData
struct FFortItemDeliverySupplyDropMutatorData
{
public:
	bool                                         bShouldApplyMutator;                               // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D68[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FScalableFloat                        NumDeliveryItemsToSpawn;                           // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UEnvQuery*                             SupplyDropPlacementQuery;                          // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSupplyDropMutatorData
struct FFortSupplyDropMutatorData
{
public:
	class FName                                  SupplyDropID;                                      // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldCenterGroundCheckAtFoundLocation;           // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D69[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortItemDeliverySupplyDropMutatorData> ItemDeliveryMutatorPerSafeZonePhase;               // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TagVisualsData
struct FTagVisualsData
{
public:
	TSubclassOf<class UGameplayEffect>           GE_Glow;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GlowTag;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapColor;                                      // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0x18 - 0xC)
// ScriptStruct FortniteGame.TagTeamInfoEntry
struct FTagTeamInfoEntry : public FFastArraySerializerItem
{
public:
	uint8                                        TeamNum;                                           // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D6A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        PlayerCount;                                       // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousPlayerCount;                               // 0x14(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.TagTeamInfoArray
struct FTagTeamInfoArray : public FFastArraySerializer
{
public:
	TArray<struct FTagTeamInfoEntry>             Entries;                                           // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PartSwapData
struct FPartSwapData
{
public:
	TArray<class UCustomCharacterPart*>          PartsToSwapIn;                                     // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TimeOfDaySpeed
struct FTimeOfDaySpeed
{
public:
	float                                        Speed;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D6B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  DisplayName;                                       // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayPhase
struct FTimeOfDayPhase
{
public:
	float                                        Time;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D6C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  DisplayName;                                       // 0x8(0x18)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.WaxPartOverrideData
struct FWaxPartOverrideData
{
public:
	enum class EFortCustomGender                 Gender;                                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D6D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UCustomCharacterPart*>          PartsToSwapIn;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UCustomCharacterPart*>          DefaultParts;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.WaxNoStormZone
struct FWaxNoStormZone
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D6E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FScalableFloat                        Radius;                                            // 0x10(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x200 (0x200 - 0x0)
// ScriptStruct FortniteGame.WaxRespawnLogicData
struct FWaxRespawnLogicData
{
public:
	struct FFortRespawnLogicData                 BaseRespawnData;                                   // 0x0(0x100)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TryPlaceByTeammates;                               // 0x100(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AlsoPlaceBehindTeammates;                          // 0x120(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxDistanceFromTeammates;                          // 0x140(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinDistanceFromTeammates;                          // 0x160(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TryPlaceAwayFromLeaders;                           // 0x180(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        OnlyCountLeadersAboveWaxState;                     // 0x1A0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        UseDirectionFromTeam;                              // 0x1C0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnBehindTeammateBias;                           // 0x1E0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x3C (0x48 - 0xC)
// ScriptStruct FortniteGame.WaxPlayerDataEntry
struct FWaxPlayerDataEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3D6F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPermanentlyWaxed;                                 // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerWasLeader;                                  // 0x19(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D70[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        TokenBasedPlacement;                               // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentTokens;                                     // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousTokens;                                    // 0x24(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentTeamTokens;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousTeamTokens;                                // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentKills;                                      // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousKills;                                     // 0x34(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentLives;                                      // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PreviousVictimLocation;                            // 0x3C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.WaxPlayerDataArray
struct FWaxPlayerDataArray : public FFastArraySerializer
{
public:
	class AFortAthenaMutator_Wax*                OwningMutator;                                     // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWaxPlayerDataEntry>           Entries;                                           // 0x110(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x170 (0x170 - 0x0)
// ScriptStruct FortniteGame.WaxVisibilityModifiers
struct FWaxVisibilityModifiers
{
public:
	struct FScalableFloat                        UI_VisibilityMode;                                 // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           CompassIndicator;                                  // 0x20(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MinimapIndicator;                                  // 0xA8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   TemporarilyGrantedEffects;                         // 0x130(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   PermanentlyGrantedEffects;                         // 0x140(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DistanceConsideredCloseForUI;                      // 0x150(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAthenaTutorial_ShootTargetInfo
struct FFortAthenaTutorial_ShootTargetInfo
{
public:
	class AActor*                                ShootTargetMarker;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingProp*                         ShootTarget;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D71[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAthenaTutorial_AiTargetInfo
struct FFortAthenaTutorial_AiTargetInfo
{
public:
	class AActor*                                TargetMarker;                                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIPawn*                           TargetActor;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D72[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAthenaTutorial_TargetInfo
struct FFortAthenaTutorial_TargetInfo
{
public:
	class AActor*                                TargetMarker;                                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingProp*                         TargetActor;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D73[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.IgnoredPawn
struct FIgnoredPawn
{
public:
	class AFortPawn*                             Pawn;                                              // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D74[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x160 (0x160 - 0x0)
// ScriptStruct FortniteGame.VehicleSpringInfo
struct FVehicleSpringInfo
{
public:
	class FName                                  SpringStart;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpringStartLocalOffset;                            // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ForceApplicationPoint;                             // 0x14(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringLength;                                      // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringStiff;                                       // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringDamp;                                        // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringRadius;                                      // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAccelChange;                                    // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         SeatSocketIndex;                                   // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsLookAhead : 1;                                  // Mask: 0x1, PropSize: 0x10x31(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNormalToGroundTriangle : 1;                       // Mask: 0x2, PropSize: 0x10x31(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAlongSpringNormal : 1;                       // Mask: 0x4, PropSize: 0x10x31(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2A3 : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3D75[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LookAheadMinSpeed;                                 // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAheadMaxSpeed;                                 // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAheadMinStiff;                                 // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookAheadMaxStiff;                                 // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D76[0x11C];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VehicleImpactBucket
struct FVehicleImpactBucket
{
public:
	uint8                                        Pad_3D77[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SMVehicleGear
struct FSMVehicleGear
{
public:
	float                                        TopSpeed;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeed;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushForce;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RampTime;                                          // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteeringAngleMultiplier;                           // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAutoBrake : 1;                                    // Mask: 0x1, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreGravity : 1;                                // Mask: 0x2, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D78[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.VehicleTargetOrientation
struct FVehicleTargetOrientation
{
public:
	struct FVector                               UpVector;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ForwardVector;                                     // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.ReplicatedAthenaVehicleAttributes
struct FReplicatedAthenaVehicleAttributes
{
public:
	float                                        FrontLateralFrictionScale;                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RearLateralFrictionScale;                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakeForceTractionScale;                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForwardForceTractionScale;                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeAntigravityScale;                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TopSpeedScale;                                     // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleGravityScale;                               // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SpringGroundTriangle
struct FSpringGroundTriangle
{
public:
	class FName                                  Socket0;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Socket1;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Socket2;                                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PotentiallyDestroyedBuilding
struct FPotentiallyDestroyedBuilding
{
public:
	class ABuildingActor*                        BuildingActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeSinceCollision;                                // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D79[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.FortAthenaVehicleInputState
struct FFortAthenaVehicleInputState
{
public:
	float                                        ForwardAlpha;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightAlpha;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAlpha;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookUpDelta;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnDelta;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlpha;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityOffset;                                     // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MovementDir;                                       // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask: 0x1, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumping : 1;                                    // Mask: 0x2, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask: 0x4, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsHonking : 1;                                    // Mask: 0x8, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreForwardInAir : 1;                           // Mask: 0x10, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier0 : 1;                            // Mask: 0x20, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier1 : 1;                            // Mask: 0x40, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier2 : 1;                            // Mask: 0x80, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D7A[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAthenaVehicleInputStateUnreliable
struct FFortAthenaVehicleInputStateUnreliable
{
public:
	float                                        ForwardAlpha;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightAlpha;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAlpha;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookUpDelta;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnDelta;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerAlpha;                                        // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityOffset;                                     // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                MovementDir;                                       // 0x1C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortAthenaVehicleInputStateReliable
struct FFortAthenaVehicleInputStateReliable
{
public:
	uint8                                        bIsSprinting : 1;                                  // Mask: 0x1, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumping : 1;                                    // Mask: 0x2, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBraking : 1;                                    // Mask: 0x4, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsHonking : 1;                                    // Mask: 0x8, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreForwardInAir : 1;                           // Mask: 0x10, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier0 : 1;                            // Mask: 0x20, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier1 : 1;                            // Mask: 0x40, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMovementModifier2 : 1;                            // Mask: 0x80, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.VehicleBounceState
struct FVehicleBounceState
{
public:
	enum class EBounceCompressionState           CompressionState;                                  // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D7B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        CompressionValue;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StateCooldown;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.ReplicatedAthenaVehicleState
struct FReplicatedAthenaVehicleState
{
public:
	struct FVector                               ForwardVectorTarget;                               // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.AttachedInfo
struct FAttachedInfo
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0x88)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                AttachedToActor;                                   // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 AttachOffset;                                      // 0x90(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             VelocityNormalized;                                // 0x9C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NarrowPlacementAgainstVelocityThreshold;           // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StickyOffsetFromPhysicsMesh;                       // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StickyOffsetFromBoneCenter;                        // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D7C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.MyFortCategoryData
struct FMyFortCategoryData
{
public:
	class FText                                  CategoryName;                                      // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TooltipTag;                                        // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ModifiedTagContainer;                              // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsCore;                                           // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D7D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FGameplayAttribute>            Attributes;                                        // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x380 (0x380 - 0x0)
// ScriptStruct FortniteGame.FortAttributeDetailsInfo
struct FFortAttributeDetailsInfo
{
public:
	struct FGameplayTagContainer                 RequiredTags;                                      // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   Icon;                                              // 0x20(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x350(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x368(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortAttributeInfo
struct FFortAttributeInfo
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAttributeDisplay             DisplayMethod;                                     // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D7E[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  UnitDisplayName;                                   // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        DisplayScalingFactor;                              // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D7F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  FormatText;                                        // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortAttributeDetailsInfo>     AttributeDetails;                                  // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bShowInSummaries;                                  // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInDifferences;                                // 0x71(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAsBuffInFE;                                   // 0x72(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNegativeValuesShouldBeDisplayedPositively;        // 0x73(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D80[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x28 - 0x10)
// ScriptStruct FortniteGame.FortGameplayAttributeData
struct FFortGameplayAttributeData : public FGameplayAttributeData
{
public:
	float                                        Minimum;                                           // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Maximum;                                           // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCurrentClamped;                                 // 0x18(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBaseClamped;                                    // 0x19(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldClampBase;                                  // 0x1A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D81[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        UnclampedBaseValue;                                // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnclampedCurrentValue;                             // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D82[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ChannelData
struct FChannelData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMagnitude;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0xC(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.FortBadgeCount
struct FFortBadgeCount : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3D83[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortBadgeItemDefinition*              Badge;                                             // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D84[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.FortBadgeCountArray
struct FFortBadgeCountArray : public FFastArraySerializer
{
public:
	TArray<struct FFortBadgeCount>               Badges;                                            // 0x108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortBadgeScoringData
struct FFortBadgeScoringData : public FTableRowBase
{
public:
	int32                                        ScoreAwarded;                                      // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionPoints;                                     // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatCategory                     ScoreCategory;                                     // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D85[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        ScoreThreshold;                                    // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AnimTagProperty
struct FAnimTagProperty
{
public:
	struct FGameplayTag                          BackingGameplayTag;                                // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProperty*                             PropertyToEdit;                                    // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PropertyName;                                      // 0x10(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAnalyticsEventAttribute
struct FFortAnalyticsEventAttribute
{
public:
	uint8                                        Pad_3D86[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct FortniteGame.FortBotCosmeticItemSetDataTableRow
struct FFortBotCosmeticItemSetDataTableRow : public FTableRowBase
{
public:
	struct FPrimaryAssetId                       CharacterAssetId;                                  // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       GliderAssetId;                                     // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       SkyDiveContrailAssetId;                            // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       BackpackAssetId;                                   // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       PickaxeAssetId;                                    // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D87[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortBotCosmeticItemDataTableRow
struct FFortBotCosmeticItemDataTableRow : public FTableRowBase
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D88[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortBotItemDataTableRow
struct FFortBotItemDataTableRow : public FTableRowBase
{
public:
	struct FGameplayTag                          Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSupported;                                      // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D89[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortBotReservedLoot
struct FFortBotReservedLoot
{
public:
	uint32                                       LootId;                                            // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D8A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortAthenaAIBotController*            Owner;                                             // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortBotTeamInfoAthena
struct FFortBotTeamInfoAthena
{
public:
	TArray<struct FFortBotReservedLoot>          ReservedLoots;                                     // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortBroadcastInfoPerPlayer
struct FFortBroadcastInfoPerPlayer
{
public:
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortInventory*                        PlayerInventory;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortBroadcastRemoteClientInfo*        PlayerClientInfo;                                  // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortBuildingSoundsPerAffiliation
struct FFortBuildingSoundsPerAffiliation
{
public:
	class USoundBase*                            SoundFriendly;                                     // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundEnemy;                                        // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x120 (0x120 - 0x0)
// ScriptStruct FortniteGame.FortBuildingSoundsPerResourceType
struct FFortBuildingSoundsPerResourceType
{
public:
	struct FFortBuildingSoundsPerAffiliation     OnConstruction[0x6];                               // 0x0(0x60)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortBuildingSoundsPerAffiliation     OnGenericDestruction[0x6];                         // 0x60(0x60)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortBuildingSoundsPerAffiliation     OnPlayerBuiltDestruction[0x6];                     // 0xC0(0x60)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortActorRecord
struct FFortActorRecord
{
public:
	struct FGuid                                 ActorGuid;                                         // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingPersistentState      ActorState;                                        // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D8B[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class ABuildingActor>            ActorClass;                                        // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            ActorTransform;                                    // 0x20(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bSpawnedActor;                                     // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D8C[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<uint8>                                ActorData;                                         // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D8D[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortBuildingInstruction
struct FFortBuildingInstruction
{
public:
	struct FFortActorRecord                      ActorRecord;                                       // 0x0(0x70)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.RecipeDataTableRowHandleQuantityData
struct FRecipeDataTableRowHandleQuantityData
{
public:
	struct FDataTableRowHandle                   DataTableRowHandle;                                // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ConvertRemainderUp;                                // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D8E[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x188 (0x190 - 0x8)
// ScriptStruct FortniteGame.FortCalendarEventInventoryTransformData
struct FFortCalendarEventInventoryTransformData : public FTableRowBase
{
public:
	class FName                                  CalendarChannelName;                               // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CalendarEventName;                                 // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AllowedProfileTypes;                               // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PrerequisiteHomebaseProperties;                    // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortQuestItemDefinition> PrerequisiteQuest;                                 // 0x48(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   PrerequisiteObjective;                             // 0x70(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortQuestItemDefinition>> PrerequisiteIncompleteOrUngrantedQuests;           // 0x80(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> PrerequisiteUnownedItems;                          // 0x90(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortQuestItemDefinition>> QuestsOnlyActiveDuringEvent;                       // 0xA0(0x10)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         ItemsToGrant;                                      // 0xB0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FFortHiddenRewardQuantityPair> ItemsToGrantByTemplate;                            // 0xC0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRecipeDataTableRowHandleQuantityData> ConversionRecipesToRunOnEventStart;                // 0xD0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRecipeDataTableRowHandleQuantityData> ConversionRecipesToRunAfterEvent;                  // 0xE0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>         ItemsToRemoveAfterEvent;                           // 0xF0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FFortHiddenRewardQuantityPair> ItemsToRemoveAfterEventByTemplate;                 // 0x100(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortPersistentResourceItemDefinition> EventCurrency;                                     // 0x110(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EventCurrencyConversionFactor;                     // 0x138(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D8F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TMap<class FString, class FString>           MetaData;                                          // 0x140(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RecipeData
struct FRecipeData
{
public:
	uint8                                        Pad_3D90[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortUICameraFrameTargetBounds
struct FFortUICameraFrameTargetBounds
{
public:
	struct FVector                               Origin;                                            // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CylinderHalfHeight;                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CylinderRadius;                                    // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortUICameraFrameTargetSettings
struct FFortUICameraFrameTargetSettings
{
public:
	struct FVector                               FocusPointToCenter;                                // 0x0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortUICameraFrameTargetBoundingBehavior BoundingBehavior;                                  // 0xC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D91[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortUICameraFrameTargetBounds        BoundsToFrame;                                     // 0x10(0x14)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              FocusObjectRotation;                               // 0x24(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.InterpOffsetData
struct FInterpOffsetData
{
public:
	struct FVector                               ViewOffset;                                        // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LargeBodyTypeAddtnlOffset;                         // 0xC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAngle;                                        // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.InterpOffset
struct FInterpOffset
{
public:
	TArray<struct FInterpOffsetData>             SamplePoints;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FilledGadgetSlot
struct FFilledGadgetSlot
{
public:
	class FString                                Gadget;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Slot_index;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D92[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortCrewSlotInformation
struct FFortCrewSlotInformation
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  SlotName;                                          // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SlotTags;                                          // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SlotStatContribution;                              // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D93[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CarriedObjectAttachmentInfo
struct FCarriedObjectAttachmentInfo
{
public:
	class AActor*                                AttachParent;                                      // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RelativeTranslation;                               // 0x10(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRotation;                                  // 0x1C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct FortniteGame.FortCurrencyData
struct FFortCurrencyData : public FTableRowBase
{
public:
	class FString                                TemplateName;                                      // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxStackSize;                                      // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxNumStacks;                                      // 0x1C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ProfileType;                                       // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                Platform;                                          // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPrivate;                                          // 0x40(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D94[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.FortProceduralCatalogCostPriceFactor
struct FFortProceduralCatalogCostPriceFactor : public FTableRowBase
{
public:
	float                                        PriceFactor;                                       // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D95[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleSpecialOffer
struct FFortChallengeBundleSpecialOffer
{
public:
	class FString                                Storefront;                                        // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  RichText;                                          // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterial>              OfferImage;                                        // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleRewards
struct FFortChallengeBundleRewards
{
public:
	int32                                        CompletionCount;                                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBundlePrestige;                                   // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D96[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FAthenaRewardItemReference>    Rewards;                                           // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleQuestEntry
struct FFortChallengeBundleQuestEntry
{
public:
	TSoftObjectPtr<class UFortQuestItemDefinition> QuestDefinition;                                   // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EChallengeBundleQuestUnlockType   QuestUnlockType;                                   // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D97[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        UnlockValue;                                       // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FChallengeGiftBoxData                 RewardGiftBox;                                     // 0x30(0x38)(Edit, NativeAccessSpecifierPublic)
	struct FFortItemQuantityPair                 MenuOverrideRewardPreview;                         // 0x68(0x14)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D98[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleLevelReward
struct FFortChallengeBundleLevelReward
{
public:
	struct FAthenaRewardItemReference            RewardItem;                                        // 0x0(0x80)(Edit, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	int32                                        NumObjectivesNeeded;                               // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D99[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleLevel
struct FFortChallengeBundleLevel
{
public:
	TArray<struct FFortChallengeBundleLevelReward> BundleLevelRewardEntries;                          // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.GlyphRewardInfo
struct FGlyphRewardInfo : public FTableRowBase
{
public:
	class UFortChallengeBundleItemDefinition*    BundleDef;                                         // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              QuestDef;                                          // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ObjectivePartialCompletionData
struct FObjectivePartialCompletionData
{
public:
	class FString                                ObjectiveName;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CompletionCount;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D9A[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ChallengePartialCompletionData
struct FChallengePartialCompletionData
{
public:
	class FString                                QuestTemplateId;                                   // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FObjectivePartialCompletionData> ObjectivData;                                      // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleScheduleEntry
struct FFortChallengeBundleScheduleEntry
{
public:
	TSoftObjectPtr<class UFortChallengeBundleItemDefinition> ChallengeBundle;                                   // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EChallengeScheduleUnlockType      UnlockType;                                        // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D9B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        UnlockValue;                                       // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.FortChallengeSetStyle
struct FFortChallengeSetStyle
{
public:
	struct FLinearColor                          PrimaryColor;                                      // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SecondaryColor;                                    // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AccentColor;                                       // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Context_LimitedTimeColor;                          // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Context_BaseColor;                                 // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                DisplayImage;                                      // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                CustomBackground;                                  // 0x78(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.OstrichWeapon_RetainedData
struct FOstrichWeapon_RetainedData
{
public:
	int32                                        LoadedShotgunAmmo;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RocketsCooldownElapsed;                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPrevious;                                      // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D9C[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.CharmPreviewEntry
struct FCharmPreviewEntry
{
public:
	TSoftObjectPtr<class UObject>                PreviewObject;                                     // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D9D[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            PreviewTransform;                                  // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bPreviewUsingVehicleShader : 1;                    // Mask: 0x1, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D9E[0xF];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.CharmSlotMetadata
struct FCharmSlotMetadata
{
public:
	enum class EFortCustomPartType               AttachToPart;                                      // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponCharm;                                       // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BackPresentedCharm;                                // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D9F[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  AttachSocket;                                      // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DA0[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagQuery                     MatchCriteria;                                     // 0x10(0x48)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FCharmPreviewEntry>            PreviewList;                                       // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SpawnPickupEntry
struct FSpawnPickupEntry
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    PickupClass;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortClientAnnouncementData_Conversation
struct FFortClientAnnouncementData_Conversation : public FFortClientAnnouncementData
{
public:
	class UFortConversation*                     Conversation;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAnnouncementDisplayPreference ConversationDisplayPreference;                     // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DA1[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ActionTextPair
struct FActionTextPair
{
public:
	class FName                                  Action;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x10 (0xF8 - 0xE8)
// ScriptStruct FortniteGame.FortClientAnnouncementData_Keybinding
struct FFortClientAnnouncementData_Keybinding : public FFortClientAnnouncementData_Basic
{
public:
	TArray<struct FActionTextPair>               GamapadActionTextList;                             // 0xE8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortClientAnnouncementData_ZoneModifiers
struct FFortClientAnnouncementData_ZoneModifiers : public FFortClientAnnouncementData
{
public:
	TArray<class UFortGameplayModifierItemDefinition*> Modifiers;                                         // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortClientAnnouncementQueue
struct FFortClientAnnouncementQueue
{
public:
	TArray<class AFortClientAnnouncement*>       Announcements;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.ClientBotBuildStep
struct FClientBotBuildStep
{
public:
	uint8                                        Pad_3DA2[0x40];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.MovementTestDefinition
struct FMovementTestDefinition
{
public:
	float                                        ForwardMoveStrength;                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SideMoveStrength;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DA3[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                TestName;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ConsumableTestDefinition
struct FConsumableTestDefinition
{
public:
	uint8                                        Pad_3DA4[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortClientPilotConsumableTestDefinition
struct FFortClientPilotConsumableTestDefinition
{
public:
	uint8                                        Pad_3DA5[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortClientPilotMovementTestDefinition
struct FFortClientPilotMovementTestDefinition
{
public:
	float                                        ForwardMoveStrength;                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SideMoveStrength;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                TestName;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.ClientPilotBuildStep
struct FClientPilotBuildStep
{
public:
	uint8                                        Pad_3DA7[0x40];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortActionKeyMapping
struct FFortActionKeyMapping
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInputActionGroup             ActionGroup;                                       // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubGame                          SubGameUsedIn;                                     // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DA8[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  LocalizedCategory;                                 // 0x10(0x18)(NativeAccessSpecifierPublic)
	class FText                                  LocalizedName;                                     // 0x28(0x18)(NativeAccessSpecifierPublic)
	struct FKey                                  KeyBind1;                                          // 0x40(0x18)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                  KeyBind2;                                          // 0x58(0x18)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputScale;                                        // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAxisMapping;                                    // 0x74(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DA9[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.UserActionBindings
struct FUserActionBindings
{
public:
	TArray<struct FFortActionKeyMapping>         UserActionBindings;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookDirectPurchaseData
struct FFortCollectionBookDirectPurchaseData : public FTableRowBase
{
public:
	TArray<struct FFortItemQuantityPair>         PurchaseCosts;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PurchaseCatalysts;                                 // 0x18(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookStat
struct FFortCollectionBookStat
{
public:
	int32                                        MaxBookXpLevelAchieved;                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookPageCategoryTableRow
struct FFortCollectionBookPageCategoryTableRow : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        SortPriority;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DAA[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x70 (0x78 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookPageData
struct FFortCollectionBookPageData : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, EditConst, NativeAccessSpecifierPublic)
	class FName                                  CategoryId;                                        // 0x20(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortPriority;                                      // 0x28(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ProfileId;                                         // 0x2C(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DAB[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FName>                          SectionRowNames;                                   // 0x38(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FFortRewardInfo                       Rewards;                                           // 0x48(0x30)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookSectionData
struct FFortCollectionBookSectionData : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<class FName>                          SlotRowNames;                                      // 0x20(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FFortRewardInfo                       Rewards;                                           // 0x30(0x30)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookSlotSourceData
struct FFortCollectionBookSlotSourceData : public FTableRowBase
{
public:
	class FText                                  Description;                                       // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookSlotXPWeightData
struct FFortCollectionBookSlotXPWeightData : public FTableRowBase
{
public:
	float                                        ConstantWeight;                                    // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RarityWeight;                                      // 0xC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PremiumTierWeight;                                 // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemLevelWeight;                                   // 0x14(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemRatingWeight;                                  // 0x18(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DAC[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookSectionState
struct FFortCollectionBookSectionState
{
public:
	class FString                                Section;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCollectionBookState          State;                                             // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DAD[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x48 - 0x8)
// ScriptStruct FortniteGame.FortCollectionBookXPData
struct FFortCollectionBookXPData : public FTableRowBase
{
public:
	int32                                        XpToNextLevel;                                     // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalXpToGetToThisLevel;                           // 0xC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRewardInfo                       Rewards;                                           // 0x10(0x30)(Edit, EditConst, NativeAccessSpecifierPublic)
	bool                                         bIsMajorReward;                                    // 0x40(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoOpenRewardCardPacks;                          // 0x41(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DAE[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortCollisionAudioTriggerData
struct FFortCollisionAudioTriggerData
{
public:
	class USoundBase*                            Asset;                                             // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ImpulseMagnitudeRange;                             // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImpulseMagnitudeLowerBound;                       // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImpulseMagnitudeUpperBound;                       // 0x11(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DAF[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector2D                             VolumeRange;                                       // 0x14(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PitchRange;                                        // 0x1C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRetriggerTime;                                  // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTriggerDistance;                                // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB0[0x14];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x68 - 0x8)
// ScriptStruct FortniteGame.FortSurfaceDamageRatioStats
struct FFortSurfaceDamageRatioStats : public FTableRowBase
{
public:
	class FName                                  Default;                                           // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Wood;                                              // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Stone;                                             // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Metal;                                             // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HumanEntity;                                       // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  AIEntity;                                          // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Explosive;                                         // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WeakSpot;                                          // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  Objective;                                         // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WeakSpot_Wood;                                     // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WeakSpot_Stone;                                    // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WeakSpot_Metal;                                    // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortSurfaceDamageRatioByAffiliationStats
struct FFortSurfaceDamageRatioByAffiliationStats : public FTableRowBase
{
public:
	float                                        Friendly;                                          // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Neutral;                                           // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Hostile;                                           // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DB1[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDamageSource
struct FFortDamageSource
{
public:
	TWeakObjectPtr<class AController>            InstigatorController;                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 DamageCauser;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortCombatManagerEvent
struct FFortCombatManagerEvent
{
public:
	float                                        EventValue;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCombatEvents                 Event;                                             // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB2[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortActiveMontageDecisionWindow
struct FFortActiveMontageDecisionWindow
{
public:
	class UFortAnimNotifyState_AbilityDecisionWindow* DecisionWindow;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                     DecisionAnimation;                                 // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReceivedPrimaryInput;                             // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReceivedSecondaryInput;                           // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlreadyProcessedInput;                            // 0x12(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB3[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortMontageInputAction
struct FFortMontageInputAction
{
public:
	struct FGameplayTag                          TriggerAbilityTag;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextSection;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMontageInputType             InputType;                                         // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB4[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PatternBASEEffect
struct FPatternBASEEffect
{
public:
	class UBuildingEditModeMetadata*             Pattern;                                           // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           Mesh;                                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.BASEGameplayEffect
struct FBASEGameplayEffect
{
public:
	TSubclassOf<class UGameplayEffect>           Effect;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelOverride;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB5[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.ConsumeEffectData
struct FConsumeEffectData
{
public:
	TSoftClassPtr<class UGameplayEffect>         EffectClass;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Level;                                             // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortContentEncryptionCollection
struct FFortContentEncryptionCollection
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB6[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FCollectionReference                  Collection;                                        // 0x4(0x8)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortContentEncryptionCollectionGrouping Grouping;                                          // 0xC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortContentEncryptionAllowedReferences AllowedReferences;                                 // 0x10(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortEncryptionKey
struct FFortEncryptionKey
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 Guid;                                              // 0x8(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                Bytes;                                             // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortEncryptionStatus             Status;                                            // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB7[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortKeyChain
struct FFortKeyChain
{
public:
	uint32                                       Hash;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB8[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortEncryptionKey>            Keys;                                              // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.DirectiveInput
struct FDirectiveInput
{
public:
	enum class ECommonInputType                  Input;                                             // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB9[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  Text;                                              // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
	TArray<class FText>                          ABTestingTexts;                                    // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.HUDElementToHighlight
struct FHUDElementToHighlight
{
public:
	struct FGameplayTagContainer                 HUDElementToHighlight;                             // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 HUDSubElementToHighlight;                          // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ComponentWidgetPairings
struct FComponentWidgetPairings
{
public:
	enum class EPlaylistUIExtensionSlot          Slot;                                              // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DBA[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class UUserWidget>               Class;                                             // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.InspectorScreenshotContext
struct FInspectorScreenshotContext
{
public:
	float                                        DelaySeconds;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FOVAngle;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       ResX;                                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       ResY;                                              // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       SampleMultiplier;                                  // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DBB[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ResponseUri;                                       // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DBC[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x1C - 0xC)
// ScriptStruct FortniteGame.PoiDiscoverabilityDataEntry
struct FPoiDiscoverabilityDataEntry : public FFastArraySerializerItem
{
public:
	struct FGameplayTag                          PoiTag;                                            // 0xC(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDiscovered;                                       // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasInitiallyDiscovered;                           // 0x15(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        VisitCounter;                                      // 0x16(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3DBD[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.PoiDiscoverabilityDataArray
struct FPoiDiscoverabilityDataArray : public FFastArraySerializer
{
public:
	TArray<struct FPoiDiscoverabilityDataEntry>  Entries;                                           // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortControllerComponent_MapDiscoverability* Owner;                                             // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortChangeMonitoringStruct
struct FFortChangeMonitoringStruct
{
public:
	bool                                         bAnyValueDirty;                                    // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x1F (0x20 - 0x1)
// ScriptStruct FortniteGame.SkydiveFeedbackData
struct FSkydiveFeedbackData : public FFortChangeMonitoringStruct
{
public:
	uint8                                        Pad_3DBE[0x1F];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PlayerFishingTelemetryData
struct FPlayerFishingTelemetryData
{
public:
	float                                        TimeFishingSessionBegan;                           // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortPickup>            Item;                                              // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 ItemUsedToFish;                                    // 0xC(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFromFishingPool;                                  // 0x14(0x1)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DBF[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortBotTeleportInfo
struct FFortBotTeleportInfo
{
public:
	bool                                         bTeleportSuccess;                                  // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC0[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               TeleportFrom;                                      // 0x4(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationFrom;                                      // 0x10(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               TeleportTo;                                        // 0x1C(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationTo;                                        // 0x28(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class ETeleportReason                   TeleportReason;                                    // 0x34(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC1[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                BTNodeNameCausingTeleportation;                    // 0x38(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortItemsConsumedInfo
struct FFortItemsConsumedInfo
{
public:
	class UFortWeaponItemDefinition*             WeaponData;                                        // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0x8(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Health;                                            // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Shield;                                            // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemQuantity;                                      // 0x1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortRevivedInfo
struct FFortRevivedInfo
{
public:
	struct FVector                               RevivedLocation;                                   // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ReviverUniqueID;                                   // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ReviverTeam;                                       // 0x20(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC3[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackHandle
struct FFortFeedbackHandle
{
public:
	class UFortFeedbackBank*                     FeedbackBank;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReadOnly;                                         // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBankDefined;                                      // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackBroadcastFilter      BroadcastFilterOverride;                           // 0x12(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC4[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortSentenceAudio
struct FFortSentenceAudio
{
public:
	TSoftObjectPtr<class USoundBase>             Audio;                                             // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortFeedbackHandle                   Handle;                                            // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct FortniteGame.FortConversationSentence
struct FFortConversationSentence
{
public:
	struct FFortSentenceAudio                    SpeechAudio;                                       // 0x0(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  SpeechText;                                        // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             TalkingHeadTexture;                                // 0x58(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  TalkingHeadTitle;                                  // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           AnimMontage;                                       // 0x98(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostSentenceDelay;                                 // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisplayDuration;                                   // 0xC4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortConversionTierData
struct FFortConversionTierData
{
public:
	int32                                        TierCost;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredItemQuantity;                              // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x90 - 0x8)
// ScriptStruct FortniteGame.FortConversionControlKeyCosts
struct FFortConversionControlKeyCosts : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFortItemDefinition>    RequiredItem;                                      // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Common;                                            // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Uncommon;                                          // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Rare;                                              // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Epic;                                              // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Legendary;                                         // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Mythic;                                            // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Transcendent;                                      // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortConversionTierData               Unattainable;                                      // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 RequiredCatalysts;                                 // 0x70(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.BaseVariantDef
struct FBaseVariantDef
{
public:
	uint8                                        Pad_3DC5[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         bStartUnlocked;                                    // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDefault;                                        // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideIfNotOwned;                                   // 0xA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC6[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTag                          CustomizationVariantTag;                           // 0xC(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  VariantName;                                       // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             PreviewImage;                                      // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UnlockRequirements;                                // 0x58(0x18)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAccountItemDefinition> UnlockingItemDef;                                  // 0x70(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x0 (0x98 - 0x98)
// ScriptStruct FortniteGame.GameplayTagVariantDef
struct FGameplayTagVariantDef : public FBaseVariantDef
{
public:
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.CosmeticFilterTagDataRow
struct FCosmeticFilterTagDataRow : public FTableRowBase
{
public:
	TArray<class FText>                          SearchQueries;                                     // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct FortniteGame.CosmeticMarkupTagDataRow
struct FCosmeticMarkupTagDataRow : public FTableRowBase
{
public:
	struct FGameplayTag                          Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HelpText;                                          // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct FortniteGame.CosmeticSetDataRow
struct FCosmeticSetDataRow : public FTableRowBase
{
public:
	struct FGameplayTag                          Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DisplayManagerVariantData
struct FDisplayManagerVariantData
{
public:
	class UAthenaCosmeticItemDefinition*         CosmeticItemDef;                                   // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMcpVariantChannelInfo>        CosmeticVariantChannels;                           // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.CosmeticLoadoutPartyReplState
struct FCosmeticLoadoutPartyReplState
{
public:
	class FString                                BackpackPersistentName;                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerIconId;                                      // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassLevel;                                   // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassSelfBoostXp;                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePassFriendBoostXp;                           // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC8[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDisplayManagerVariantData            AthenaCharacterVariantInfo;                        // 0x40(0x18)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticLockerSlots
struct FFortCosmeticLockerSlots
{
public:
	TArray<class FString>                        Items;                                             // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortCosmeticLockerSlotData
struct FFortCosmeticLockerSlotData
{
public:
	TMap<enum class EAthenaCustomizationCategory, struct FFortCosmeticLockerSlots> Slots;                                             // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortCosmeticLockerSlotInformation
struct FFortCosmeticLockerSlotInformation
{
public:
	enum class EAthenaCustomizationCategory      CustomizationCategory;                             // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC9[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        NumSlotsOfCategory;                                // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeBlank;                                       // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMustBeUniqueInArray;                              // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DCA[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0xA8 - 0x98)
// ScriptStruct FortniteGame.DynamicVariantDef
struct FDynamicVariantDef : public FBaseVariantDef
{
public:
	TArray<class UVariantTypeBase*>              DynamicVariants;                                   // 0x98(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PartyVariantRep
struct FPartyVariantRep
{
public:
	enum class EFortItemType                     Item;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DCB[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Channel;                                           // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Variant;                                           // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.McpVariantWriter
struct FMcpVariantWriter
{
public:
	struct FGameplayTag                          VariantChannel;                                    // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ActiveVariant;                                     // 0x8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CustomActiveVariant;                               // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 UnlockedVariants;                                  // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	class FString                                CustomUnlockedVariants;                            // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.MaterialVariants
struct FMaterialVariants
{
public:
	TSoftObjectPtr<class UMaterialInterface>     MaterialToSwap;                                    // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentToOverride;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CascadeMaterialName;                               // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialOverrideIndex;                             // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DCC[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UMaterialInterface>     OverrideMaterial;                                  // 0x40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.VariantParticleSystemInitializerData
struct FVariantParticleSystemInitializerData
{
public:
	class FName                                  ParticleComponentName;                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>         ParticleSystem;                                    // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          MeshToBindTO;                                      // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachSocketName;                                  // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentRule                   LocationRule;                                      // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentRule                   RotationRule;                                      // 0x61(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAttachmentRule                   ScaleRule;                                         // 0x62(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeldSimulatedBodies;                              // 0x63(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DCD[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.MaterialParamName
struct FMaterialParamName
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.MaterialVectorVariant
struct FMaterialVectorVariant : public FMaterialParamName
{
public:
	struct FLinearColor                          Value;                                             // 0x8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0xC - 0x8)
// ScriptStruct FortniteGame.MaterialFloatVariant
struct FMaterialFloatVariant : public FMaterialParamName
{
public:
	float                                        Value;                                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0x14 - 0x8)
// ScriptStruct FortniteGame.VectorParamVariant
struct FVectorParamVariant : public FMaterialParamName
{
public:
	struct FVector                               Value;                                             // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.ParticleParamterVariant
struct FParticleParamterVariant
{
public:
	TSoftObjectPtr<class UFXSystemAsset>         ParticleSystemToAlter;                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialVectorVariant>        ColorParams;                                       // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVectorParamVariant>           VectorParams;                                      // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialFloatVariant>         FloatParams;                                       // 0x48(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.MaterialTextureVariant
struct FMaterialTextureVariant : public FMaterialParamName
{
public:
	TSoftObjectPtr<class UTexture>               Value;                                             // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.MaterialParamterDef
struct FMaterialParamterDef
{
public:
	TSoftObjectPtr<class UMaterialInterface>     MaterialToAlter;                                   // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CascadeMaterialName;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMaterialVectorVariant>        ColorParams;                                       // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialTextureVariant>       TextureParams;                                     // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialFloatVariant>         FloatParams;                                       // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.CosmeticMetaTagContainer
struct FCosmeticMetaTagContainer
{
public:
	struct FGameplayTagContainer                 MetaTagsToApply;                                   // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 MetaTagsToRemove;                                  // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.ParticleVariant
struct FParticleVariant
{
public:
	TSoftObjectPtr<class UFXSystemAsset>         ParticleSystemToAlter;                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentToOverride;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>         OverrideParticleSystem;                            // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SocketTransformVariant
struct FSocketTransformVariant
{
public:
	class FName                                  SourceSocketName;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OverridSocketName;                                 // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          SourceObjectToModify;                              // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0x148 - 0x98)
// ScriptStruct FortniteGame.PartVariantDef
struct FPartVariantDef : public FBaseVariantDef
{
public:
	TArray<TSoftObjectPtr<class UCustomCharacterPart>> VariantParts;                                      // 0x98(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FMaterialVariants>             VariantMaterials;                                  // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParamterDef>          VariantMaterialParams;                             // 0xB8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVariantParticleSystemInitializerData> InitalParticelSystemData;                          // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleVariant>              VariantParticles;                                  // 0xD8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleParamterVariant>      VariantParticleParams;                             // 0xE8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSocketTransformVariant>       SocketTransforms;                                  // 0xF8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCosmeticMetaTagContainer             MetaTags;                                          // 0x108(0x40)(Edit, NativeAccessSpecifierPublic)
};

// 0x30 (0x178 - 0x148)
// ScriptStruct FortniteGame.LoadoutVariantDef
struct FLoadoutVariantDef : public FPartVariantDef
{
public:
	TSoftObjectPtr<class UAthenaCosmeticItemDefinition> LoadoutItem;                                       // 0x148(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bItemExpectedInLoadout;                            // 0x170(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DCE[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x90 (0x128 - 0x98)
// ScriptStruct FortniteGame.ParticlVariantDef
struct FParticlVariantDef : public FBaseVariantDef
{
public:
	TArray<struct FMaterialVariants>             VariantMaterials;                                  // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParamterDef>          VariantMaterialParams;                             // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVariantParticleSystemInitializerData> InitalParticelSystemData;                          // 0xB8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleVariant>              VariantParticles;                                  // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleParamterVariant>      VariantParticleParams;                             // 0xD8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCosmeticMetaTagContainer             MetaTags;                                          // 0xE8(0x40)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0xA8 - 0x98)
// ScriptStruct FortniteGame.SocketVariantDef
struct FSocketVariantDef : public FBaseVariantDef
{
public:
	TArray<struct FSocketTransformVariant>       SocketTransforms;                                  // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0xF8 - 0x98)
// ScriptStruct FortniteGame.MaterialVariantDef
struct FMaterialVariantDef : public FBaseVariantDef
{
public:
	TArray<struct FMaterialVariants>             VariantMaterials;                                  // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParamterDef>          VariantMaterialParams;                             // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCosmeticMetaTagContainer             MetaTags;                                          // 0xB8(0x40)(Edit, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.MeshVariant
struct FMeshVariant
{
public:
	TSoftObjectPtr<class USkeletalMesh>          MeshToSwap;                                        // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentToOverride;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>          OverrideMesh;                                      // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.SoundVariant
struct FSoundVariant
{
public:
	TSoftObjectPtr<class USoundBase>             SoundToSwap;                                       // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ComponentToOverride;                               // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundBase>             OverrideSound;                                     // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0x158 - 0x98)
// ScriptStruct FortniteGame.MeshVariantDef
struct FMeshVariantDef : public FBaseVariantDef
{
public:
	TArray<struct FMeshVariant>                  VariantMeshes;                                     // 0x98(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialVariants>             VariantMaterials;                                  // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMaterialParamterDef>          VariantMaterialParams;                             // 0xB8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVariantParticleSystemInitializerData> InitialParticleSystemData;                         // 0xC8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleVariant>              VariantParticles;                                  // 0xD8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FParticleParamterVariant>      VariantParticleParams;                             // 0xE8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSocketTransformVariant>       SocketTransforms;                                  // 0xF8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSoundVariant>                 VariantSounds;                                     // 0x108(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCosmeticMetaTagContainer             MetaTags;                                          // 0x118(0x40)(Edit, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.CosmeticMetaTagStack
struct FCosmeticMetaTagStack
{
public:
	struct FGameplayTagContainer                 CurrentState;                                      // 0x0(0x20)(NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.CreativeAssetMetaData
struct FCreativeAssetMetaData
{
public:
	class FString                                StringObjectPtr;                                   // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DCF[0x28];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        AssetSize;                                         // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DD0[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CreativeActorMetaData
struct FCreativeActorMetaData
{
public:
	int32                                        AssetSize;                                         // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstanceSize;                                      // 0x4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SimulationCost;                                    // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DrawCall;                                          // 0xC(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AudioCost;                                         // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NetworkCost;                                       // 0x14(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCreativeAssetMetaData>        AssetDependencies;                                 // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortCreativeAssetCostData
struct FFortCreativeAssetCostData
{
public:
	TMap<class FString, struct FCreativeActorMetaData> MetaDataMap;                                       // 0x0(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudget
struct FFortCreativeBudget
{
public:
	int32                                        TotalBudget;                                       // 0x0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UsedBudget;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBudgetCategory               Category;                                          // 0x8(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCritical;                                         // 0x9(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocationBased;                                    // 0xA(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DD1[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        BudgetHighend;                                     // 0xC(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BudgetLowend;                                      // 0x10(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FixedInstanceCost;                                 // 0x14(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetPlotBudgetOverride
struct FFortCreativeBudgetPlotBudgetOverride
{
public:
	TSoftObjectPtr<class UFortCreativeRealEstatePlotItemDefinition> PlotItemDefinitionClass;                           // 0x0(0x28)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortCreativeBudget>           Budgets;                                           // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetComponentSimulationCost
struct FFortCreativeBudgetComponentSimulationCost
{
public:
	TSoftClassPtr<class UActorComponent>         ComponentClass;                                    // 0x0(0x28)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SimulationCost;                                    // 0x28(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DD2[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetClassInstanceLimit
struct FFortCreativeBudgetClassInstanceLimit
{
public:
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x0(0x28)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumberOfInstances;                              // 0x28(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DD3[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetOverride
struct FFortCreativeBudgetOverride
{
public:
	class FString                                ActorClass;                                        // 0x0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AssetCost;                                         // 0x10(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AssetCostMultiplier;                               // 0x14(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InstanceCost;                                      // 0x18(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InstanceCostMultiplier;                            // 0x1C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SimulationCost;                                    // 0x20(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DrawCall;                                          // 0x24(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AudioCost;                                         // 0x28(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NetworkCost;                                       // 0x2C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortCreativeClassInstanceTracker
struct FFortCreativeClassInstanceTracker
{
public:
	uint8                                        Pad_3DD4[0x50];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UClass*>                        ChildClassesAtLimit;                               // 0x50(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                        ParentClassesAtLimit;                              // 0x60(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.FortCreativeBudgetTracker
struct FFortCreativeBudgetTracker
{
public:
	uint8                                        Pad_3DD5[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortCreativeBudget>           Budgets;                                           // 0x10(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3DD6[0x50];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<TSoftClassPtr<class AActor>>          AssetInstances;                                    // 0x70(0x10)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FFortCreativeClassInstanceTracker     ClassTracker;                                      // 0x80(0x70)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3DD7[0x50];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.CreativeItemGranterItemEntry
struct FCreativeItemGranterItemEntry
{
public:
	TSoftObjectPtr<class UFortWorldItemDefinition> ItemDefinition;                                    // 0x0(0x28)(Edit, BlueprintVisible, DisableEditOnTemplate, SaveGame, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.MoveToolSettings
struct FMoveToolSettings
{
public:
	bool                                         bAllowGravityOnPlace;                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsScalingInsteadOfRotating;                       // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ActorAndTimePair
struct FActorAndTimePair
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             SpawnTime;                                         // 0x8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AgingActorArray
struct FAgingActorArray
{
public:
	TArray<struct FActorAndTimePair>             AgingActors;                                       // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.CreativeSelectedActorInfo
struct FCreativeSelectedActorInfo
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DD8[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            ActorToSelectionAtDragStart;                       // 0x10(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               DragStartGridSnapPoint;                            // 0x40(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OriginalRelevancyDistance;                         // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasCollisionEnabled;                              // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasDormant;                                       // 0x51(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DD9[0xE];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FlashCountedActorInfo
struct FFlashCountedActorInfo
{
public:
	TArray<struct FCreativeSelectedActorInfo>    Actors;                                            // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int8                                         FlashCounter;                                      // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DDA[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OriginalAndSpawnedPair
struct FOriginalAndSpawnedPair
{
public:
	class AActor*                                OriginalActor;                                     // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedActor;                                      // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CreativePooledMID
struct FCreativePooledMID
{
public:
	class UMaterialInstanceDynamic*              Mid;                                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    OriginalMaterial;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.CreativeToolClasses
struct FCreativeToolClasses : public FTableRowBase
{
public:
	TSoftClassPtr<class UObject>                 ClassPath;                                         // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.CreativeToolObjectInteractionRow
struct FCreativeToolObjectInteractionRow : public FTableRowBase
{
public:
	class UDataTable*                            AllowedClasses;                                    // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ForbiddenClasses;                                  // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.CreativeOptionCategoryData
struct FCreativeOptionCategoryData
{
public:
	class FText                                  CategoryDisplayName;                               // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  CategoryTag;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.CreativeOptionData
struct FCreativeOptionData
{
public:
	class FText                                  DisplayText;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DDB[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCreativeWhitelistUserEntry
struct FFortCreativeWhitelistUserEntry
{
public:
	class FString                                UniqueId;                                          // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UserName;                                          // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCreativePlotPermissionData
struct FFortCreativePlotPermissionData
{
public:
	enum class EFortCreativePlotPermission       Permission;                                        // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DDC[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        WhiteList;                                         // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ActiveRealEstatePlotInfo
struct FActiveRealEstatePlotInfo
{
public:
	class UFortCreativeRealEstatePlotItemDefinition* Plot;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DDD[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCreativeTagsHelper
struct FFortCreativeTagsHelper
{
public:
	TArray<class FName>                          CreativeTags;                                      // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.FortCreativeTagCategory
struct FFortCreativeTagCategory : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x20(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SortPriority;                                      // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DDE[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct FortniteGame.FortCreativeTag
struct FFortCreativeTag : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FName                                  Category;                                          // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SortPriority;                                      // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DDF[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.TeleporterGroup
struct FTeleporterGroup
{
public:
	TSet<class AFortCreativeTeleporter*>         Teleporters;                                       // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.TimerObjectiveHUDData
struct FTimerObjectiveHUDData
{
public:
	float                                        TimeLeft;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPaused;                                         // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DE0[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortCustomizationAssetsToLoad
struct FFortCustomizationAssetsToLoad
{
public:
	TArray<class UFortHeroType*>                 HeroTypes;                                         // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UCustomCharacterPart*>          CharacterParts;                                    // 0x10(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           ItemDefs;                                          // 0x20(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>               VariantAssets;                                     // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.SavedCustomMatchOptions
struct FSavedCustomMatchOptions
{
public:
	TMap<class FString, class FString>           CustomMatchOptions;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortDailyRewardScheduleDisplayData
struct FFortDailyRewardScheduleDisplayData
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  ItemDescription;                                   // 0x30(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  EpicItemDescription;                               // 0x48(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.FortDailyRewardScheduleDefinition
struct FFortDailyRewardScheduleDefinition
{
public:
	class FName                                  ScheduleName;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortDailyRewardScheduleTokenDefinition> EnablingToken;                                     // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            Rewards;                                           // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortDailyRewardScheduleDisplayData   DisplayData;                                       // 0x38(0x60)(Edit, NativeAccessSpecifierPublic)
	struct FDateTime                             BeginDate;                                         // 0x98(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             EndDate;                                           // 0xA0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortDailyLoginRewardStat_ScheduleClaimed
struct FFortDailyLoginRewardStat_ScheduleClaimed
{
public:
	int32                                        RewardsClaimed;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ClaimedToday;                                      // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DE1[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortDailyLoginRewardStat
struct FFortDailyLoginRewardStat
{
public:
	int32                                        NextDefaultReward;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalDaysLoggedIn;                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             LastClaimDate;                                     // 0x8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FFortDailyLoginRewardStat_ScheduleClaimed> AdditionalSchedules;                               // 0x10(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortDailyRewardsNotification
struct FFortDailyRewardsNotification
{
public:
	int32                                        DaysLoggedIn;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DE2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMcpLootEntry>                 Items;                                             // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortDamageNumberColorInfo
struct FFortDamageNumberColorInfo
{
public:
	class FString                                DisplayText;                                       // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          CriticalColor;                                     // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 Tags;                                              // 0x30(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.LiveDamageNumberComponent
struct FLiveDamageNumberComponent
{
public:
	class UStaticMeshComponent*                  Component;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DE3[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PooledDamageNumberComponents
struct FPooledDamageNumberComponents
{
public:
	TArray<class UStaticMeshComponent*>          Components;                                        // 0x0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortDeathCauseInfoVariant
struct FFortDeathCauseInfoVariant
{
public:
	class FString                                DisplayText;                                       // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DeathCauseTag;                                     // 0x10(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          SelfInflictedMessages;                             // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          SelfInflictedDBNOMessages;                         // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          EliminatedMessages;                                // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          EliminatedDBNOMessages;                            // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortDeathCauseInfo
struct FFortDeathCauseInfo
{
public:
	class FString                                DisplayText;                                       // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DeathCauseTag;                                     // 0x10(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          SelfInflictedMessages;                             // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          SelfInflictedDBNOMessages;                         // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          EliminatedMessages;                                // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          EliminatedDBNOMessages;                            // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortDeathCauseInfoVariant>    DeathCauseInfoVariants;                            // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortTagToDeathCause
struct FFortTagToDeathCause
{
public:
	struct FGameplayTag                          DeathTag;                                          // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DBNOCause;                                         // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DeathCause;                                        // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DE4[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.DecoPlacementState
struct FDecoPlacementState
{
public:
	struct FVector                               Start;                                             // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               End;                                               // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RawLocation;                                       // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Normal;                                            // 0x24(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                 AbsoluteRotation;                                  // 0x30(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               GridLocation;                                      // 0x40(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PreviousLocation;                                  // 0x4C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FallbackLocation;                                  // 0x58(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 LastHitActor;                                      // 0x64(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ABuildingSMActor>       CurrentBuildingActorAttachment;                    // 0x6C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CreateBuildingLocation;                            // 0x74(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CreateBuildingRotation;                            // 0x80(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortDecoPlacementQueryResults    CanPlaceState;                                     // 0x8C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DE5[0x13];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortTierProgressionInfo
struct FFortTierProgressionInfo
{
public:
	class FString                                ProgressionLayoutGuid;                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighestDefeatedTier;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DE6[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTierProgression
struct FFortTierProgression
{
public:
	TArray<struct FFortTierProgressionInfo>      ProgressionInfo;                                   // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PendingDeployableManagerAction
struct FPendingDeployableManagerAction
{
public:
	enum class EQueueActionType                  ActionType;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3DE7[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class ADeployableBasePlot*>           PendingPlots;                                      // 0x8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        CurrentPlotRunningIndex;                           // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDeployableBaseBuildingState      DesiredPlotState;                                  // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3DE8[0x13];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortDeployableBaseManager*            Manager;                                           // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3DE9[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortTierCollectionLayoutOutput
struct FFortTierCollectionLayoutOutput
{
public:
	class FName                                  SpawnCollectionName;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DifficultyRowName;                                 // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ModifierProgressionName;                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdditiveDifficultyMod;                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UFortBadgeItemDefinition*>      RewardBadges;                                      // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          StartTierLootTierGroups;                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                          WaveCompleteLootTierGroups;                        // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AvailableTierLayout
struct FAvailableTierLayout
{
public:
	class UFortTieredCollectionLayout*           Layout;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTierCollectionLayoutOutput> AvailableTiers;                                    // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortTierCollectionLayoutOutput> LockedTiers;                                       // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        bLocked : 1;                                       // Mask: 0x1, PropSize: 0x10x28(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DEB[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.ActiveTieredCollectionLayout
struct FActiveTieredCollectionLayout : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3DEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortTieredCollectionLayout*           Layout;                                            // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTierUnlocked;                                   // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLocked : 1;                                       // Mask: 0x1, PropSize: 0x10x1C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DED[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.ActiveTieredCollectionLayoutArray
struct FActiveTieredCollectionLayoutArray : public FFastArraySerializer
{
public:
	TArray<struct FActiveTieredCollectionLayout> LayoutArray;                                       // 0x108(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bTiersForced;                                      // 0x118(0x1)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3DEE[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.EnvironmentBuildingRestorationRecord
struct FEnvironmentBuildingRestorationRecord
{
public:
	TSubclassOf<class ABuildingActor>            ActorClass;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DEF[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            ActorTransform;                                    // 0x10(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  QuotaSelectedLootTierKey;                          // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QuotaSelectedLootTier;                             // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DF0[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortUserCloudRequestHandle
struct FFortUserCloudRequestHandle
{
public:
	uint64                                       Handle;                                            // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PendingDeployableBaseUser
struct FPendingDeployableBaseUser
{
public:
	struct FUniqueNetIdRepl                      UserNetId;                                         // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortUserCloudRequestHandle           LoadingCloudRequestHandle;                         // 0x28(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDeployableBaseRecord*             BaseRecord;                                        // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADeployableBasePlot*                   BasePlot;                                          // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0x18 - 0xC)
// ScriptStruct FortniteGame.DeployableBaseInstance
struct FDeployableBaseInstance : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3DF1[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class ADeployableBasePlot*                   DeployableBase;                                    // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.DeployableBaseArray
struct FDeployableBaseArray : public FFastArraySerializer
{
public:
	TArray<struct FDeployableBaseInstance>       DeployableBases;                                   // 0x108(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortTaggedUnlockBase
struct FFortTaggedUnlockBase
{
public:
	struct FGameplayTag                          RequiredTag;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.FortTaggedDeployableBaseLootUnlock
struct FFortTaggedDeployableBaseLootUnlock : public FFortTaggedUnlockBase
{
public:
	class FName                                  LootTierGroup;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0x14 - 0x8)
// ScriptStruct FortniteGame.FortTaggedDeployableBasePlotExpansionUnlock
struct FFortTaggedDeployableBasePlotExpansionUnlock : public FFortTaggedUnlockBase
{
public:
	struct FIntVector                            CellExpansionVector;                               // 0x8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PartyMemberAthenaBannerInfo
struct FPartyMemberAthenaBannerInfo
{
public:
	class FString                                BannerIconId;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonLevel;                                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DF2[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.PartyMemberCampaignHero
struct FPartyMemberCampaignHero
{
public:
	class FString                                HeroItemInstanceId;                                // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortHeroType>          HeroType;                                          // 0x10(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PartyMemberFrontendEmote
struct FPartyMemberFrontendEmote
{
public:
	TSoftObjectPtr<class UFortMontageItemDefinitionBase> EmoteItemDef;                                      // 0x0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EmoteEKey;                                         // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         EmoteSection;                                      // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DF3[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PartyMemberAssistedChallengeInfo
struct FPartyMemberAssistedChallengeInfo
{
public:
	class UFortQuestItemDefinition*              QuestItemDef;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObjectivesCompleted;                               // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DF4[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PartyMemberBattlePassInfo
struct FPartyMemberBattlePassInfo
{
public:
	bool                                         bHasPurchasedPass;                                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DF5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        PassLevel;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelfBoostXp;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FriendBoostXp;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.PartyMemberSquadAssignmentRequest
struct FPartyMemberSquadAssignmentRequest
{
public:
	int32                                        StartingAbsoluteIdx;                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TargetAbsoluteIdx;                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FUniqueNetIdRepl                      SwapTargetMemberId;                                // 0x8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Version;                                           // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DF6[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.PartyMemberScratchEntry
struct FPartyMemberScratchEntry
{
public:
	int32                                        T;                                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        V;                                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x160 (0x160 - 0x0)
// ScriptStruct FortniteGame.PartyMemberCosmeticLoadout
struct FPartyMemberCosmeticLoadout
{
public:
	TSoftObjectPtr<class UAthenaCharacterItemDefinition> CharacterDef;                                      // 0x0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CharacterEKey;                                     // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAthenaBackpackItemDefinition> BackpackDef;                                       // 0x38(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BackpackEKey;                                      // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAthenaPickaxeItemDefinition> PickaxeDef;                                        // 0x70(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PickaxeEKey;                                       // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAthenaSkyDiveContrailItemDefinition> ContrailDef;                                       // 0xA8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ContrailEKey;                                      // 0xD0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMcpVariantChannelInfo>        CosmeticVariants;                                  // 0xE0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FPartyMemberScratchEntry>      Scratchpad;                                        // 0xF0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DF7[0x50];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FPartyVariantRep>              Variants;                                          // 0x150(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x6C0 (0x7F0 - 0x130)
// ScriptStruct FortniteGame.FortPartyMemberRepData
struct FFortPartyMemberRepData : public FPartyMemberRepData
{
public:
	enum class EFortPartyMemberLocation          Location;                                          // 0x130(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DF8[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPartyMemberCampaignHero              CampaignHero;                                      // 0x168(0x38)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DF9[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MatchmakingLevel;                                  // 0x1D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DFA[0x34];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ZoneInstanceId;                                    // 0x208(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DFB[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	int64                                        HomeBaseVersion;                                   // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DFC[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         HasPreloadedAthena;                                // 0x280(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DFD[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPartyMemberFrontendEmote             FrontendEmote;                                     // 0x2B8(0x40)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DFE[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        NumAthenaPlayersLeft;                              // 0x328(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DFF[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         SpectateAPartyMemberAvailable;                     // 0x360(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E00[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             UtcTimeStartedMatchAthena;                         // 0x398(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E01[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EGameReadiness                    GameReadiness;                                     // 0x3D0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E02[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        HiddenMatchmakingDelayMax;                         // 0x408(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E03[0x34];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class ECommonInputType                  ReadyInputType;                                    // 0x440(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E04[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class ECommonInputType                  CurrentInputType;                                  // 0x478(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E05[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPartyMemberAssistedChallengeInfo     AssistedChallengeInfo;                             // 0x4B0(0x10)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E06[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortFeatItemDefinition*               FeatDefinition;                                    // 0x4F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E07[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPartyMemberSquadAssignmentRequest    MemberSquadAssignmentRequest;                      // 0x528(0x38)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E08[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EPartyMemberVoiceChatStatus       VoiceChatStatus;                                   // 0x590(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E09[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPartyMemberCosmeticLoadout           AthenaCosmeticLoadout;                             // 0x5C8(0x160)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E0A[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPartyMemberAthenaBannerInfo          AthenaBannerInfo;                                  // 0x758(0x28)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E0B[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPartyMemberBattlePassInfo            BattlePassInfo;                                    // 0x7B0(0x10)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E0C[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x0 (0x7F0 - 0x7F0)
// ScriptStruct FortniteGame.DevFortPartyMemberRepData
struct FDevFortPartyMemberRepData : public FFortPartyMemberRepData
{
public:
};

// 0x160 (0x160 - 0x0)
// ScriptStruct FortniteGame.DevPartyMember
struct FDevPartyMember
{
public:
	class FString                                ContextName;                                       // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Email;                                             // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Password;                                          // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAthenaLoadout                    AthenaLoadout;                                     // 0x30(0xF0)(Edit, NativeAccessSpecifierPublic)
	class UFortMontageItemDefinitionBase*        Emote;                                             // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonLevel;                                       // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECrossplayPreference              CrossplayPreference;                               // 0x12C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E0D[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                JsonPartyMemberData;                               // 0x130(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEmbedded;                                       // 0x140(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E0E[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Platform;                                          // 0x148(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECommonInputType                  InputType;                                         // 0x158(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E0F[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.MeshNetworkEditorSettings
struct FMeshNetworkEditorSettings
{
public:
	bool                                         bEnableMeshNetwork;                                // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E10[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        BaseMeshPort;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseMeshGamePort;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRootClients;                                    // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RootLoginStartIndex;                               // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E11[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                MeshMetadata;                                      // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortMissionGenerationElementCostAndAvailabilityRow
struct FFortMissionGenerationElementCostAndAvailabilityRow : public FTableRowBase
{
public:
	class UCurveTable*                           AvailabilityCurveTable;                            // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AvailabilityCurveTableRow;                         // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinCost;                                           // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxCost;                                           // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAIEncounterTimedModifierTags
struct FFortAIEncounterTimedModifierTags
{
public:
	float                                        TimeSeconds;                                       // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E12[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.FortEncounterLockedUtility
struct FFortEncounterLockedUtility
{
public:
	enum class EFortAIUtility                    Utility;                                           // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterUtilityDesire       UtilityDesire;                                     // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortEmoteMapping
struct FFortEmoteMapping
{
public:
	enum class EFortCustomBodyType               BodyType;                                          // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomGender                 Gender;                                            // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E13[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UAnimMontage>           EmoteMontage;                                      // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.NavWidgetSettings
struct FNavWidgetSettings
{
public:
	bool                                         bDrawNavWidget;                                    // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E14[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Distance;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Angle;                                             // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRandomNavAngle;                                 // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRandomNavAngle;                                 // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E15[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 WordSetsToUse;                                     // 0x18(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.NavWidgetSettingContainer
struct FNavWidgetSettingContainer
{
public:
	struct FGameplayTagContainer                 CameraTags;                                        // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FNavWidgetSettings                    WidgetSettings;                                    // 0x20(0x38)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.NavOptions
struct FNavOptions
{
public:
	struct FGameplayTag                          CameraTag;                                         // 0x0(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortEventLevelNavigationActor*        NavObjToLeft;                                      // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortEventLevelNavigationActor*        NavObjToRight;                                     // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortEventLevelNavigationActor*        NavObjToUp;                                        // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortEventLevelNavigationActor*        NavObjToDown;                                      // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortCriteriaRequirementData
struct FFortCriteriaRequirementData : public FTableRowBase
{
public:
	struct FGameplayTag                          RequiredTag;                                       // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGlobalMod;                                        // 0x10(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E16[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ModValue;                                          // 0x14(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireRarity;                                    // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       RequiredRarity;                                    // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E17[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortSpokenLine
struct FFortSpokenLine
{
public:
	class USoundBase*                            Audio;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          AnimMontage;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         AnimSequence;                                      // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             Addressee;                                         // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackBroadcastFilter      BroadcastFilter;                                   // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E18[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Delay;                                             // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptCurrentLine;                             // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeInterrupted;                                 // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanQue;                                           // 0x2A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E19[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackEvent
struct FFortFeedbackEvent
{
public:
	class AFortPawn*                             Instigator;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             Recipient;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortFeedbackHandle                   Handle;                                            // 0x10(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Delay;                                             // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverriddenQueuing;                                // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E1A[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackEventData
struct FFortFeedbackEventData
{
public:
	struct FFortFeedbackHandle                   Handle;                                            // 0x0(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ChanceToPlay;                                      // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinReplayTime;                                     // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinReplayTimeForSpeaker;                           // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWitnessDistance;                                // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInterruptCurrentLine;                             // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeInterrupted;                                 // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanQue;                                           // 0x2A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackBroadcastFilter      MultiplayerBroadcastFilter;                        // 0x2B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackSelectionMethod      ContextSelectionMethod;                            // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E1B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        FeedbackDelay;                                     // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeLastPlayed;                                    // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackResponse
struct FFortFeedbackResponse
{
public:
	struct FFortFeedbackHandle                   Handle;                                            // 0x0(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortFeedbackContext              Context;                                           // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E1C[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackLine
struct FFortFeedbackLine
{
public:
	TSoftObjectPtr<class USoundBase>             Audio;                                             // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>          AnimSequence;                                      // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           AnimMontage;                                       // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackAddressee            Addressee;                                         // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFeedbackContext              Context;                                           // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E1D[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortFeedbackResponse>         ResponseEvents;                                    // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bInterruptCurrentLine;                             // 0x90(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBeInterrupted;                                 // 0x91(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanQue;                                           // 0x92(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E1E[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortFeedbackAction
struct FFortFeedbackAction
{
public:
	uint8                                        Pad_3E1F[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortFeedbackHandle                   Handle;                                            // 0x8(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortFeedbackLine>             Lines;                                             // 0x20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x38 - 0x30)
// ScriptStruct FortniteGame.FortFeedbackActionBankDefined
struct FFortFeedbackActionBankDefined : public FFortFeedbackAction
{
public:
	float                                        MinReplayTime;                                     // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinReplayTimeForSpeaker;                           // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FerretVehicleBoostLevel
struct FFerretVehicleBoostLevel
{
public:
	float                                        AccumulationPercent;                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTime;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x220 (0x220 - 0x0)
// ScriptStruct FortniteGame.FortFlightModel
struct FFortFlightModel
{
public:
	uint8                                        Pad_3E20[0x220];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FlightParams
struct FFlightParams
{
public:
	float                                        TopSpeedKmh;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LiftoffSpeedKmh;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlSpeedKmh;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadingStabilizationRate;                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadingStabilizationMaxForwardVelocityKmh;         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadingStabilizationMaxDegPerSecond;               // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalStabilizationDrag;                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalStabilizationDrag;                       // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalStabilizationTorque;                       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVerticalStabilizationTorque;                    // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalStabilizationTorque;                     // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHorizontalStabilizationTorque;                  // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationalDampingCoefficient;                      // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRotationalDampingTorque;                        // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TailLength;                                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowSpeedThrust;                                    // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighSpeedThrust;                                   // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntigravityHorizontal;                             // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntigravityUp;                                     // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntigravityDown;                                   // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameHeight;                                // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameDistance;                              // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameDistanceInterpPerSecond;               // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameOrbitInterpPerSecond;                  // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameRollInterpPerSecond;                   // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ControlFrameDefaultRollUp;                         // 0x64(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameRollUpAcceleration;                    // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameRollUpMaxVelocity;                     // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameRollUpDamping;                         // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameMinUpNudge;                            // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameMaxUpNudge;                            // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ControlFrameUpsideDownIgnoreNudgePercent;          // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerPitchRate;                                    // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerYawRate;                                      // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SteerMaxHeadingDiffDegrees;                        // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollPerHeadingDiff;                                // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadingMatchRate;                                  // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollMatchRate;                                     // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatchingTorqueCap;                                 // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StallVelocityLow;                                  // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StallVelocityHigh;                                 // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinStallYawMultiplier;                             // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxStallYawMultiplier;                             // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StallHighVelocityDeviationAngle;                   // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x118 (0x118 - 0x0)
// ScriptStruct FortniteGame.FortFootstepAudioData
struct FFortFootstepAudioData
{
public:
	class USoundBase*                            SoundAssets[0xA];                                  // 0x0(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundAssetsAbove[0xA];                             // 0x50(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundAssetsBelow[0xA];                             // 0xA0(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAttenuation*                     SoundAttenuation;                                  // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAttenuation*                     SoundAttenuationAbove;                             // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAttenuation*                     SoundAttenuationBelow;                             // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAttenuation*                     SoundAttenuationAboveOrBelowAndVisible;            // 0x108(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumeMultiplier;                                  // 0x110(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E21[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CameraPair
struct FCameraPair
{
public:
	enum class EFrontEndCamera                   Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E22[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortCameraBase*                       Camera;                                            // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortFXAnimationInfoBase
struct FFortFXAnimationInfoBase
{
public:
	class UCurveFloat*                           LerpCurve;                                         // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E23[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x20 - 0x18)
// ScriptStruct FortniteGame.FortFloatAnimationInfo
struct FFortFloatAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	uint8                                        Pad_3E24[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortLightAnimSet
struct FFortLightAnimSet
{
public:
	class ULightComponent*                       LightComp;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortFloatAnimationInfo>       IntensityAnims;                                    // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E25[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x28 - 0x20)
// ScriptStruct FortniteGame.FortFloatParamAnimationInfo
struct FFortFloatParamAnimationInfo : public FFortFloatAnimationInfo
{
public:
	uint8                                        Pad_3E26[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortParticleAnimSet
struct FFortParticleAnimSet
{
public:
	class UParticleSystemComponent*              PSC;                                               // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortFloatParamAnimationInfo>  ParamAnims;                                        // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E27[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x38 - 0x18)
// ScriptStruct FortniteGame.FortLinearColorAnimationInfo
struct FFortLinearColorAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	uint8                                        Pad_3E28[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x40 - 0x38)
// ScriptStruct FortniteGame.FortLinearColorParamAnimationInfo
struct FFortLinearColorParamAnimationInfo : public FFortLinearColorAnimationInfo
{
public:
	uint8                                        Pad_3E29[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.FortLinearColorCurveAnimationInfo
struct FFortLinearColorCurveAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	uint8                                        Pad_3E2A[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x30 - 0x28)
// ScriptStruct FortniteGame.FortLinearColorCurveParamAnimationInfo
struct FFortLinearColorCurveParamAnimationInfo : public FFortLinearColorCurveAnimationInfo
{
public:
	uint8                                        Pad_3E2B[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortMIDAnimSet
struct FFortMIDAnimSet
{
public:
	class UMaterialInstanceDynamic*              Mid;                                               // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortFloatParamAnimationInfo>  FloatParamAnims;                                   // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortLinearColorParamAnimationInfo> ColorParamAnims;                                   // 0x18(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortLinearColorCurveParamAnimationInfo> ColorCurveParamAnims;                              // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E2C[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.FortSplineMeshScaleAnimationInfo
struct FFortSplineMeshScaleAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	uint8                                        Pad_3E2D[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.FortSplineMeshSnapAnimationInfo
struct FFortSplineMeshSnapAnimationInfo : public FFortFXAnimationInfoBase
{
public:
	class USplineComponent*                      TargetSpline;                                      // 0x18(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E2E[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortSplineMeshAnimSet
struct FFortSplineMeshAnimSet
{
public:
	class USplineMeshComponent*                  SplineMesh;                                        // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortSplineMeshScaleAnimationInfo> ScaleAnims;                                        // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortSplineMeshSnapAnimationInfo> SnapAnims;                                         // 0x18(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E2F[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.TagQueryTableRow
struct FTagQueryTableRow : public FTableRowBase
{
public:
	struct FGameplayTagQuery                     TagQuery;                                          // 0x8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SubGameInfo
struct FSubGameInfo
{
public:
	class UFortTokenType*                        AccessToken;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RequiredFullInstall;                               // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPartyWithoutFullInstall;                       // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E30[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortHighlightColors
struct FFortHighlightColors
{
public:
	struct FLinearColor                          OutlineColor;                                      // 0x0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SceneModulationColor1;                             // 0x10(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SceneModulationColor2;                             // 0x20(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortHighlightColorsContainer
struct FFortHighlightColorsContainer
{
public:
	struct FFortHighlightColors                  ValidHighlight;                                    // 0x0(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortHighlightColors                  InvalidHighlight;                                  // 0x30(0x30)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PartnerPcbInfo
struct FPartnerPcbInfo
{
public:
	struct FGameplayTag                          PartnerTag;                                        // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ValidPartnerBundles;                               // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.AttributeClamp
struct FAttributeClamp
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EClampType                        ClampType;                                         // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E31[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ClampValue;                                        // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.PlayerClampInfo
struct FPlayerClampInfo : public FTableRowBase
{
public:
	TArray<struct FAttributeClamp>               AttributeClamps;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x98 (0xA0 - 0x8)
// ScriptStruct FortniteGame.GameDifficultyInfo
struct FGameDifficultyInfo : public FTableRowBase
{
public:
	bool                                         bIsOnboarding;                                     // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E32[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Difficulty;                                        // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyMatchmakingMinOverride;                  // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyMatchmakingMaxOverride;                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LootLevel;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERatingsEnforcementType           RatingsEnforcement;                                // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E33[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        RequiredRating;                                    // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumRating;                                     // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PvPRating;                                         // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecommendedRating;                                 // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScoreBonus;                                        // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E34[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                LootTierGroup;                                     // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BonusLootTierGroup;                                // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DifficultyIncreaseLootTierGroup;                   // 0x58(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumDifficultyIncreases;                            // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E35[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  ThreatDisplayName;                                 // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                  ColorParamName;                                    // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultPlayerLives;                                // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerStatClampRowName;                            // 0x94(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E36[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.CustomGameManifestComponentEntry
struct FCustomGameManifestComponentEntry
{
public:
	TSoftClassPtr<class UActorComponent>         ComponentClass;                                    // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  RequiredActorClass;                                // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortComponentRoleFilter          RoleFilter;                                        // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E37[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CustomGameManifestComponentList
struct FCustomGameManifestComponentList
{
public:
	TArray<struct FCustomGameManifestComponentEntry> List;                                              // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AudioDynamicSoundData
struct FAudioDynamicSoundData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDynamicSoundOverride             SoundOverrideType;                                 // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E38[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Volume;                                            // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AthenaDataTableSet
struct FAthenaDataTableSet
{
public:
	class UDataTable*                            LootTierData;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            LootPackages;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            RangedWeapons;                                     // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           GameData;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           ResourceRates;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           VehicleData;                                       // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ContestedBuildingRequest
struct FContestedBuildingRequest
{
public:
	uint8                                        Pad_3E39[0x38];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.AthenaServerStartAircraftStats
struct FAthenaServerStartAircraftStats
{
public:
	float                                        WarmupDurationSec;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPlayersMissing;                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPlayersQuitting;                                // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartedEarly;                                     // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAircraftLaunchReason             StartReason;                                       // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E3A[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        ExpectedPlayers;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayersReadied;                                    // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayersLoadingScreenDropped;                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E3B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 GoldenPoisTags;                                    // 0x20(0x20)(NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ClearAreaParams
struct FClearAreaParams
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleHalfHeight;                                 // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleRadius;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E3C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 IgnoreTags;                                        // 0x18(0x20)(NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.RejoinScoreMemory
struct FRejoinScoreMemory
{
public:
	uint8                                        Pad_3E3D[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.BCActionInfo
struct FBCActionInfo
{
public:
	int32                                        Type;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Action;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortGamepadBasicOptions
struct FFortGamepadBasicOptions
{
public:
	enum class EFortGamepadSensitivity           LookSensitivityPreset;                             // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGamepadSensitivity           LookSensitivityPresetAds;                          // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E3E[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LookBuildModeMultiplier;                           // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookEditModeMultiplier;                            // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAdvancedOptions;                               // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E3F[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x3C (0x3C - 0x0)
// ScriptStruct FortniteGame.FortGamepadAdvancedOptions
struct FFortGamepadAdvancedOptions
{
public:
	uint32                                       LookHorizontalSpeed;                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       LookVerticalSpeed;                                 // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       LookHorizontalSpeedAds;                            // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       LookVerticalSpeedAds;                              // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       LookHorizontalBoostSpeed;                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       LookVerticalBoostSpeed;                            // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookBoostAccelerationTime;                         // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       LookHorizontalBoostSpeedAds;                       // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       LookVerticalBoostSpeedAds;                         // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookBoostAccelerationTimeAds;                      // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInstantBoostWhenBuilding;                         // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E40[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LookEaseTime;                                      // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGamepadLookInputCurve        LookInputCurve;                                    // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E41[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	uint32                                       AimAssistStrength;                                 // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseLegacyControls;                                // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E42[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x4C (0x4C - 0x0)
// ScriptStruct FortniteGame.FortGamepadUserOptions
struct FFortGamepadUserOptions
{
public:
	struct FFortGamepadBasicOptions              Basic;                                             // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGamepadAdvancedOptions           Advanced;                                          // 0x10(0x3C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortAbilityCost
struct FFortAbilityCost
{
public:
	enum class EFortAbilityCostSource            CostSource;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E43[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FScalableFloat                        CostValue;                                         // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   ItemDefinition;                                    // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyApplyCostOnHit;                               // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E44[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGameplayAbilityBehaviorDistanceData
struct FFortGameplayAbilityBehaviorDistanceData
{
public:
	struct FGameplayTagContainer                 DistanceDataTag;                                   // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	float                                        Distance;                                          // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E45[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCharacterPartMontageInfo
struct FFortCharacterPartMontageInfo
{
public:
	enum class EFortCustomPartType               CharacterPart;                                     // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E46[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UAnimMontage*                          AnimMontage;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortGameplayAbilityMontageInfo
struct FFortGameplayAbilityMontageInfo
{
public:
	class UAnimMontage*                          MontageToPlay;                                     // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimPlayRate;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnimRootMotionTranslationScale;                    // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGameplayAbilityMontageSectionToPlay MontageSectionToPlay;                              // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E47[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  OverrideSection;                                   // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayRandomSection;                                // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E48[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortCharacterPartMontageInfo> CharacterPartMontages;                             // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E49[0x28];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectContainer
struct FFortGameplayEffectContainer
{
public:
	struct FGameplayTag                          ApplicationTag;                                    // 0x0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAbilityTargetSelectionList       TargetSelection;                                   // 0x8(0x48)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   TargetGameplayEffectClasses;                       // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   OwnerGameplayEffectClasses;                        // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ActivationCues;                                    // 0x70(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ImpactCues;                                        // 0x90(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bUseCalculationInTooltips;                         // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideChargeMagnitude;                          // 0xB1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E4A[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ChargeMagnitudeOverrideValue;                      // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FortGameplayEffectContainerSpec
struct FFortGameplayEffectContainerSpec
{
public:
	struct FFortAbilityTargetSelectionList       TargetSelection;                                   // 0x0(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FGameplayEffectSpecHandle>     TargetGameplayEffectSpecs;                         // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayEffectSpecHandle>     OwnerGameplayEffectSpecs;                          // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ActivationCues;                                    // 0x68(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ImpactCues;                                        // 0x88(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        ImpactNoiseRange;                                  // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyByNoiseRange;                                   // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideChargeMagnitude;                          // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E4B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ChargeMagnitudeOverrideValue;                      // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.TurnFloatRange
struct FTurnFloatRange
{
public:
	float                                        Min;                                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Max;                                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.TurnTransitionData
struct FTurnTransitionData
{
public:
	class FName                                  MontageSectionName;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinYawAngle;                                       // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawAngle;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnRate;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E4C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0x18(0x20)(Edit, NativeAccessSpecifierPublic)
	int32                                        PriorityLevel;                                     // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTurnFloatRange                       SpeedConstraintRange;                              // 0x3C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bEnableSpeedConstraint;                            // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipTransitionInCrowd;                            // 0x45(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E4D[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.FortMantisTargetData
struct FFortMantisTargetData : public FGameplayAbilityTargetData
{
public:
	int32                                        AttackDataIndex;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E4E[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.PossessPropClasses
struct FPossessPropClasses : public FTableRowBase
{
public:
	TSoftClassPtr<class ABuildingActor>          ClassPath;                                         // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortPawnSpinParams
struct FFortPawnSpinParams
{
public:
	float                                        LocalSpin;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlySpinWhenFalling;                              // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E4F[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.ActiveItemGrantInfo
struct FActiveItemGrantInfo
{
public:
	class UFortWorldItemDefinition*              Item;                                              // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AmountToGive;                                      // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxAmount;                                         // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueSpawnCondition
struct FFortGameplayCueSpawnCondition
{
public:
	enum class EFortGameplayCueSourceCondition   SourceCondition;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E50[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<enum class EPhysicalSurface>          AllowedSurfaces;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EPhysicalSurface>          DisallowedSurfaces;                                // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        ChanceToPlay;                                      // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EParticleSignificanceLevel        Significance;                                      // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E51[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        RequiredDetailMode;                                // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequireVisible : 1;                               // Mask: 0x1, PropSize: 0x10x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E52[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueAttachInfo
struct FFortGameplayCueAttachInfo
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGameplayCueAttachType        AttachType;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E53[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        bAttachToWeapon : 1;                               // Mask: 0x1, PropSize: 0x10xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAttachToHitResult : 1;                            // Mask: 0x2, PropSize: 0x10xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseUnsmoothedNetworkPosition : 1;                 // Mask: 0x4, PropSize: 0x10xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreScale : 1;                                  // Mask: 0x8, PropSize: 0x10xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreRotation : 1;                               // Mask: 0x10, PropSize: 0x10xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2A4 : 3;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3E54[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               OverrideScale;                                     // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              OverrideRotation;                                  // 0x1C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueParticleInfo
struct FFortGameplayCueParticleInfo
{
public:
	struct FFortGameplayCueSpawnCondition        Condition;                                         // 0x0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            Attachment;                                        // 0x38(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ParticleSystem;                                    // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCastShadow : 1;                                   // Mask: 0x1, PropSize: 0x10x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideCondition : 1;                            // Mask: 0x2, PropSize: 0x10x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideAttachment : 1;                           // Mask: 0x4, PropSize: 0x10x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E55[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueAudioInfo
struct FFortGameplayCueAudioInfo
{
public:
	struct FFortGameplayCueSpawnCondition        Condition;                                         // 0x0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            Attachment;                                        // 0x38(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundCue;                                          // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayBeforePlayInSeconds;                          // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideCondition : 1;                            // Mask: 0x1, PropSize: 0x10x6C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideAttachment : 1;                           // Mask: 0x2, PropSize: 0x10x6C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E56[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueAOEInfo
struct FFortGameplayCueAOEInfo
{
public:
	float                                        InnerRadius;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OuterRadius;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueCameraShakeInfo
struct FFortGameplayCueCameraShakeInfo
{
public:
	TSubclassOf<class UCameraShake>              Shake;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECameraAnimPlaySpace              PlaySpace;                                         // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E57[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FRotator                              UserPlaySpaceRotation;                             // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAlwaysPlayOnTarget;                               // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCalculateUserPlaySpaceRotationFromLocation;       // 0x1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCancelOnRemove;                                   // 0x1E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E58[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortGameplayCueAOEInfo               Falloff;                                           // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueCameraLensEffectInfo
struct FFortGameplayCueCameraLensEffectInfo
{
public:
	TSubclassOf<class AEmitterCameraLensEffectBase> CameraLensEffect;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAOEInfo               Falloff;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bAlwaysPlayOnTarget;                               // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCancelOnRemove;                                   // 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E59[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueForceFeedbackInfo
struct FFortGameplayCueForceFeedbackInfo
{
public:
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectRadius;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UForceFeedbackEffect*                  FarForceFeedbackEffect;                            // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarEffectRadius;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EffectTag;                                         // 0x1C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlwaysPlayOnTarget;                               // 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5B[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueDecalInfo
struct FFortGameplayCueDecalInfo
{
public:
	struct FFortGameplayCueSpawnCondition        Condition;                                         // 0x0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayCueAttachInfo            Attachment;                                        // 0x38(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bOverrideCondition : 1;                            // Mask: 0x1, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideAttachment : 1;                           // Mask: 0x2, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideFadeOut : 1;                              // Mask: 0x4, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2A5 : 5;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3E5C[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class ADecalActor>               Decal;                                             // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutStartDelay;                                 // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutDuration;                                   // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x100 (0x100 - 0x0)
// ScriptStruct FortniteGame.FortBurstEffectData
struct FFortBurstEffectData
{
public:
	TArray<struct FFortGameplayCueParticleInfo>  BurstParticles;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayCueAudioInfo>     BurstSounds;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueCameraShakeInfo       BurstCameraShake;                                  // 0x20(0x28)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueCameraLensEffectInfo  BurstCameraLensEffect;                             // 0x48(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueForceFeedbackInfo     BurstForceFeedbackEffect;                          // 0x60(0x28)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortGameplayCueDecalInfo             BurstDecal;                                        // 0x88(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortGameplayCueSpawnResult
struct FFortGameplayCueSpawnResult
{
public:
	TArray<class UParticleSystemComponent*>      ParticleComponents;                                // 0x0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UAudioComponent*>               AudioComponents;                                   // 0x10(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UCameraShake*                          CameraShake;                                       // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AEmitterCameraLensEffectBase*          CameraLensEffect;                                  // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADecalActor*                           DecalActor;                                        // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x78 - 0x70)
// ScriptStruct FortniteGame.FortGameplayCueAudioInfo_Looping
struct FFortGameplayCueAudioInfo_Looping : public FFortGameplayCueAudioInfo
{
public:
	float                                        LoopingSoundFadeOutDuration;                       // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoopingSoundVolumeLevel;                           // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.OverlapRestrictions
struct FOverlapRestrictions
{
public:
	int32                                        OverlapsPerActor;                                  // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          OverlapActorTagRestrictions;                       // 0x4(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.GameplayFeedbackEventParams
struct FGameplayFeedbackEventParams
{
public:
	struct FGameplayTag                          EventTag;                                          // 0x0(0x8)(BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      InstigatorPlayerId;                                // 0x8(0x28)(BlueprintVisible, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EventLocation;                                     // 0x30(0xC)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.GameplayFeedbackEventInfo
struct FGameplayFeedbackEventInfo
{
public:
	class FString                                DisplayText;                                       // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EventTag;                                          // 0x10(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaGameMsgType                MsgType;                                           // 0x18(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTeamBasedEvent;                                   // 0x19(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5E[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FText>                          FriendlyEventMessages;                             // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          HostileEventMessages;                              // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                          NeutralEventMessages;                              // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortPendingReceiverReg
struct FFortPendingReceiverReg
{
public:
	uint8                                        Pad_3E5F[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 ChannelIds;                                        // 0x8(0x20)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortMessageChannelInfo
struct FFortMessageChannelInfo
{
public:
	uint8                                        Pad_3E60[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortTriggeredGameplayMessage
struct FFortTriggeredGameplayMessage
{
public:
	class UFortGameplayTriggerMessageComponent*  Sender;                                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ChannelId;                                         // 0x8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AController>            TriggerInstigator;                                 // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortGameplayMessageTriggerList
struct FFortGameplayMessageTriggerList
{
public:
	TArray<class UFortGameplayTriggerMessageComponent*> Triggers;                                          // 0x0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortGameplayMessageReceiverList
struct FFortGameplayMessageReceiverList
{
public:
	TArray<class UFortGameplayReceiverMessageComponent*> Receivers;                                         // 0x0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortEncounterMutatorReplacedTag
struct FFortEncounterMutatorReplacedTag
{
public:
	struct FGameplayTagContainer                 TagsToRemove;                                      // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToAdd;                                         // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.SetCVarParams
struct FSetCVarParams
{
public:
	class FName                                  CVarName;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESetCVarType                      Type;                                              // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E61[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        NumberValue;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StringValue;                                       // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.TierTags
struct FTierTags
{
public:
	struct FGameplayTag                          TagForTier[0x6];                                   // 0x0(0x30)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct FortniteGame.GameRewardOverridesInfo
struct FGameRewardOverridesInfo : public FTableRowBase
{
public:
	class FString                                MissionName;                                       // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OverrideRewardsTag;                                // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LootLevel;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E62[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                LootTierGroup;                                     // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.MeshServiceMetadata
struct FMeshServiceMetadata
{
public:
	uint8                                        Pad_3E63[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortDisconnectedPlayerReservation
struct FFortDisconnectedPlayerReservation
{
public:
	class FName                                  SessionName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E64[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortHostSessionParams
struct FFortHostSessionParams
{
public:
	class FName                                  SessionName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ControllerId;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortBanHammerStrike
struct FFortBanHammerStrike
{
public:
	struct FUniqueNetIdRepl                      AccountId;                                         // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Reason;                                            // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBanHammerNotificationAction  Action;                                            // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E65[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Source;                                            // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Offense;                                           // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ClientIdRestrictions
struct FClientIdRestrictions
{
public:
	class FString                                ClientId;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        RestrictedPlatforms;                               // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PlaylistStreamedLevelData
struct FPlaylistStreamedLevelData
{
public:
	uint8                                        Pad_3E66[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         bIsFinishedStreaming;                              // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E67[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.DynamicCompositeWorld
struct FDynamicCompositeWorld
{
public:
	TSoftObjectPtr<class UWorld>                 CompositeWorld;                                    // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CalendarEventName;                                 // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraName;                                        // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFrontEndCamera                   CameraOverride;                                    // 0x40(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E68[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AnalyticsNavActorClickedData
struct FAnalyticsNavActorClickedData
{
public:
	struct FGameplayTag                          InteractionCamera;                                 // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 InteractionActor;                                  // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
	class FName                                  HumanReadable;                                     // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.NavIndicatorTextList
struct FNavIndicatorTextList
{
public:
	struct FGameplayTag                          ListName;                                          // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          IndicatorTextList;                                 // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.HiddenActors
struct FHiddenActors
{
public:
	struct FGameplayTag                          RewardEventGraphNode;                              // 0x0(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>         HiddenActors;                                      // 0x8(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.WorldCamera
struct FWorldCamera
{
public:
	struct FGameplayTag                          CameraTag;                                         // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PreviouseCamera;                                   // 0x8(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BackOutCamera;                                     // 0x10(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DefaultSelectedObject;                             // 0x18(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 CamerasToTransitionTo;                             // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 NavigationActorsToTurnOn;                          // 0x40(0x20)(Transient, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortCameraBase>        SceneCamera;                                       // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SceneCameraLocation;                               // 0x68(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SceneCameraRotation;                               // 0x74(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FViewTargetTransitionParams           TransitionParams;                                  // 0x80(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FViewTargetTransitionParams> CameraTransitionParams;                            // 0x90(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.DynaimcLevelStreamingLocations
struct FDynaimcLevelStreamingLocations
{
public:
	struct FTransform                            LoadLocation;                                      // 0x0(0x30)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  StreamingLevelPackageName;                         // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E69[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortFrontendCompositeLevel
struct FFortFrontendCompositeLevel
{
public:
	class FName                                  StreamingLevelPackageName;                         // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULevelStreaming*>               StreamingLevels;                                   // 0x8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.DynamicStreamingLevelData
struct FDynamicStreamingLevelData
{
public:
	class FName                                  LevelPackageName;                                  // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFrontEndCamera                   CameraOverride;                                    // 0x8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E6A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  CameraName;                                        // 0xC(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PickupManagedActorBucket
struct FPickupManagedActorBucket
{
public:
	uint8                                        Pad_3E6B[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.ManagedActorInfo
struct FManagedActorInfo
{
public:
	uint8                                        Pad_3E6C[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PickupManagementSettings
struct FPickupManagementSettings
{
public:
	int32                                        PickupsAllowedMax;                                 // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupsDesiredSlack;                               // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupDespawnDelaySeconds;                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugPickupManagement;                            // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnablePickupManagement;                           // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       ImportantPickupThreshold;                          // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E6D[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HordeDifficultyTierInfo
struct FHordeDifficultyTierInfo
{
public:
	class FName                                  DifficultyTierName;                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              QuestPrerequisite;                                 // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlayerBuildableClassFilter
struct FPlayerBuildableClassFilter
{
public:
	enum class EFortResourceType                 ResourceType;                                      // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E6E[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Level;                                             // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuildingEditModeMetadata*             EditModeMetadata;                                  // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortScalabilityModeSettings
struct FFortScalabilityModeSettings
{
public:
	uint8                                        Pad_3E6F[0x50];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortSimpleGameStats
struct FFortSimpleGameStats
{
public:
	int32                                        GamesPlayed;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondsPlayed;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KillCount;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BestResult;                                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastReviewPromptDay;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E70[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.SavedCredentials
struct FSavedCredentials
{
public:
	enum class ESavedAccountType                 Type;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E71[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ID;                                                // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Token;                                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.XPEventEntryHotfix
struct FXPEventEntryHotfix
{
public:
	class FName                                  Entry;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CountThreshhold;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCount;                                          // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ChallengeObjectiveHotfix
struct FChallengeObjectiveHotfix
{
public:
	class FName                                  Quest;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Stat;                                              // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NewCount;                                          // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.SubGameAccess
struct FSubGameAccess
{
public:
	enum class ESubGame                          SubGame;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubGameAccessStatus              AccessStatus;                                      // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubGameMatchmakingStatus         MatchmakingStatus;                                 // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.VoiceChatLogSubmitOptions
struct FVoiceChatLogSubmitOptions
{
public:
	bool                                         bSubmitLogs;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubmitSecondaryLogs;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E72[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LogTailKb;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogSubmitChance;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E73[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        DoNotUploadReasons;                                // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.KairosSubmitLogOptions
struct FKairosSubmitLogOptions
{
public:
	class FString                                Type;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubmitLogs;                                       // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubmitSecondaryLogs;                              // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E74[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LogTailKb;                                         // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogSubmitChance;                                   // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E75[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        SubmitErrors;                                      // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PurchaseFailureLogSubmitOptions
struct FPurchaseFailureLogSubmitOptions
{
public:
	bool                                         bSubmitLogs;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubmitSecondaryLogs;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E76[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LogTailKb;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogSubmitChance;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E77[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        DoNotUploadReasons;                                // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.LogoutLogSubmitOptions
struct FLogoutLogSubmitOptions
{
public:
	bool                                         bSubmitLogs;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubmitSecondaryLogs;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubmitLogsDuringLogin;                            // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E78[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LogTailKb;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogSubmitChance;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E79[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        DoNotUploadReasons;                                // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.LoginFailureLogSubmitOptions
struct FLoginFailureLogSubmitOptions
{
public:
	bool                                         bSubmitLogs;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubmitSecondaryLogs;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E7A[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LogTailKb;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogSubmitChance;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<enum class ELoginResult>              DoNotUploadReasons;                                // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PartyFailureLogSubmitReason
struct FPartyFailureLogSubmitReason
{
public:
	class FString                                Reason;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SubReason;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LogSubmitChance;                                   // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E7C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PartyFailureLogSubmit
struct FPartyFailureLogSubmit
{
public:
	bool                                         bSubmitLogs;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubmitSecondaryLogs;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E7D[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LogTailKb;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPartyFailureLogSubmitReason>  Reasons;                                           // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.GoatVehicleBoostLevel
struct FGoatVehicleBoostLevel
{
public:
	float                                        AccumulationPercent;                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostTime;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortHealthBarComponentData
struct FFortHealthBarComponentData
{
public:
	class FText                                  DisplayText;                                       // 0x0(0x18)(NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.FortHelpAdditionalContent
struct FFortHelpAdditionalContent
{
public:
	enum class EFortHelpContentLocation          ContentLocation;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowAdditionalImage;                               // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E7E[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FSlateBrush                           ImageToDisplay;                                    // 0x8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         ShowAdditionalWidget;                              // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E7F[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class UUserWidget>               WidgetToDisplay;                                   // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.HeroKeywordDisplayData
struct FHeroKeywordDisplayData
{
public:
	struct FGameplayTag                          KeyWordGameplayTag;                                // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  KeywordDisplayName;                                // 0x8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.HeroPerkDefaultRequirements
struct FHeroPerkDefaultRequirements
{
public:
	enum class EFortItemTier                     MinimumHeroTier;                                   // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E80[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MinimumHeroLevel;                                  // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinimumHeroRarity;                                 // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E81[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HeroSubclassRarityAttributeData
struct FHeroSubclassRarityAttributeData
{
public:
	TArray<struct FFortAttributeInitializationKey> AttributeInitKeysPerTier;                          // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.HeroSubclassAttributeData
struct FHeroSubclassAttributeData
{
public:
	struct FGameplayTagContainer                 HeroClassAndSubclassTags;                          // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FHeroSubclassRarityAttributeData> AttributeInitKeysPerRarity;                        // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortTeamPerkSlotFilteringData
struct FFortTeamPerkSlotFilteringData
{
public:
	uint8                                        Pad_3E82[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortHeroGameplayPiece
struct FFortHeroGameplayPiece
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        GrantedAbilityKit;                                 // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     RequiredCommanderTagQuery;                         // 0x28(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  CommanderRequirementsText;                         // 0x70(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bUseGlobalDefaultMinima;                           // 0x88(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortItemTier                     MinimumHeroTier;                                   // 0x89(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E83[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MinimumHeroLevel;                                  // 0x8C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinimumHeroRarity;                                 // 0x90(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E84[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortHeroTierAbilityKit
struct FFortHeroTierAbilityKit
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        GrantedAbilityKit;                                 // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinimumHeroRarity;                                 // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E85[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.HeroItem
struct FHeroItem
{
public:
	TSoftObjectPtr<class UFortWorldItemDefinition> Item;                                              // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortReplenishmentType            Replenishment;                                     // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E86[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 RequiredGPTags;                                    // 0x30(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SwapTag;                                           // 0x50(0x20)(Edit, NativeAccessSpecifierPublic)
	bool                                         bShowInAbilityScreen;                              // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E87[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.HeroAbilityKit
struct FHeroAbilityKit
{
public:
	TSoftObjectPtr<class UFortAbilityKit>        InherentAbilityKit;                                // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredGPTags;                                    // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bShowInAbilityScreen;                              // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E88[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortHexMapCoord
struct FFortHexMapCoord
{
public:
	int32                                        Horizontal;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Vertical;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Depth;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortZoneEvent
struct FFortZoneEvent
{
public:
	class FName                                  EventType;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               EventFocus;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataAsset*                            EventContent;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                EventInstigator;                                   // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.HighlightObjectData
struct FHighlightObjectData
{
public:
	struct FGameplayTagContainer                 HighlightTags;                                     // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  FriendlyStencilName;                               // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyStencilName;                                  // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        FriendlyStencilIndex;                              // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        EnemyStencilIndex;                                 // 0x31(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E89[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UParticleSystem*                       Effect;                                            // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverlapRadius;                                     // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E8A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ActorClassFilter;                                  // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        PreviouslyOverlappingActors;                       // 0x60(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.HomebaseNodeState
struct FHomebaseNodeState
{
public:
	bool                                         bIsOwned;                                          // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAreCostsPayable;                                  // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E8B[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Level;                                             // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.WorkerSetBonusState
struct FWorkerSetBonusState
{
public:
	struct FGameplayTag                          SetBonusTag;                                       // 0x0(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMatchCount;                                 // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredMatchCountToActivate;                      // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.WorkerSetBonusData
struct FWorkerSetBonusData
{
public:
	struct FGameplayTag                          SetBonusTypeTag;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        RequiredWorkersCount;                              // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class UGameplayEffect>           SetBonusEffect;                                    // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PowerPoints;                                       // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.WorkerPortraitData
struct FWorkerPortraitData
{
public:
	TSoftObjectPtr<class UFortItemIconDefinition> Portrait;                                          // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.WorkerGenderData
struct FWorkerGenderData
{
public:
	enum class EFortCustomGender                 Gender;                                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E8D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FWorkerPortraitData>           PotraitData;                                       // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ManagerSynergyData
struct FManagerSynergyData
{
public:
	struct FGameplayTag                          SynergyTypeTag;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWorkerGenderData>             GenderData;                                        // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.WorkerPersonalityData
struct FWorkerPersonalityData
{
public:
	struct FGameplayTag                          PersonalityTypeTag;                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PersonalityName;                                   // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E8E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FWorkerGenderData>             GenderData;                                        // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.ExpeditionSlot
struct FExpeditionSlot : public FTableRowBase
{
public:
	struct FGameplayTag                          SlotTag;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LootTierGroup;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.HomebaseSquadSlotId
struct FHomebaseSquadSlotId
{
public:
	class FName                                  SquadId;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SquadSlotIndex;                                    // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xF0 (0xF8 - 0x8)
// ScriptStruct FortniteGame.HomebaseNodeGameplayEffectDataTableRow
struct FHomebaseNodeGameplayEffectDataTableRow : public FTableRowBase
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGameplayModOp                    Operation;                                         // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E8F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Magnitude;                                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ApplicationRequiredTagsContainer;                  // 0x30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredSourceTagsContainer;                       // 0x50(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredTargetTagsContainer;                       // 0x70(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GrantedTagsContainer;                              // 0x90(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 IgnoreSourceTagsContainer;                         // 0xB0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AssetTagsContainer;                                // 0xD0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        AssociatedGEIdx;                                   // 0xF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AssociatedModifierIdx;                             // 0xF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.HomebaseNodeLevel
struct FHomebaseNodeLevel
{
public:
	class FName                                  DisplayDataId;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinCommanderLevel;                                 // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E90[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortItemQuantityPair>         Cost;                                              // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          GameplayEffectRowNames;                            // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAbilityKit>        AbilityKit;                                        // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHomebaseSquadSlotId>          UnlockedSquadSlots;                                // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.HomebaseBannerColorData
struct FHomebaseBannerColorData : public FTableRowBase
{
public:
	class FName                                  ColorKeyName;                                      // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CategoryRowName;                                   // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SubCategoryGroup;                                  // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3E91[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x90 (0x98 - 0x8)
// ScriptStruct FortniteGame.HomebaseBannerIconData
struct FHomebaseBannerIconData : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>             SmallImage;                                        // 0x8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             LargeImage;                                        // 0x30(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CategoryRowName;                                   // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayName;                                       // 0x60(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  DisplayDescription;                                // 0x78(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        bFullUsageRights : 1;                              // Mask: 0x1, PropSize: 0x10x90(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3E92[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.HomebaseBannerCategoryData
struct FHomebaseBannerCategoryData : public FTableRowBase
{
public:
	class FText                                  CategoryDisplayName;                               // 0x8(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        SortPriority;                                      // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3E93[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.HomebaseBannerColor
struct FHomebaseBannerColor
{
public:
	struct FLinearColor                          PrimaryColor;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          SecondaryColor;                                    // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HookGunRopeRepData
struct FHookGunRopeRepData
{
public:
	TWeakObjectPtr<class AFortWeapon>            Weapon;                                            // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortProjectileBase>    Projectile;                                        // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ImposterBatch
struct FImposterBatch
{
public:
	TArray<struct FTransform>                    Transforms;                                        // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class AFortImposterGroup*                    ImposterGroup;                                     // 0x10(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CachedIndex;                                       // 0x18(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E94[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.TeamMapInfo
struct FTeamMapInfo
{
public:
	TArray<uint8>                                ReplicatedSeedPack;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E95[0x34];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	uint8                                        TeamId;                                            // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E96[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2 (0x2 - 0x0)
// ScriptStruct FortniteGame.TeamMapExplorationEvent
struct FTeamMapExplorationEvent
{
public:
	uint8                                        TeamId;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         ExplorationThreshold;                              // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ScreenLabelText
struct FScreenLabelText
{
public:
	class FText                                  NormalText;                                        // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	class FText                                  RichText;                                          // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortInstensityCurveSequenceProgression
struct FFortInstensityCurveSequenceProgression
{
public:
	class UFortIntensityCurveSequence*           CurveSequence;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  SelectionWeight;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.InteractionType
struct FInteractionType
{
public:
	enum class ETInteractionType                 InteractionType;                                   // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInteractionBeingAttempted        InteractionBeingAttempted;                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E97[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TWeakObjectPtr<class AFortPlayerPawn>        RequestingPawn;                                    // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortPlayerController>  RequestingPlayerController;                        // 0xC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E98[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TWeakObjectPtr<class UPrimitiveComponent>    InteractComponent;                                 // 0x1C(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                OptionalObjectData;                                // 0x24(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InteractPoint;                                     // 0x2C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0x1C8 - 0x108)
// ScriptStruct FortniteGame.FortItemList
struct FFortItemList : public FFastArraySerializer
{
public:
	TArray<struct FFortItemEntry>                ReplicatedEntries;                                 // 0x108(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E99[0x50];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UFortWorldItem*>                ItemInstances;                                     // 0x168(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E9A[0x50];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortInventory_CheckpointEntry
struct FFortInventory_CheckpointEntry
{
public:
	class FString                                StartDeviceActorName;                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             MostRecentUseTime;                                 // 0x10(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortInventory_Checkpoints
struct FFortInventory_Checkpoints
{
public:
	TArray<struct FFortInventory_CheckpointEntry> Checkpoints;                                       // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ItemCategoryMappingData
struct FItemCategoryMappingData
{
public:
	enum class EFortItemType                     CategoryType;                                      // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E9B[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  CategoryName;                                      // 0x8(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x8 (0x30 - 0x28)
// ScriptStruct FortniteGame.FortGiftGiver
struct FFortGiftGiver : public FFortGiftingInfo
{
public:
	int32                                        NumItemsGiven;                                     // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E9C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMeleeDeflectTransitionAnimData
struct FFortMeleeDeflectTransitionAnimData
{
public:
	class UAnimSequence*                         TransitionAnim;                                    // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NextDeflectDataIndex;                              // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E9D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortMeleeDeflectAnimData
struct FFortMeleeDeflectAnimData
{
public:
	class UAnimSequence*                         EntryFromGuardAnim;                                // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         HoldAnim;                                          // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         ExitToGuardAnim;                                   // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortMeleeDeflectTransitionAnimData> TransitionsToNextDeflection;                       // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.EventItemNamedWeight
struct FEventItemNamedWeight
{
public:
	class FName                                  WeightName;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WeightValue;                                       // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.ItemsForEventData
struct FItemsForEventData
{
public:
	class FString                                RequiredEventName;                                 // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventItemNamedWeight                 EventItemNamedWeight;                              // 0x10(0x28)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FPrimaryAssetId>               ItemsToLoad;                                       // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortItemToQuestData
struct FFortItemToQuestData : public FTableRowBase
{
public:
	class FString                                ItemTemplateID;                                    // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                QuestTemplateId;                                   // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestState                   QuestGrantState;                                   // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E9E[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.ItemWrapPreviewEntry
struct FItemWrapPreviewEntry
{
public:
	TSoftObjectPtr<class UObject>                PreviewObject;                                     // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                PreviewObjectAnimation;                            // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UAnimInstance>           PreviewObjectAnimInstance;                         // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E9F[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            PreviewTransform;                                  // 0x80(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        WrapSectionLimit;                                  // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPreviewUsingVehicleShader : 1;                    // Mask: 0x1, PropSize: 0x10xB4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA0[0xB];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.ItemWrapSlotMetadata
struct FItemWrapSlotMetadata
{
public:
	struct FGameplayTagQuery                     MatchCriteria;                                     // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FItemWrapPreviewEntry>         PreviewList;                                       // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ServerLaunchInfo
struct FServerLaunchInfo
{
public:
	float                                        LaunchServerTime;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA1[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class APawn*                                 LaunchedPawn;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.McpLeaderboardResultRow
struct FMcpLeaderboardResultRow
{
public:
	struct FUniqueNetIdRepl                      PlayerUniqueNetId;                                 // 0x0(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.LeaderboardRowData
struct FLeaderboardRowData
{
public:
	int32                                        Rank;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                User;                                              // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA3[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      PlatformAccountId;                                 // 0x20(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2F0 (0x2F0 - 0x0)
// ScriptStruct FortniteGame.FortEarlyAcessLoadingScreen
struct FFortEarlyAcessLoadingScreen
{
public:
	struct FSlateBrush                           EABackground;                                      // 0x0(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                       EATextStyle;                                       // 0x88(0x268)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPSALoadingScreen
struct FFortPSALoadingScreen
{
public:
	int32                                        PercentChance;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinimumGames;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             WidgetClass;                                       // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x428 (0x428 - 0x0)
// ScriptStruct FortniteGame.FortLoadingBlockScreen
struct FFortLoadingBlockScreen
{
public:
	struct FProgressBarStyle                     LoadingProgressBar;                                // 0x0(0x1A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMargin                               LoadingProgressBarPadding;                         // 0x1A0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                       LoadingTextStyle;                                  // 0x1B0(0x268)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMargin                               LoadingTextPadding;                                // 0x418(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.FortLogoLoadingScreen
struct FFortLogoLoadingScreen
{
public:
	struct FLinearColor                          LogoColor;                                         // 0x0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                               LogoPadding;                                       // 0x10(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        LogoSize;                                          // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4A0 (0x4A0 - 0x0)
// ScriptStruct FortniteGame.FortSubGameLoadingScreen
struct FFortSubGameLoadingScreen
{
public:
	TArray<class UFortTips*>                     Tips;                                              // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                BackgroundImage;                                   // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackgroundDesiredSize;                             // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackgroundColor;                                   // 0x40(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortLogoLoadingScreen                LogoLoadingScreen;                                 // 0x50(0x24)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA4[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortLoadingBlockScreen               LoadingBlockScreen;                                // 0x78(0x428)(Edit, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortLootLevelData
struct FFortLootLevelData : public FTableRowBase
{
public:
	class FName                                  Category;                                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LootLevel;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinItemLevel;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxItemLevel;                                      // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA5[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC0 (0xC8 - 0x8)
// ScriptStruct FortniteGame.FortLootPackageData
struct FFortLootPackageData : public FTableRowBase
{
public:
	class FName                                  LootPackageID;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NamedWeightMult;                                   // 0x14(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3EA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FName>                          PotentialNamedWeights;                             // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        Count;                                             // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LootPackageCategory;                               // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x38(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                  RequiredTag;                                       // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LootPackageCall;                                   // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x70(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PersistentLevel;                                   // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinWorldLevel;                                     // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorldLevel;                                     // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowBonusDrops;                                  // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA7[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Annotation;                                        // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortLootQuotaData
struct FFortLootQuotaData : public FTableRowBase
{
public:
	class FName                                  QuotaCategory;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELootQuotaLevel                   QuotaLevel;                                        // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA8[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Min;                                               // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max;                                               // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Quota;                                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinWorldLevel;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorldLevel;                                     // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD8 (0xE0 - 0x8)
// ScriptStruct FortniteGame.FortLootTierData
struct FFortLootTierData : public FTableRowBase
{
public:
	class FName                                  TierGroup;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELootQuotaLevel                   QuotaLevel;                                        // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LootTier;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinWorldLevel;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorldLevel;                                     // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EAA[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                StreakBreakerCurrency;                             // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StreakBreakerPointsMin;                            // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StreakBreakerPointsMax;                            // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StreakBreakerPointsSpend;                          // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LootPackage;                                       // 0x44(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LootPreviewPackage;                                // 0x4C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NumLootPackageDrops;                               // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                LootPackageCategoryWeightArray;                    // 0x58(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                LootPackageCategoryMinArray;                       // 0x68(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                LootPackageCategoryMaxArray;                       // 0x78(0x10)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x88(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredGameplayTags;                              // 0xA8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bAllowBonusLootDrops;                              // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EAB[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Annotation;                                        // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.MatchmakingParams
struct FMatchmakingParams
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PartySize;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DatacenterId;                                      // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistId;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EAC[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MatchmakingLevel;                                  // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionDifficultyMin;                              // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionDifficultyMax;                              // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStormShieldDefense               StormShieldDefenseType;                            // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EAD[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                TheaterId;                                         // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ZoneInstanceId;                                    // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WUID;                                              // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      WorldOwnerId;                                      // 0x68(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SessionId;                                         // 0x90(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingStartLocation         StartWith;                                         // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingFlags                 Flags;                                             // 0xA1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EAE[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ChanceToHostOverride;                              // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChanceToHostIncrease;                              // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumAttempts;                                       // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSearchResultsOverride;                          // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxProcessedSearchResults;                         // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct FortniteGame.FortCachedMatchmakingSearchParams
struct FFortCachedMatchmakingSearchParams
{
public:
	enum class EFortMatchmakingType              MatchmakingType;                                   // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3EAF[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FMatchmakingParams                    MatchmakingParams;                                 // 0x8(0xB8)(NativeAccessSpecifierPrivate)
	bool                                         bValid;                                            // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3EB0[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMatchmakingConfig
struct FFortMatchmakingConfig
{
public:
	float                                        ChanceToHostOverride;                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChanceToHostIncrease;                              // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSearchResultsOverride;                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxProcessedSearchResults;                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortInviteSessionParams
struct FFortInviteSessionParams
{
public:
	enum class EMatchmakingState                 State;                                             // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EB1[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  FailureReason;                                     // 0x8(0x18)(NativeAccessSpecifierPublic)
	enum class EPartyReservationResult           LastBeaconResponse;                                // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EB2[0x17];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortMatchmakingErrorInfo
struct FFortMatchmakingErrorInfo
{
public:
	enum class EMatchmakingErrorV2               Error;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EB3[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ErrorCode;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ResponseStr;                                       // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.MMSAltDomainRecord
struct FMMSAltDomainRecord
{
public:
	class FString                                OriginalDomain;                                    // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AltDomain;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MaterialReservation
struct FMaterialReservation
{
public:
	uint8                                        Pad_3EB4[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UMaterialInstanceDynamic*              MaterialInstance;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.MaterialCacheSettings
struct FMaterialCacheSettings : public FTableRowBase
{
public:
	int32                                        bDisable;                                          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCountDesktop;                                   // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCountPS4;                                       // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCountXbox;                                      // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCountSwitch;                                    // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCountMobile;                                    // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.MtxPackage
struct FMtxPackage
{
public:
	class FString                                StorefrontName;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OfferId;                                           // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x38(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        TotalAmount;                                       // 0x50(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusAmount;                                       // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Price;                                             // 0x58(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EB5[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  SaleBasePrice;                                     // 0x78(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                DisplayAssetPath;                                  // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerOverride;                                    // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MtxBreakdown
struct FMtxBreakdown
{
public:
	int32                                        AvailableTotalMtx;                                 // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AvailablePremiumMtx;                               // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UnavailableTotalMtx;                               // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UnavailablePremiumMtx;                             // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEventFlagsNotification
struct FFortEventFlagsNotification
{
public:
	TArray<class FString>                        EventFlags;                                        // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                             RefreshTime;                                       // 0x10(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FriendCodeIssuedNotification
struct FFriendCodeIssuedNotification
{
public:
	class FString                                Code;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CodeType;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortDifficultyIncreaseRewardEntry
struct FFortDifficultyIncreaseRewardEntry
{
public:
	int32                                        DifficultyIncreaseTier;                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EB6[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FMcpLootResult                        DifficultyIncreaseMissionRewards;                  // 0x8(0x20)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDifficultyIncreaseRewardRecord
struct FFortDifficultyIncreaseRewardRecord
{
public:
	TArray<struct FFortDifficultyIncreaseRewardEntry> PendingRewards;                                    // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertClaimData
struct FFortMissionAlertClaimData
{
public:
	class FString                                MissionAlertID;                                    // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             RedemptionDateUtc;                                 // 0x10(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             EvictClaimDataAfterUtc;                            // 0x18(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertRecord
struct FFortMissionAlertRecord
{
public:
	TArray<struct FFortMissionAlertClaimData>    ClaimData;                                         // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        PendingMissionAlertRewards;                        // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookResearchItemNotification
struct FFortCollectionBookResearchItemNotification
{
public:
	class FString                                ResearchedItemId;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ResearchedTemplateId;                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookUnslotItemNotification
struct FFortCollectionBookUnslotItemNotification
{
public:
	class FString                                UnslottedItemId;                                   // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookClaimRewardNotification
struct FFortCollectionBookClaimRewardNotification
{
public:
	struct FMcpLootResult                        Loot;                                              // 0x0(0x20)(NativeAccessSpecifierPublic)
	class FString                                Page;                                              // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Section;                                           // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCollectionBookSlotItemNotification
struct FFortCollectionBookSlotItemNotification
{
public:
	class FString                                SlottedItemId;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortClaimedDifficultyIncreaseRewardNotification
struct FFortClaimedDifficultyIncreaseRewardNotification
{
public:
	struct FMcpLootResult                        LootGranted;                                       // 0x0(0x20)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertCompleteNotification
struct FFortMissionAlertCompleteNotification
{
public:
	struct FMcpLootResult                        LootGranted;                                       // 0x0(0x20)(NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortTransmogResultNotification
struct FFortTransmogResultNotification
{
public:
	TArray<struct FMcpLootEntry>                 TransmoggedItems;                                  // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMcpLootEntry>                 RecycledItems;                                     // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortUpgradeItemRarityNotification
struct FFortUpgradeItemRarityNotification
{
public:
	TArray<struct FMcpLootEntry>                 ItemsGranted;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortConversionResultNotification
struct FFortConversionResultNotification
{
public:
	TArray<struct FMcpLootEntry>                 ItemsGranted;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCollectedResourceNotification
struct FFortCollectedResourceNotification
{
public:
	struct FMcpLootResult                        Loot;                                              // 0x0(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortReceivedGiftedBoostXpNotification
struct FFortReceivedGiftedBoostXpNotification
{
public:
	int32                                        AmountBoostXpGifted;                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EB7[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                GifterAccountId;                                   // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEarnScoreNotification
struct FFortEarnScoreNotification
{
public:
	int32                                        BaseXPEarned;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BonusXPEarned;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPEarned;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPMissed;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestXPEarned;                                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GroupBoostXPEarned;                                // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortEndMatchScoreNotification
struct FFortEndMatchScoreNotification
{
public:
	TMap<class FString, struct FFortEarnScoreNotification> ScoreNotifications;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDailyQuestRerollNotification
struct FFortDailyQuestRerollNotification
{
public:
	class FString                                NewQuestId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortQuestRewardNotification
struct FFortQuestRewardNotification
{
public:
	class FString                                QuestId;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        Loot;                                              // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortExpeditionResultNotification
struct FFortExpeditionResultNotification
{
public:
	bool                                         bExpeditionSucceeded;                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EB8[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMcpLootEntry>                 ExpeditionRewards;                                 // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortGetMcpTimeForPlayerNotification
struct FFortGetMcpTimeForPlayerNotification
{
public:
	struct FDateTime                             McpTime;                                           // 0x0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CardPackResultNotification
struct FCardPackResultNotification
{
public:
	struct FMcpLootResult                        LootGranted;                                       // 0x0(0x20)(NativeAccessSpecifierPublic)
	int32                                        DisplayLevel;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EB9[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortLootNotification
struct FFortLootNotification
{
public:
	class FString                                LootSource;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LootSourceInstance;                                // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        LootGranted;                                       // 0x20(0x20)(NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortNotificationLevelUp
struct FFortNotificationLevelUp
{
public:
	int32                                        Level;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EBA[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                HeroId;                                            // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortLootNotification                 Loot;                                              // 0x18(0x40)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCraftingResultNotification
struct FFortCraftingResultNotification
{
public:
	TArray<struct FMcpLootEntry>                 ItemsCrafted;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ImportFriendsRewardNotification
struct FImportFriendsRewardNotification
{
public:
	TArray<struct FMcpLootEntry>                 LootGranted;                                       // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortMissionCompletionNotification
struct FFortMissionCompletionNotification
{
public:
	bool                                         bWasCritical;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EBB[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                MissionName;                                       // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        LootGranted;                                       // 0x18(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CompetitiveIdentity
struct FCompetitiveIdentity
{
public:
	struct FDateTime                             LastUpdated;                                       // 0x0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RegionId;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.AthenaSeasonEntry
struct FAthenaSeasonEntry
{
public:
	int32                                        BookLevel;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookXp;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumHighBracket;                                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumLowBracket;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumWins;                                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PurchasedVIP;                                      // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EBC[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        SeasonLevel;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonNumber;                                      // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonXp;                                          // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.OfferVoteInfo
struct FOfferVoteInfo
{
public:
	struct FDateTime                             FirstVoteAt;                                       // 0x0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             LastVoteAt;                                        // 0x8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VoteCount;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EBD[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.CommunityVoteInfo
struct FCommunityVoteInfo
{
public:
	class FString                                ElectionId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FOfferVoteInfo>   VoteHistory;                                       // 0x10(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                             LastVoteGranted;                                   // 0x60(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VotesRemaining;                                    // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EBE[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortAthenaLoadoutData
struct FFortAthenaLoadoutData
{
public:
	enum class EAthenaCustomizationCategory      SlotName;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EBF[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ItemToSlot;                                        // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        IndexWithinSlot;                                   // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EC0[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.FortAthenaPastSeasonStats
struct FFortAthenaPastSeasonStats
{
public:
	int32                                        BookLevel;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BookXp;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumHighBracket;                                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumLowBracket;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumWins;                                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PurchasesVIP;                                      // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonLevel;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonNumber;                                      // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeasonXp;                                          // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortAthenaSeasonStats
struct FFortAthenaSeasonStats
{
public:
	int32                                        NumWins;                                           // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumHighBracket;                                    // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumLowBracket;                                     // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAthenaEmoteCacheRecord
struct FFortAthenaEmoteCacheRecord
{
public:
	class UFortItemDefinition*                   ItemDef;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EC1[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAthenaConsumableRecord
struct FFortAthenaConsumableRecord
{
public:
	class UFortAccountItemDefinition*            ItemType;                                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalQuantity;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EC2[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.MtxPurchaseHistoryEntry
struct FMtxPurchaseHistoryEntry
{
public:
	class FString                                PurchaseId;                                        // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OfferId;                                           // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             PurchaseDate;                                      // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             RefundDate;                                        // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FreeRefundEligible;                                // 0x30(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenRefunded;                                  // 0x31(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EC3[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMcpLootEntry>                 LootResult;                                        // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TotalMtxPaid;                                      // 0x48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EC4[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.MtxPurchaseHistory
struct FMtxPurchaseHistory
{
public:
	TArray<struct FMtxPurchaseHistoryEntry>      Purchases;                                         // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        RefundCredits;                                     // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RefundsUsed;                                       // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.GiftHistory
struct FGiftHistory
{
public:
	uint8                                        Pad_3EC5[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCommonPublicPersona
struct FFortCommonPublicPersona
{
public:
	class FString                                BannerIconId;                                      // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BannerColorId;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HomebaseName;                                      // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ItemTransferOperation
struct FItemTransferOperation
{
public:
	class FString                                ItemId;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ToStorage;                                         // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EC6[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                NewItemIdHint;                                     // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ItemIdAndQuantityPair
struct FItemIdAndQuantityPair
{
public:
	class FString                                ItemId;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EC7[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortProfileAndQuestSaveIdPair
struct FFortProfileAndQuestSaveIdPair
{
public:
	uint8                                        Pad_3EC8[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortBatchUpdatePlayer_DeployableBaseUpdate
struct FFortBatchUpdatePlayer_DeployableBaseUpdate
{
public:
	struct FUniqueNetIdRepl                      AccountId;                                         // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DeployableBaseItemId;                              // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortCloudSaveInfo                    CloudSaveInfo;                                     // 0x38(0x18)(NativeAccessSpecifierPublic)
};

// 0xF8 (0xF8 - 0x0)
// ScriptStruct FortniteGame.FortBatchUpdatePlayer_Update
struct FFortBatchUpdatePlayer_Update
{
public:
	struct FUniqueNetIdRepl                      AccountId;                                         // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TheaterNum;                                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EC9[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FMcpProfileChangeRequest              TheaterItemUpdate;                                 // 0x30(0x58)(NativeAccessSpecifierPublic)
	int32                                        OutpostNum;                                        // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ECA[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FMcpProfileChangeRequest              OutpostItemUpdate;                                 // 0x90(0x58)(NativeAccessSpecifierPublic)
	TArray<struct FFortQuestObjectiveCompletion> QuestObjectiveUpdates;                             // 0xE8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct FortniteGame.FortWorldProfileUpdateRequest
struct FFortWorldProfileUpdateRequest
{
public:
	uint8                                        Pad_3ECB[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UFortMcpProfileWorld*>          WorldProfilesToSave;                               // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ECC[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        NumberOfRequests;                                  // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ECD[0xB4];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.QuickBarSlot
struct FQuickBarSlot
{
public:
	TArray<struct FGuid>                         Items;                                             // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x10(0x1)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bIsDirty : 1;                                      // Mask: 0x2, PropSize: 0x10x10(0x1)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bIsReserved : 1;                                   // Mask: 0x4, PropSize: 0x10x10(0x1)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bIsOccupied : 1;                                   // Mask: 0x8, PropSize: 0x10x10(0x1)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_2A6 : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3ECE[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        UsedBySlotIndex;                                   // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 UsedByItemGuid;                                    // 0x18(0x10)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.QuickBar
struct FQuickBar
{
public:
	int32                                        CurrentFocusedSlot;                                // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreviousFocusedSlot;                               // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondaryFocusedSlot;                              // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ECF[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FQuickBarSlot>                 Slots;                                             // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FQuickBarData                         DataDefinition;                                    // 0x20(0x10)(Transient, RepSkip, NativeAccessSpecifierPrivate)
	TSet<class UFortItemDefinition*>             EquippedItemDefinitions;                           // 0x30(0x50)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPrivate)
	TArray<int32>                                SharedVisibleSlotIndicesWhenUsingGamepad;          // 0x80(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPrivate)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.FortWorldPlayerLoadout
struct FFortWorldPlayerLoadout
{
public:
	bool                                         bPlayerIsNew;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED0[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        PinnedSchematicInstances;                          // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FQuickBar                             PrimaryQuickBarRecord;                             // 0x18(0x90)(NativeAccessSpecifierPublic)
	struct FQuickBar                             SecondaryQuickBarRecord;                           // 0xA8(0x90)(NativeAccessSpecifierPublic)
	int32                                        ZonesCompleted;                                    // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED1[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTwitchPendingQuestNotification
struct FFortTwitchPendingQuestNotification
{
public:
	uint8                                        Pad_3ED2[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortTwitchViewerNameAndAccountId
struct FFortTwitchViewerNameAndAccountId
{
public:
	class FString                                TwitchViewerName;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AccountId;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTwitchViewerCompletedQuestNotification
struct FFortTwitchViewerCompletedQuestNotification
{
public:
	TArray<struct FFortTwitchViewerNameAndAccountId> ViewerIds;                                         // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortTwitchViewerGrantedQuestNotification
struct FFortTwitchViewerGrantedQuestNotification
{
public:
	class FString                                QuestTemplateId;                                   // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTwitchViewerNameAndAccountId> ViewerIds;                                         // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.McpMatchResults
struct FMcpMatchResults
{
public:
	int32                                        Placement;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Kills;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Deaths;                                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.QueryXboxUserXUIDParams
struct FQueryXboxUserXUIDParams
{
public:
	class FString                                UserXSTSToken;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.IssuedFriendCode
struct FIssuedFriendCode
{
public:
	class FString                                CodeId;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CodeType;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             DateCreated;                                       // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.XboxDedicatedServerSessionCreationParams
struct FXboxDedicatedServerSessionCreationParams
{
public:
	class FString                                TitleId;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SandboxId;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        XboxUserIds;                                       // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.PlayerToxicityReportRequest
struct FPlayerToxicityReportRequest
{
public:
	class FString                                Reason;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Details;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GameSessionId;                                     // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreativeIslandSharingLink;                         // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreativeIslandGuid;                                // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreativeIslandOwnerAccountId;                      // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SubGameName;                                       // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlaylistName;                                      // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCompetitiveEvent;                               // 0x80(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED3[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ReporterPlatform;                                  // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OffenderPlatform;                                  // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockUserRequested;                               // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUserMarkedAsKnown;                                // 0xA9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED4[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortTheaterColorInfo
struct FFortTheaterColorInfo
{
public:
	bool                                         bUseDifficultyToDetermineColor;                    // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED5[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FSlateColor                           Color;                                             // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertRuntimeData
struct FFortMissionAlertRuntimeData
{
public:
	class FName                                  MissionAlertCategoryName;                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRespectTileRequirements;                          // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowQuickplay;                                   // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED6[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x4E0 (0x4E0 - 0x0)
// ScriptStruct FortniteGame.FortTheaterRuntimeData
struct FFortTheaterRuntimeData
{
public:
	enum class EFortTheaterType                  TheaterType;                                       // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED7[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 TheaterTags;                                       // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 TheaterVisibilityRequirements;                     // 0x28(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x88(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class ESubGame                          RequiredSubGameForVisibility;                      // 0xE8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyMatchLinkedQuestsToTiles;                     // 0xE9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED8[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class AWorldMapPin>              WorldMapPinClass;                                  // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            TheaterImage;                                      // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   TheaterImages;                                     // 0x100(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTheaterColorInfo                 TheaterColorInfo;                                  // 0x430(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  Socket;                                            // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 MissionAlertRequirements;                          // 0x468(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionAlertRuntimeData>  MissionAlertCategoryRequirements;                  // 0x4C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        HighestDifficulty;                                 // 0x4D8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3ED9[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortLinkedQuest
struct FFortLinkedQuest
{
public:
	class UFortQuestItemDefinition*              QuestDefinition;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ObjectiveStatHandle;                               // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMissionWeight
struct FFortTheaterMissionWeight
{
public:
	TSoftClassPtr<class UFortMissionGenerator>   MissionGenerator;                                  // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EDA[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortTheaterDifficultyWeight
struct FFortTheaterDifficultyWeight
{
public:
	struct FDataTableRowHandle                   DifficultyInfo;                                    // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                LootTierGroup;                                     // 0x10(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EDB[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapTileData
struct FFortTheaterMapTileData
{
public:
	enum class EFortTheaterMapTileType           TileType;                                          // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EDC[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftClassPtr<class UFortZoneTheme>          ZoneTheme;                                         // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x30(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortLinkedQuest>              LinkedQuests;                                      // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        XCoordinate;                                       // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        YCoordinate;                                       // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterMissionWeight>     MissionWeightOverrides;                            // 0xA8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterDifficultyWeight>  DifficultyWeightOverrides;                         // 0xB8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         CanBeMissionAlert;                                 // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EDD[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 TileTags;                                          // 0xD0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapMissionData
struct FFortTheaterMapMissionData
{
public:
	TArray<struct FFortTheaterMissionWeight>     MissionWeights;                                    // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterDifficultyWeight>  DifficultyWeights;                                 // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        NumMissionsAvailable;                              // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumMissionsToChange;                               // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissionChangeFrequency;                            // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EDE[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertRequirementsInfo
struct FFortMissionAlertRequirementsInfo
{
public:
	class FName                                  CategoryName;                                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x118 (0x118 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapRegionData
struct FFortTheaterMapRegionData
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	class FName                                  UniqueId;                                          // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RegionTags;                                        // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                TileIndices;                                       // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USlateBrushAsset>       RegionThemeIcon;                                   // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTheaterMapMissionData            MissionData;                                       // 0x78(0x30)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0xA8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionAlertRequirementsInfo> MissionAlertRequirements;                          // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x578 (0x578 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapData
struct FFortTheaterMapData
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                UniqueId;                                          // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TheaterSlot;                                       // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTestTheater;                                    // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideLikeTestTheater;                              // 0x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EDF[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                RequiredEventFlag;                                 // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionRewardNamedWeightsRowName;                  // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ThreatDisplayName;                                 // 0x60(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTheaterRuntimeData               RuntimeInfo;                                       // 0x78(0x4E0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterMapTileData>       Tiles;                                             // 0x558(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterMapRegionData>     Regions;                                           // 0x568(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.FortAvailableMissionData
struct FFortAvailableMissionData
{
public:
	class FString                                MissionGuid;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionRewards;                                    // 0x10(0x20)(NativeAccessSpecifierPublic)
	struct FMcpLootResult                        BonusMissionRewards;                               // 0x30(0x20)(NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortMissionGenerator>   MissionGenerator;                                  // 0x50(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   MissionDifficultyInfo;                             // 0x78(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        TileIndex;                                         // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE0[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             AvailableUntil;                                    // 0x90(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           ItemDefinitionRefCache;                            // 0x98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAvailableTheaterMissions
struct FFortAvailableTheaterMissions
{
public:
	class FString                                TheaterId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionData>     AvailableMissions;                                 // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                             NextRefresh;                                       // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortAvailableMissionAlertData
struct FFortAvailableMissionAlertData
{
public:
	class FString                                CategoryName;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpreadDataName;                                    // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionAlertGuid;                                  // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TileIndex;                                         // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE1[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             AvailableUntil;                                    // 0x38(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             RefreshSpreadAt;                                   // 0x40(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionAlertRewards;                               // 0x48(0x20)(NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionAlertModifiers;                             // 0x68(0x20)(NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           ItemDefinitionRefCache;                            // 0x88(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortAvailableMissionAlerts
struct FFortAvailableMissionAlerts
{
public:
	class FString                                TheaterId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionAlertData> AvailableMissionAlerts;                            // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                             NextRefresh;                                       // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortActiveTheaterInfo
struct FFortActiveTheaterInfo
{
public:
	TArray<struct FFortTheaterMapData>           Theaters;                                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableTheaterMissions> Missions;                                          // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionAlerts>   MissionAlerts;                                     // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CardSlotMedalData
struct FCardSlotMedalData
{
public:
	int32                                        SlotIndex;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortAccoladeItemDefinition*           AccoladeForSlot;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoadedFromMcp;                                    // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPunched;                                          // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE3[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.MegaStormCircle
struct FMegaStormCircle
{
public:
	struct FBuildingSupportCellIndex             GridCenter;                                        // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumCellsFromCenter;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentQuadrant;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBuildingSupportCellIndex             GridAt;                                            // 0x14(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RadiusInGridCells;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XAdvanceAccumulation;                              // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        YAdvanceAccumulation;                              // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GridRadiusSquaredX4;                               // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPlots;                                          // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldCenter;                                       // 0x34(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorldRadius;                                       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE4[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<TWeakObjectPtr<class ABuildingSMActor>> ActorsInMegaStorm;                                 // 0x48(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	enum class EMegaStormState                   MegaStormState;                                    // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE5[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.NavAgentData
struct FNavAgentData
{
public:
	class FName                                  AgentName;                                         // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  BuildingActorHealthToNavAreaStrengthHandle;        // 0x8(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortMigrationDataTableRow
struct FFortMigrationDataTableRow : public FTableRowBase
{
public:
	class FString                                OldItemTemplate;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NewItemTemplate;                                   // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortMinigameTimes
struct FFortMinigameTimes
{
public:
	float                                        SetupTime;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarmupTime;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartTime;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndTime;                                           // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResetTime;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x84 (0x90 - 0xC)
// ScriptStruct FortniteGame.MinigamePlayer
struct FMinigamePlayer : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3EE6[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      UniquePlayerId;                                    // 0x10(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasValidResetData;                                // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ClassSlotIndex;                                    // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE7[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        LastClassSwitchTime;                               // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeamBeforeMinigameStarted;                         // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE8[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               LocationBeforeMinigameStarted;                     // 0x44(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationBeforeMinigameStarted;                     // 0x50(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsLocationBeforeGameStartedBlocked;               // 0x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasSkydivingBeforeMinigameStarted;                // 0x5D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasFlyingBeforeMinigameStarted;                   // 0x5E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTeleportingOrRespawningForGameplay;             // 0x5F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLocalPlayer;                                    // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreparingForRespawn;                              // 0x61(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE9[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerStartCreative*              ClaimedPlayerStart;                                // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASOLFortPlayer*                        SolPlayer;                                         // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EEA[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.MinigamePlayers
struct FMinigamePlayers : public FFastArraySerializer
{
public:
	TArray<struct FMinigamePlayer>               Players;                                           // 0x108(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	class AFortMinigame*                         Owner;                                             // 0x118(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.MinigameStatRow
struct FMinigameStatRow
{
public:
	class FText                                  PlayerName;                                        // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	int32                                        TeamColorIndex;                                    // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EEB[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FText>                          PlayerStats;                                       // 0x20(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class FText>                          CumulativePlayerStats;                             // 0x30(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         bIsTeamRow;                                        // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EEC[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortMinigameStatQuery
struct FFortMinigameStatQuery
{
public:
	TSubclassOf<class UFortMinigameStatFilter>   Stat;                                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMinigameStatScope            Scope;                                             // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAnyMatch : 1;                                     // Mask: 0x1, PropSize: 0x10x9(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2A7 : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	enum class EFortMinigameStatOperation        Operation;                                         // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EED[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Value;                                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStaticCount : 1;                                  // Mask: 0x1, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EEE[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MinigameEndCondition
struct FMinigameEndCondition
{
public:
	struct FFortMinigameStatQuery                StatQuery;                                         // 0x0(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	enum class EMinigameTeamListType             TeamListType;                                      // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EEF[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<uint8>                                TeamList;                                          // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.MinigameClassSlot
struct FMinigameClassSlot
{
public:
	uint8                                        ClassSlotIndex;                                    // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF0[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ClassName;                                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FItemAndCount>                 InventoryItems;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.MinigameTeam
struct FMinigameTeam
{
public:
	uint8                                        TeamIndex;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF1[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                TeamName;                                          // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamColorIndex;                                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxInitTeamSize;                                   // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitTeamSizeWeight;                                // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBucketAvailable;                               // 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF2[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.MinigamePlayerBucket
struct FMinigamePlayerBucket
{
public:
	uint8                                        TeamIdAtGameStart;                                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeamIdAtRoundStart;                                // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF3[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        DesiredTeamSizePercent;                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUniqueNetIdRepl>              PlayerIds;                                         // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.MinigameItemData
struct FMinigameItemData
{
public:
	TSoftObjectPtr<class UFortWorldItemDefinition> ItemDefinition;                                    // 0x0(0x28)(SaveGame, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemQuantity;                                      // 0x28(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF4[0xC];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPropertyOverrideData                 ItemOptionData;                                    // 0x38(0x50)(SaveGame, RepSkip, NativeAccessSpecifierPublic)
	int32                                        TrackedIndex;                                      // 0x88(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF5[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x2C - 0xC)
// ScriptStruct FortniteGame.TrackedObjective
struct FTrackedObjective : public FFastArraySerializerItem
{
public:
	int32                                        TrackedIndex;                                      // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeamIndex;                                         // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        OldTeamIndex;                                      // 0x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF6[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        IndicatorPresetIndex;                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProgressPercentage;                                // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TrackedState;                                      // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TrackedStateOwnerTeam;                             // 0x1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        OldTrackedState;                                   // 0x1E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ObjectiveType;                                     // 0x1F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInteractionAllowed;                             // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOldIsInteractionAllowed;                          // 0x21(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF7[0xA];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x128 - 0x108)
// ScriptStruct FortniteGame.TrackedObjectiveArray
struct FTrackedObjectiveArray : public FFastArraySerializer
{
public:
	TArray<struct FTrackedObjective>             Objectives;                                        // 0x108(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	int32                                        NextTrackedIndex;                                  // 0x118(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF8[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.MinigameScoreData
struct FMinigameScoreData
{
public:
	float                                        Score;                                             // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4 (0x8 - 0x4)
// ScriptStruct FortniteGame.MinigameTeamScoreData
struct FMinigameTeamScoreData : public FMinigameScoreData
{
public:
	uint8                                        Team;                                              // 0x4(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF9[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0x10 - 0x4)
// ScriptStruct FortniteGame.MinigameSoloScoreData
struct FMinigameSoloScoreData : public FMinigameScoreData
{
public:
	uint8                                        Pad_3EFA[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerState*                      PlayerState;                                       // 0x8(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.MinigameScoreTracker
struct FMinigameScoreTracker
{
public:
	struct FMinigameScoreData                    GroupScore;                                        // 0x0(0x4)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMinigameTeamScoreData>        TeamScores;                                        // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FMinigameSoloScoreData>        SoloScores;                                        // 0x18(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MinigameScoreTemplate
struct FMinigameScoreTemplate
{
public:
	enum class EMinigameScoreType                ScoreType;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EFC[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        NumHighScores;                                     // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAscending;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EFD[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x130 - 0x108)
// ScriptStruct FortniteGame.MinigameScoreArray
struct FMinigameScoreArray : public FFastArraySerializer
{
public:
	TArray<struct FMinigameScoreEntry>           Scores;                                            // 0x108(0x10)(Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FMinigameScoreEntry>           HighScores;                                        // 0x118(0x10)(Edit, ZeroConstructor, Transient, EditConst, RepSkip, NativeAccessSpecifierPublic)
	class AActor*                                Owner;                                             // 0x128(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.MinigameHighScoreEntryRow
struct FMinigameHighScoreEntryRow : public FTableRowBase
{
public:
	class FString                                PlayerName;                                        // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Score;                                             // 0x18(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EFE[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.MinigameHighScoreRow
struct FMinigameHighScoreRow : public FTableRowBase
{
public:
	class UDataTable*                            HighScoresTable;                                   // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.MinigameSpawnerSpawnParams
struct FMinigameSpawnerSpawnParams
{
public:
	TSoftObjectPtr<class UFortWorldItemDefinition> PickupToSpawn;                                     // 0x0(0x28)(Edit, BlueprintVisible, DisableEditOnTemplate, SaveGame, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupQuantity;                                    // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupInstigatorHandle;                            // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            SpawnTransform;                                    // 0x30(0x30)(BlueprintVisible, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MinigameScoreboardValue
struct FMinigameScoreboardValue
{
public:
	TSubclassOf<class UFortMinigameStatFilter>   StatFilter;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Value;                                             // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHighlight;                                        // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EFF[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.MingiameScoreboardRow
struct FMingiameScoreboardRow
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        TeamColorIndex;                                    // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F00[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMinigameScoreboardValue>      Values;                                            // 0x20(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        WinCount;                                          // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHighlight;                                        // 0x34(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F01[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x40 - 0x38)
// ScriptStruct FortniteGame.MinigameScoreboardPlayerRow
struct FMinigameScoreboardPlayerRow : public FMingiameScoreboardRow
{
public:
	class AFortPlayerState*                      PlayerState;                                       // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x50 - 0x38)
// ScriptStruct FortniteGame.MinigameScoreboardBucketRow
struct FMinigameScoreboardBucketRow : public FMingiameScoreboardRow
{
public:
	int32                                        Standing;                                          // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BucketIndex;                                       // 0x3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMinigameScoreboardPlayerRow>  PlayerRows;                                        // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMinigameStat
struct FFortMinigameStat
{
public:
	TSubclassOf<class UFortMinigameStatFilter>   Filter;                                            // 0x0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F02[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMinigameGroupStats
struct FFortMinigameGroupStats
{
public:
	TArray<struct FFortMinigameStat>             Stats;                                             // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x28 (0x38 - 0x10)
// ScriptStruct FortniteGame.FortMinigamePlayerStats
struct FFortMinigamePlayerStats : public FFortMinigameGroupStats
{
public:
	struct FUniqueNetIdRepl                      Player;                                            // 0x10(0x28)(Edit, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x18 - 0x10)
// ScriptStruct FortniteGame.FortMinigamePlayerBucketStats
struct FFortMinigamePlayerBucketStats : public FFortMinigameGroupStats
{
public:
	int32                                        BucketIndex;                                       // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F03[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortMinigameStatCollection
struct FFortMinigameStatCollection
{
public:
	struct FFortMinigameGroupStats               GroupStats;                                        // 0x0(0x10)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FFortMinigamePlayerStats>      PlayerStats;                                       // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FFortMinigamePlayerBucketStats> PlayerBucketStats;                                 // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
};

// 0x8 (0x18 - 0x10)
// ScriptStruct FortniteGame.FortMinigameTeamStats
struct FFortMinigameTeamStats : public FFortMinigameGroupStats
{
public:
	uint8                                        Team;                                              // 0x10(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F04[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.FortMiniMapData
struct FFortMiniMapData
{
public:
	class UTexture2D*                            MiniMapIcon;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             IconScale;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseIconSize : 1;                                  // Mask: 0x1, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsVisible : 1;                                    // Mask: 0x2, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsVisibleOnMiniMap : 1;                           // Mask: 0x4, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsVisibleOnMap : 1;                               // Mask: 0x8, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsVisibilityBasedOnTeam : 1;                      // Mask: 0x10, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowVerticalOffset : 1;                           // Mask: 0x20, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowFarOffIndicator : 1;                          // Mask: 0x40, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayIconEvenOnFogOfWar : 1;                    // Mask: 0x80, PropSize: 0x10x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowLocalOverrides : 1;                          // Mask: 0x1, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseTeamAffiliationColors : 1;                     // Mask: 0x2, PropSize: 0x10x11(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2A8 : 6;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3F05[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FLinearColor                          Color;                                             // 0x14(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FriendColor;                                       // 0x24(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          EnemyColor;                                        // 0x34(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          NeutralColor;                                      // 0x44(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PulseColor;                                        // 0x54(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ColorPulsesPerSecond;                              // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SizePulsesPerSecond;                               // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewableDistance;                                  // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x70(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Team;                                              // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F06[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortMissionFocusDisplayData
struct FFortMissionFocusDisplayData
{
public:
	class FText                                  CurrentFocusDisplayText;                           // 0x0(0x18)(NativeAccessSpecifierPublic)
	float                                        CurrentFocusPercentage;                            // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F07[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementActorPreferredTagInfo
struct FFortMissionPlacementActorPreferredTagInfo
{
public:
	struct FDataTableRowHandle                   DifficultyInfo;                                    // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PlacementActorPreferredTags;                       // 0x10(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        Difficulty;                                        // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F08[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortActiveThreatPlayerData
struct FFortActiveThreatPlayerData
{
public:
	class AFortPlayerController*                 PlayerController;                                  // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAIEncounterInfo*                  Encounter;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortReactiveQuestDialogue
struct FFortReactiveQuestDialogue
{
public:
	class UFortConversation*                     Conversation;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayOnObjectiveCount;                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F09[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x110 (0x110 - 0x0)
// ScriptStruct FortniteGame.FortRiftSpawnerData
struct FFortRiftSpawnerData
{
public:
	class ABuildingRift*                         Rift;                                              // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAIEncounterInfo*                  Encounter;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAIEncounterSequence*              EncounterSequence;                                 // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerPawn*>               PlayersInRange;                                    // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        TriggerDamagePercentage;                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F0A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AController*                           KillingInstigator;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                KillingDamageCauser;                               // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          DeactivationTimerHandle;                           // 0x40(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          BurstFallbackTimerHandle;                          // 0x48(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortEncounterSettings                OverrideSettings;                                  // 0x50(0xB8)(NativeAccessSpecifierPublic)
	bool                                         bUseOverrideSettings;                              // 0x108(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F0B[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.VehiclePlacementInfo
struct FVehiclePlacementInfo
{
public:
	TWeakObjectPtr<class AActor>                 PlacementActor;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle           AppliedGameplayEffectHandle;                       // 0x8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.MissionVehicleSpawnSet
struct FMissionVehicleSpawnSet
{
public:
	TSubclassOf<class AFortAthenaVehicle>        VehicleClass;                                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinSpawnCount;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnCount;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnOffset;                                       // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F0C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class UGameplayEffect>           OccupiedLocationGameplayEffect;                    // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OccupiedLocationGameplayEffectLevel;               // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F0D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 OccupiedLocationAdditionalContextTags;             // 0x30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x60 (0x68 - 0x8)
// ScriptStruct FortniteGame.FortMissionAlertData
struct FFortMissionAlertData : public FTableRowBase
{
public:
	class FName                                  CategoryRowName;                                   // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpreadRowName;                                     // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RequiredEventFlag;                                 // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyUsedForSpreading;                             // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F0E[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MinimumTileDifficulty;                             // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumTileDifficulty;                             // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F0F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<TSoftClassPtr<class UFortMissionGenerator>> RestrictedMissionGens;                             // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FString                                LootTierGroup;                                     // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ModifierTierGroup;                                 // 0x58(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortMissionAlertSpreadData
struct FFortMissionAlertSpreadData : public FTableRowBase
{
public:
	float                                        ChanceToSpread;                                    // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalChancesToSpread;                              // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNumTilesToSpreadTo;                             // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpreadInterval;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionAlertRowName;                               // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x68 - 0x8)
// ScriptStruct FortniteGame.FortMissionAlertCategoryData
struct FFortMissionAlertCategoryData : public FTableRowBase
{
public:
	class FName                                  CategoryRowName;                                   // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MissionAlertRepeatable;                            // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F10[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Timer;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 CategoryTagsContainer;                             // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 VisualizationTagsContainer;                        // 0x48(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortDifficultyOptionBudget
struct FFortDifficultyOptionBudget
{
public:
	struct FGameplayTagContainer                 BudgetTypeTags;                                    // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  DifficultyOptionPointsCurve;                       // 0x20(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.MissionGenerationInfo
struct FMissionGenerationInfo
{
public:
	int32                                        NumMissionsRequired;                               // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxMissionsAllowed;                                // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumMissionsGeneratedMatchingRequirements;          // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F11[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagQuery                     MissionTagRequirements;                            // 0x10(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PerDifficultyMissionGenerationInfo
struct FPerDifficultyMissionGenerationInfo
{
public:
	struct FDataTableRowHandle                   MinDifficulty;                                     // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   MaxDifficulty;                                     // 0x10(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionGenerationInfo>        MissionGenerationInfos;                            // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSpawnPadPlacementData
struct FFortPlayerSpawnPadPlacementData
{
public:
	class UEnvQuery*                             PlacementQuery;                                    // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ABuildingSMActor>        ActorToPlace;                                      // 0x8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSnapToGrid;                                       // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAdjustPlacementForFloors;                         // 0x31(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F12[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 TagsToAddToChosenPlacementActor;                   // 0x38(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortAthenaLTMConfig
struct FFortAthenaLTMConfig
{
public:
	TSoftObjectPtr<class UTexture2D>             SplashImage;                                       // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  FrontEndDescription;                               // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  DisabledMessage;                                   // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.ZoneLoadingScreenHeadingConfig
struct FZoneLoadingScreenHeadingConfig
{
public:
	class UTexture2D*                            HeadingImage;                                      // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Heading;                                           // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  HeadingDescription;                                // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x110 (0x110 - 0x0)
// ScriptStruct FortniteGame.ZoneLoadingScreenConfig
struct FZoneLoadingScreenConfig
{
public:
	TSoftObjectPtr<class UTexture2D>             BackgroundImage;                                   // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TitleDescription;                                  // 0x28(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  Title;                                             // 0x40(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FZoneLoadingScreenHeadingConfig       Headings[0x3];                                     // 0x58(0xA8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortTips*>                     LoadingTips;                                       // 0x100(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortPossibleMission
struct FFortPossibleMission
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinAlwaysGenerated;                                // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPrototype;                                      // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F13[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortMissionInfoOption
struct FFortMissionInfoOption
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDifficultyLevel;                                // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F14[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementFoundationItem
struct FFortMissionPlacementFoundationItem
{
public:
	struct FGameplayTagContainer                 ItemIdentifyingTags;                               // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToAddToChosenPlacementActorOrFoundationActor;  // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UEnvQuery*                             PlacementQuery;                                    // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ABuildingFoundation>     BuildingFoundationToPlace;                         // 0x48(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumLocationsToFind;                                // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAdjustFoundationPlacementForFloors;               // 0x74(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F15[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementActorItem
struct FFortMissionPlacementActorItem
{
public:
	struct FGameplayTagContainer                 ItemIdentifyingTags;                               // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToAddToChosenPlacementActor;                   // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UEnvQuery*                             PlacementQuery;                                    // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AActor>                  ActorToPlace;                                      // 0x48(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumLocationsToFind;                                // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnActorAutomatically;                          // 0x74(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldReserveLocations;                           // 0x75(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F16[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         bSnapToGrid;                                       // 0x77(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAdjustPlacementForFloors;                         // 0x78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDontCreateSpawnRiftsNearby;                       // 0x79(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F17[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementItems
struct FFortMissionPlacementItems
{
public:
	struct FGameplayTagContainer                 TagsToAddToChosenPlacementActors;                  // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionPlacementFoundationItem> AdditionalWorldFoundations;                        // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionPlacementActorItem> ActorsAndLocations;                                // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortTimeOfDayTheme
struct FFortTimeOfDayTheme
{
public:
	TArray<class UFortTimeOfDayCollection*>      TimeOfDayCollections;                              // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AFortTimeOfDayManager>> AdditionalTimeOfDayManagers;                       // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AFortTimeOfDayManager>> ProhibitedTimeOfDayManagers;                       // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AFortTimeOfDayManager>> ValidTimeOfDayManagers;                            // 0x30(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortWindIntensityAndDirection
struct FFortWindIntensityAndDirection
{
public:
	float                                        WindIntensity;                                     // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WindHeading;                                       // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortGlobalWindInfo
struct FFortGlobalWindInfo
{
public:
	TArray<struct FFortWindIntensityAndDirection> ValidWindInfos;                                    // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        WindIndex;                                         // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F18[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.MissionPerDifficultyProperties
struct FMissionPerDifficultyProperties
{
public:
	TArray<struct FDataTableRowHandle>           ValidDifficulties;                                 // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTimeOfDayTheme                   OverrideTimeOfDayTheme;                            // 0x10(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortGlobalWindInfo                   OverrideGlobalWindInfo;                            // 0x50(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortMissionTaggedRewards
struct FFortMissionTaggedRewards
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortWorldItemDefinition>> WorldItemDefinitions;                              // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x1D0 (0x1D0 - 0x0)
// ScriptStruct FortniteGame.FortMissionPopupWidgetData
struct FFortMissionPopupWidgetData
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bShowDescription;                                  // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F19[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  Description;                                       // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           DescriptionIcon;                                   // 0x38(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AvailableIcon;                                     // 0xC0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           UnavailableIcon;                                   // 0x148(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortObjectiveEntry
struct FFortObjectiveEntry
{
public:
	TSoftClassPtr<class AFortObjectiveBase>      ObjectiveRef;                                      // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBadgeItemDefinition*              ObjectiveRewardBadge;                              // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortObjectiveRequirement         MissionRequirement;                                // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F1A[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 ObjectiveHandle;                                   // 0x38(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortObjectiveBlock
struct FFortObjectiveBlock
{
public:
	TArray<struct FFortObjectiveEntry>           ObjectiveEntries;                                  // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortStartingMissionInfo
struct FFortStartingMissionInfo
{
public:
	TArray<class UFortMissionInfo*>              StartingMissions;                                  // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bDisableSharedMissionLoading;                      // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F1B[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortEncounterTransitionSettings
struct FFortEncounterTransitionSettings
{
public:
	bool                                         bShouldMaintainEncounterState;                     // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortEncounterProfile
struct FFortEncounterProfile
{
public:
	TSoftObjectPtr<class UFortDifficultyOptionSetEncounter> EncounterOptions;                                  // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortDifficultyOptionCategoryEncounter*> OverrideCategories;                                // 0x28(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bShouldReselectOptionsPerInstance;                 // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F1C[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x40(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortEncounterSequenceSettings
struct FFortEncounterSequenceSettings
{
public:
	struct FFortEncounterTransitionSettings      TransitionSettings;                                // 0x0(0x1)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F1D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortEncounterProfile>         EncounterSequence;                                 // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SequenceTags;                                      // 0x18(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortMissionEventReceiverByGameplayTagQuery
struct FFortMissionEventReceiverByGameplayTagQuery
{
public:
	struct FGameplayTagQuery                     TagQueryEventDiscriminator;                        // 0x0(0x48)(NativeAccessSpecifierPublic)
	class UFortMissionEventDelegateHolder*       DelegateHolder;                                    // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortMissionUIActorHandle
struct FFortMissionUIActorHandle
{
public:
	TWeakObjectPtr<class AActor>                 AttachedActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AttachmentOffset;                                  // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVisibleDistance;                                // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 MissionGuid;                                       // 0x18(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortMissionInfoIndicator> MissionUIIndicator;                                // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.StormShieldMoveData
struct FStormShieldMoveData
{
public:
	float                                        MoveRate;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation;                                    // 0x4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StartingLocation;                                  // 0x10(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafeAreaStartLocationChangeTime;                   // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafeAreaFinishLocationChangeTime;                  // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.StormShieldRadiusGrowthData
struct FStormShieldRadiusGrowthData
{
public:
	float                                        TargetRadius;                                      // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartingRadius;                                    // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GrowthRate;                                        // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafeAreaStartRadiusChangeTime;                     // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafeAreaFinishRadiusChangeTime;                    // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMissionStormShieldState          State;                                             // 0x14(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F1E[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.MissionTimeDisplayData
struct FMissionTimeDisplayData
{
public:
	float                                        LessThanTimeValue;                                 // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideTimer;                                        // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F1F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FLinearColor                          BaseColor;                                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PulseColor;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ColorPulsesPerSecond;                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MissionTimerData
struct FMissionTimerData
{
public:
	bool                                         bTimerIsPaused;                                    // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F20[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        OriginalTimePeriod;                                // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicatedRemainingTime;                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeAddedOrRemoved;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastTimeAddedOrRemoved;                            // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClientRemainingTime;                               // 0x14(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F21[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortMissionWeightedReward
struct FFortMissionWeightedReward
{
public:
	class FName                                  LootTierGroup;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LootIcon;                                          // 0x8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F22[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.SectionNameAndWeight
struct FSectionNameAndWeight
{
public:
	class FName                                  SectionName;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SectionWeight;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.MontageLookupData
struct FMontageLookupData
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x0(0x20)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAnimMontage>           AnimMontage;                                       // 0x20(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MountedWeaponInfoRepped
struct FMountedWeaponInfoRepped
{
public:
	class AActor*                                HostVehicleCachedActor;                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HostVehicleSeatIndexCached;                        // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F23[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MountedWeaponInfo
struct FMountedWeaponInfo
{
public:
	TArray<class AActor*>                        TraceIgnoreActors;                                 // 0x0(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	float                                        ThirdPersonDistanceCorrection;                     // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThirdPersonDistanceCorrectionPawn;                 // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDamageStartFromWeaponTowardFocus;                 // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTargetSourceFromVehicleMuzzle;                    // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F24[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MinReticleAlphaForAimInterpolation;                // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAimAngleDiffForReticleAlpha;                    // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAimAngleDiffForReticleAlpha;                    // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedsVehicleAttachment;                           // 0x28(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F25[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        AttachAttemptCount;                                // 0x2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.WaterSprintBoostParams
struct FWaterSprintBoostParams
{
public:
	struct FScalableFloat                        RequiredDepth;                                     // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TriggerAboveDepth;                                 // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TriggerAtVelocity;                                 // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PreventAtVelocity;                                 // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Duration;                                          // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpeed;                                          // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.WaterJumpParams
struct FWaterJumpParams
{
public:
	struct FScalableFloat                        WaterJumpMinVelocityZ;                             // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterJumpMaxVelocityZ;                             // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterJumpForceZ;                                   // 0x40(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        JumpForceDuration;                                 // 0x60(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x540 (0x540 - 0x0)
// ScriptStruct FortniteGame.WaterControlParams
struct FWaterControlParams
{
public:
	struct FScalableFloat                        MinImmersionDepth;                                 // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TargetImmersionDepth;                              // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxImmersionDepth;                                 // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CancelCrouchImmersionDepth;                        // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DBNOSwimImmersionDepth;                            // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxAcceleration;                                   // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxAccelerationSprinting;                          // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BrakingDeceleration;                               // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxNormalSpeed;                                    // 0x100(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSprintSpeed;                                    // 0x120(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSprintJumpSpeed;                                // 0x140(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SprintJumpAirAccelAngleLimit;                      // 0x160(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SprintRetriggerDelay;                              // 0x180(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SprintDelayAfterFiring;                            // 0x1A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxTargetingSpeed;                                 // 0x1C0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BackwardsSpeedMultiplier;                          // 0x1E0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BackwardsSpeedCosAngle;                            // 0x200(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AngledSpeedMultiplier;                             // 0x220(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AngledSpeedCosAngle;                               // 0x240(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Friction;                                          // 0x260(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FrictionSprinting;                                 // 0x280(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FrictionDirectionChangeDot;                        // 0x2A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FrictionDirectionChangeMultiplier;                 // 0x2C0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpeedUp;                                        // 0x2E0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpeedDown;                                      // 0x300(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxHorizontalEntrySpeed;                           // 0x320(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterForceMultiplier;                              // 0x340(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterForceSecondMultiplier;                        // 0x360(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxWaterForce;                                     // 0x380(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterVelocityDepthForMax;                          // 0x3A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterVelocityMinMultiplier;                        // 0x3C0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterSimMaxTimeStep;                               // 0x3E0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterSimSubStepTime;                               // 0x400(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BobbingMaxForce;                                   // 0x420(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BobbingIdealDepthTolerance;                        // 0x440(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BobbingFrictionDown;                               // 0x460(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BobbingExpDragDown;                                // 0x480(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BobbingFrictionDownSubmerged;                      // 0x4A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BobbingExpDragDownSubmerged;                       // 0x4C0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BobbingFrictionUp;                                 // 0x4E0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BobbingExpDragUp;                                  // 0x500(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BoostDragMultiplier;                               // 0x520(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x100 (0x100 - 0x0)
// ScriptStruct FortniteGame.AirControlParams
struct FAirControlParams
{
public:
	struct FScalableFloat                        MaxAcceleration;                                   // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LateralFriction;                                   // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxLateralSpeed;                                   // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TerminalVelocity;                                  // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        UpwardTerminalVelocity;                            // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravityScalar;                                     // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CustomGravityCeiling;                              // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CustomGravityCeilingWidth;                         // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaJumpPenalty
struct FAthenaJumpPenalty
{
public:
	float                                        JumpScalar;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementScalar;                                    // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.GroundSplineSpeedData
struct FGroundSplineSpeedData
{
public:
	float                                        Speed;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Acceleration;                                      // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawSpeed;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawAcceleration;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Timestamp;                                         // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.GroundSplineMovement
struct FGroundSplineMovement
{
public:
	float                                        DistanceAlongSpline;                               // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F26[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class USplineComponent*                      SplineComponent;                                   // 0x8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Timestamp;                                         // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F27[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMtxPlatformList
struct FFortMtxPlatformList
{
public:
	TArray<enum class EFortMtxPlatform>          MtxPlatformList;                                   // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortMusicSection
struct FFortMusicSection
{
public:
	class USoundBase*                            Sound;                                             // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInTime;                                        // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTime;                                       // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialOffset;                                     // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.QueuedMusic
struct FQueuedMusic
{
public:
	uint8                                        Pad_3F28[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MutatorAbilitySetEntry
struct FMutatorAbilitySetEntry
{
public:
	TArray<struct FFortAbilitySetHandle>         AppliedAbilitySetHandles;                          // 0x0(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.MutatorContext
struct FMutatorContext
{
public:
	TArray<class AActor*>                        MutatorOwners;                                     // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F29[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.NativizationCachedFieldsToCompare
struct FNativizationCachedFieldsToCompare
{
public:
	uint8                                        Pad_3F2A[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortPortableSoftParticles
struct FFortPortableSoftParticles
{
public:
	enum class EFXType                           FXType;                                            // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F2B[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UNiagaraSystem>         NiagaraVersion;                                    // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        CascadeVersion;                                    // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.VerifyProfileTokenPayload
struct FVerifyProfileTokenPayload
{
public:
	TMap<class FString, class FString>           ProfileTokens;                                     // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.RestrictedCountry
struct FRestrictedCountry
{
public:
	bool                                         bHealthWarningShown;                               // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAntiAddictionMessageShown;                        // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRealMoneyStoreRestriction;                        // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGameplayRestrictions;                             // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.GeneralChatRoom
struct FGeneralChatRoom
{
public:
	class FString                                RoomName;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMembersCount;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxMembersCount;                                   // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PublicFacingShardName;                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.GeneralChatReturn
struct FGeneralChatReturn
{
public:
	TArray<struct FGeneralChatRoom>              GlobalChatRooms;                                   // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGeneralChatRoom>              FounderChatRooms;                                  // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bNeedsPaidAccessForGlobalChat;                     // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedsPaidAccessForFounderChat;                    // 0x21(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGlobalChatDisabled;                             // 0x22(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFounderChatDisabled;                            // 0x23(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSubGameGlobalChatDisabled;                      // 0x24(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F2C[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x34 (0x34 - 0x0)
// ScriptStruct FortniteGame.FortAnimInput_TurnCorrection
struct FFortAnimInput_TurnCorrection
{
public:
	struct FFortCachedFloatCurve                 RotationCurve;                                     // 0x0(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        YawCorrectionOffset;                               // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawCorrectionOffset;                            // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterMeshYawOffset;                            // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurveMultiplier;                                   // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterInitialWorldYaw;                          // 0x1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterWorldYawLastFrame;                        // 0x20(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccumulatedAnimationYaw;                           // 0x24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalYawFromCurve;                                 // 0x28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationCurveYawLastFrame;                         // 0x2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableDebug;                                      // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTurnFinished;                                   // 0x31(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F2D[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.OutpostBuildingData
struct FOutpostBuildingData
{
public:
	TSoftObjectPtr<class UFortOutpostItemDefinition> ItemDefinition;                                    // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OutpostPrestigeEffects
struct FOutpostPrestigeEffects
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   EnemyPrestigeEffect;                               // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OutpostPOSTBoost
struct FOutpostPOSTBoost
{
public:
	struct FCurveTableRowHandle                  PlayerStructureHealthModPerPOSTLevel;              // 0x0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.OutpostUpgradesPerTheaterData
struct FOutpostUpgradesPerTheaterData
{
public:
	int32                                        TheaterSlot;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F2E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UDataTable*                            OutpostUpgradesData;                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.OutpostPrestigeEffectsPerTheater
struct FOutpostPrestigeEffectsPerTheater
{
public:
	int32                                        TheaterSlot;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F2F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FOutpostPrestigeEffects               PrestigeEffects;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.OutpostPOSTPerTheaterData
struct FOutpostPOSTPerTheaterData
{
public:
	int32                                        TheaterSlot;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F30[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FOutpostPOSTBoost                     POSTData;                                          // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x90 - 0x28)
// ScriptStruct FortniteGame.OutpostUpgradeAndPrestigeBuildingData
struct FOutpostUpgradeAndPrestigeBuildingData : public FOutpostBuildingData
{
public:
	int32                                        MaxPrestigeLevel;                                  // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F31[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UDataTable*                            DefaultOutpostBuildingUpgradeData;                 // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOutpostUpgradesPerTheaterData> PerTheaterOutpostBuildingUpgradeData;              // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOutpostPrestigeEffects               DefaultPrestigeData;                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FOutpostPrestigeEffectsPerTheater> PrestigePerTheaterData;                            // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FOutpostPOSTBoost                     DefaultPOSTData;                                   // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FOutpostPOSTPerTheaterData>    POSTPerTheaterData;                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           POSTBuildingGameplayEffectClass;                   // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x38 - 0x28)
// ScriptStruct FortniteGame.StorageVaultBuildingData
struct FStorageVaultBuildingData : public FOutpostBuildingData
{
public:
	TArray<int32>                                ItemCapacityPerLevel;                              // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x0 (0x28 - 0x28)
// ScriptStruct FortniteGame.HarvestingOptimizerBuildingData
struct FHarvestingOptimizerBuildingData : public FOutpostBuildingData
{
public:
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.OutpostItemUpgradeData
struct FOutpostItemUpgradeData : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFortOutpostItemDefinition> ItemDefinition;                                    // 0x8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemLevel;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F32[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                RequiredItems;                                     // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RequiredAccountItems;                              // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortDepositedResources
struct FFortDepositedResources
{
public:
	class FString                                TemplateId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F33[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortOutpostPOSTInfo
struct FFortOutpostPOSTInfo
{
public:
	TArray<struct FFortDepositedResources>       DepositedPostItems;                                // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.PlayerSquadMapping
struct FPlayerSquadMapping
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerID;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CustomMatchKey;                                    // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       TeamId;                                            // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       PartyId;                                           // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SeatId;                                            // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F34[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.EmptyServerReservation
struct FEmptyServerReservation
{
public:
	int32                                        PlaylistId;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F35[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ZoneInstanceId;                                    // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WUID;                                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      WorldDataOwner;                                    // 0x28(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMakePrivate;                                      // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMatchmakingPool              MatchmakingPool;                                   // 0x51(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsesMatchmakingV2;                                // 0x52(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F36[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.AthenaBatchedDamageGameplayCues_NonShared
struct FAthenaBatchedDamageGameplayCues_NonShared
{
public:
	class AActor*                                HitActor;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                NonPlayerHitActor;                                 // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x44 (0x44 - 0x0)
// ScriptStruct FortniteGame.AthenaBatchedDamageGameplayCues_Shared
struct FAthenaBatchedDamageGameplayCues_Shared
{
public:
	struct FVector_NetQuantize10                 Location;                                          // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             Normal;                                            // 0xC(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Magnitude;                                         // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponActivate;                                   // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFatal;                                          // 0x1D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCritical;                                       // 0x1E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShield;                                         // 0x1F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShieldDestroyed;                                // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShieldApplied;                                  // 0x21(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBallistic;                                      // 0x22(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F37[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector_NetQuantize10                 NonPlayerLocation;                                 // 0x24(0xC)(RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             NonPlayerNormal;                                   // 0x30(0xC)(RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NonPlayerMagnitude;                                // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NonPlayerbIsFatal;                                 // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NonPlayerbIsCritical;                              // 0x41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsValid;                                          // 0x42(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F38[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct FortniteGame.FortPawnVocalChord
struct FFortPawnVocalChord
{
public:
	class UAudioComponent*                       FeedbackAudioComponent;                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortSpokenLine                       ReplicatedSpokenLine;                              // 0x8(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	struct FFortSpokenLine                       PendingSpokenLine;                                 // 0x38(0x30)(RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortSpokenLine                       QueuedSpokenLine;                                  // 0x68(0x30)(RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortSpokenLine                       CurrentSpokenLine;                                 // 0x98(0x30)(RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F39[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AssetAttachment
struct FAssetAttachment
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SkeletalMeshAsset;                                 // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StaticMeshAsset;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipOnDedicatedServers;                           // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F3A[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class USkeletalMeshComponentBudgeted*        SkelMeshComp;                                      // 0x20(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x28(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.CalloutEntry
struct FCalloutEntry
{
public:
	struct FGameplayTag                          CalloutTag;                                        // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           CalloutIcon;                                       // 0x8(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PawnDamageZones
struct FPawnDamageZones
{
public:
	bool                                         bActive;                                           // 0x0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F3B[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FName>                          Bones;                                             // 0x8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.DamageDoneSourceInfo
struct FDamageDoneSourceInfo
{
public:
	struct FGameplayTagContainer                 TrackedSourceTags;                                 // 0x0(0x20)(NativeAccessSpecifierPublic)
	float                                        DamageAmount;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F3C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.DamageDoneTargetInfo
struct FDamageDoneTargetInfo
{
public:
	struct FGameplayTagContainer                 TrackedTargetTags;                                 // 0x0(0x20)(NativeAccessSpecifierPublic)
	TArray<struct FDamageDoneSourceInfo>         TrackedSourceData;                                 // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.DamageDoneInfo
struct FDamageDoneInfo
{
public:
	struct FGameplayTagContainer                 TrackedDamageTagGrouping;                          // 0x0(0x20)(NativeAccessSpecifierPublic)
	float                                        DamageAmount;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F3D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.DamagerInfo
struct FDamagerInfo
{
public:
	class AActor*                                DamageCauser;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamageAmount;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F3E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 SourceTags;                                        // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BuildingHitTime
struct FBuildingHitTime
{
public:
	class ABuildingActor*                        HitBuilding;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F3F[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortMantisAttackState
struct FFortMantisAttackState
{
public:
	uint8                                        Pad_3F40[0x28];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortMantisMontageData
struct FFortMantisMontageData
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F41[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortMantisAttackData
struct FFortMantisAttackData
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartsSequence;                                   // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEndsSequence;                                     // 0x9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F42[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FName>                          LeadInAttacks;                                     // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                          Montage;                                           // 0x20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     OwnerTagQuery;                                     // 0x28(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ApplicationTag;                                    // 0x70(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.ScriptedAction
struct FScriptedAction
{
public:
	class FString                                Template;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Params;                                            // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>           ParamMap;                                          // 0x20(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ScriptedBehavior
struct FScriptedBehavior
{
public:
	class FString                                ScriptName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FScriptedAction>               Actions;                                           // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortBadMatchTrigger
struct FFortBadMatchTrigger
{
public:
	class FName                                  Key;                                               // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBadMatchTriggerOperation     Operation;                                         // 0x8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F43[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	double                                       Value;                                             // 0x10(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          Playlists;                                         // 0x18(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	enum class EFortBadMatchTeamSize             TeamSize;                                          // 0x28(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F44[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortPresenceGameplayStats
struct FFortPresenceGameplayStats
{
public:
	class FString                                State;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Playlist;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumKills;                                          // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFellToDeath;                                      // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F45[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortPresenceBasicInfo
struct FFortPresenceBasicInfo
{
public:
	int32                                        HomeBaseRating;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortZoneInstanceInfo
struct FFortZoneInstanceInfo
{
public:
	class FString                                WorldId;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TheaterId;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TheaterMissionId;                                  // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TheaterMissionAlertId;                             // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortZoneTheme>          ZoneThemeClass;                                    // 0x40(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0x128 - 0x68)
// ScriptStruct FortniteGame.FortZoneInstanceDetails
struct FFortZoneInstanceDetails : public FFortZoneInstanceInfo
{
public:
	TSoftClassPtr<class UFortMissionGenerator>   MissionGenerator;                                  // 0x68(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ZoneDifficultyInfo;                                // 0x90(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionRewards;                                    // 0xA0(0x20)(NativeAccessSpecifierPublic)
	TArray<struct FMcpLootResult>                DifficultyIncreaseMissionRewards;                  // 0xC0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMcpLootResult                        MissionAlertRewards;                               // 0xD0(0x20)(NativeAccessSpecifierPublic)
	struct FMcpLootResult                        ZoneModifiers;                                     // 0xF0(0x20)(NativeAccessSpecifierPublic)
	class FString                                MissionAlertCategoryName;                          // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TileIndex;                                         // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F46[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSavedModeLoadout
struct FFortSavedModeLoadout
{
public:
	class FString                                LoadoutName;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        SelectedGadgets;                                   // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PetResponseFromQuestSystem
struct FPetResponseFromQuestSystem
{
public:
	struct FDataTableRowHandle                   ObjectiveStatHandle;                               // 0x0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ResponseTag;                                       // 0x10(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResponseDuration;                                  // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F47[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VehicleSafeTeleportInfo
struct FVehicleSafeTeleportInfo
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortPickupLocationData
struct FFortPickupLocationData
{
public:
	class AFortPawn*                             PickupTarget;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                           CombineTarget;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                             ItemOwner;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 LootInitialPosition;                               // 0x18(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 LootFinalPosition;                                 // 0x24(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyTime;                                           // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             StartDirection;                                    // 0x34(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                 FinalTossRestLocation;                             // 0x40(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortPickupTossState              TossState;                                         // 0x4C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayPickupSound;                                  // 0x4D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F48[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGuid                                 PickupGuid;                                        // 0x50(0x10)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPickupEntryData
struct FFortPickupEntryData
{
public:
	struct FInterpCurveFloat                     FloatCurve;                                        // 0x0(0x18)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 PickupGuid;                                        // 0x18(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StartTime;                                         // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F49[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.PickupInstigatorData
struct FPickupInstigatorData
{
public:
	uint8                                        TeamIndex;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETeamAttitude                     TargetAttitude;                                    // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F4A[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        AccentColorParam;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScoreValue;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F4B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPropertyOverrideData                 ItemOptionData;                                    // 0x10(0x50)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortPickup>               OverridePickupClass;                               // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x94 (0xA0 - 0xC)
// ScriptStruct FortniteGame.PickupInstigator
struct FPickupInstigator : public FFastArraySerializerItem
{
public:
	int32                                        TrackedIndex;                                      // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPickupInstigatorData                 InstigatorData;                                    // 0x10(0x68)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F4C[0x28];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC0 (0x1C8 - 0x108)
// ScriptStruct FortniteGame.PickupInstigatorArray
struct FPickupInstigatorArray : public FFastArraySerializer
{
public:
	TArray<struct FPickupInstigator>             Items;                                             // 0x108(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	int32                                        NextTrackedIndex;                                  // 0x118(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F4D[0xAC];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortCameraModeOverride
struct FFortCameraModeOverride
{
public:
	TSubclassOf<class UFortCameraMode>           OriginalClass;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           ClassOverride;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortCameraPrototype
struct FFortCameraPrototype
{
public:
	class FName                                  PrototypeName;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PrototypeDescription;                              // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortCameraModeOverride>       ModeOverrides;                                     // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCameraInstanceEntry
struct FFortCameraInstanceEntry
{
public:
	TSubclassOf<class UFortCameraMode>           CameraClass;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ViewTarget;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCameraMode*                       Camera;                                            // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ActiveFortCamera
struct FActiveFortCamera
{
public:
	class UFortCameraMode*                       Camera;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ViewTarget;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionAlpha;                                   // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionUpdateRate;                              // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendWeight;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F4E[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortPipTest
struct FFortPipTest : public FTableRowBase
{
public:
	class UMediaPlayer*                          MediaPlayer;                                       // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStreamMediaSource*                    StreamMediaSource;                                 // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                WidgetClass;                                       // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.CreativeToolPersistentData
struct FCreativeToolPersistentData
{
public:
	uint8                                        GridSnapIndex;                                     // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RotationAxisIndex;                                 // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SelectedScaleAxis;                                 // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldUsePrecisionGridSnapping;                   // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowGravityOnPlace;                              // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldDestroyPropsWhenPlacing;                    // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        HitTraceRule;                                      // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsScalingInsteadOfRotating;                       // 0x7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ServerSideHitMarker
struct FServerSideHitMarker
{
public:
	uint8                                        Pad_3F4F[0x28];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VoiceChatUsageAnalytics
struct FVoiceChatUsageAnalytics
{
public:
	uint8                                        Pad_3F50[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.CraftingQueueInfo
struct FCraftingQueueInfo
{
public:
	uint8                                        Pad_3F51[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x44 (0x50 - 0xC)
// ScriptStruct FortniteGame.XPEventEntry
struct FXPEventEntry : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3F52[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  SimulatedXpEvent;                                  // 0x10(0x18)(NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              QuestDef;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       Accolade;                                          // 0x30(0x10)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventXpValue;                                      // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalXpEarnedInMatch;                              // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F53[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.XPEventArray
struct FXPEventArray : public FFastArraySerializer
{
public:
	TArray<struct FXPEventEntry>                 Entries;                                           // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortPlayerControllerAthenaXPComponent* ParentComp;                                        // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.XPUIEvent
struct FXPUIEvent
{
public:
	class UFortAccoladeItemDefinition*           AccoladeDef;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SimulatedXpEvent;                                  // 0x8(0x18)(NativeAccessSpecifierPublic)
	int32                                        OldXPValue;                                        // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventXpValue;                                      // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.HighlightReel
struct FHighlightReel
{
public:
	int32                                        TotalDurationSeconds;                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F54[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  Description;                                       // 0x8(0x18)(NativeAccessSpecifierPublic)
	enum class EHighlightReelTypes               HighlightType;                                     // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F55[0x17];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortInputActionThatShouldAlwaysBeBound
struct FFortInputActionThatShouldAlwaysBeBound
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AlternateActionNames;                              // 0x8(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortInputActionGroupContext
struct FFortInputActionGroupContext
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInputActionGroup             InputActionGroup;                                  // 0x8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F56[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortAxisSmoothing
struct FFortAxisSmoothing
{
public:
	float                                        ZeroTime;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AverageValue;                                      // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Samples;                                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TotalSampleTime;                                   // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortInputActionKeyAlias
struct FFortInputActionKeyAlias
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                  KeyAlias;                                          // 0x8(0x18)(Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInputActionType              InputActionType;                                   // 0x20(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F57[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MorphValuePair
struct FMorphValuePair
{
public:
	class FName                                  MorphName;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MorphValue;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.IgnoreCollisionActor
struct FIgnoreCollisionActor
{
public:
	class AActor*                                IgnoreActor;                                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeIgnoreStarted;                                 // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IgnoreDuration;                                    // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortFootstepBankOverrideData
struct FFortFootstepBankOverrideData
{
public:
	uint8                                        Pad_3F58[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAnimBPOverrideData
struct FFortAnimBPOverrideData
{
public:
	uint8                                        Pad_3F59[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCachedWeaponOverheatData
struct FFortCachedWeaponOverheatData
{
public:
	float                                        TimeWeaponWasUnequipped;                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverheatValueAtUneqip;                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverheatValue;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F5A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        TimeOverheatedBegan;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeHeatWasLastAdded;                              // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortRedeployGliderTelemetryData
struct FFortRedeployGliderTelemetryData
{
public:
	uint8                                        Pad_3F5B[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x160 (0x160 - 0x0)
// ScriptStruct FortniteGame.SlipperySlopeParams
struct FSlipperySlopeParams
{
public:
	struct FScalableFloat                        SlopeForceAcceleration;                            // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxLateralSpeed;                                   // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxLateralSpeedMultiplierInWater;                  // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BrakingDecelerationInWater;                        // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxVerticalLaunchSpeed;                            // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLandingForceScalar;                           // 0xA0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLandingMaxHorizontalForce;                    // 0xC0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLaunchMinRequiredSpeed;                       // 0xE0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLaunchMinRequiredAngleChange;                 // 0x100(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLaunchVerticalVelocityBoost;                  // 0x120(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SlopeLaunchVerticalVelocityBoostMultiplierJumping; // 0x140(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.VortexParams
struct FVortexParams
{
public:
	float                                        GravityFloorAltitude;                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityFloorWidth;                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityFloorGravityScalar;                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityFloorTerminalVelocity;                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ZiplinePawnState
struct FZiplinePawnState
{
public:
	class AFortAthenaZipline*                    Zipline;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsZiplining;                                      // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJumped;                                           // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F5C[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        AuthoritativeValue;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SocketOffset;                                      // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeZipliningBegan;                                // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeZipliningEndedFromJump;                        // 0x20(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F5D[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.VehiclePawnState
struct FVehiclePawnState
{
public:
	class AActor*                                Vehicle;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleApexZ;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SeatIndex;                                         // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ExitSocketIndex;                                   // 0xD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideVehicleExit;                              // 0xE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F5E[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               SeatTransitionVector;                              // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EntryTime;                                         // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RepFortMeshAttachment
struct FRepFortMeshAttachment
{
public:
	class USkeletalMesh*                         SkeletalMesh;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimBlueprint*                        AnimBP;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortCharacterPartsRepMontageInfo
struct FFortCharacterPartsRepMontageInfo
{
public:
	TArray<struct FFortCharacterPartMontageInfo> CharPartMontages;                                  // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                          PawnMontage;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayBit;                                          // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F5F[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0xC8 - 0xA8)
// ScriptStruct FortniteGame.FortPlayerPawnStats
struct FFortPlayerPawnStats : public FFortPawnStats
{
public:
	float                                        MaxJumpTime;                                       // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxStamina;                                        // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StaminaRegenRate;                                  // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StaminaRegenDelay;                                 // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprintingStaminaExpenditureRate;                   // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PersonalVehicleFallingDamageTableRow;              // 0xBC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F60[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDBNOCarryHoisterData
struct FFortDBNOCarryHoisterData
{
public:
	class AFortPlayerPawn*                       DBNOHoister;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDBNOCarryEvent               DBNOCarryEvent;                                    // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F61[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.CustomHighlighting
struct FCustomHighlighting
{
public:
	uint8                                        Pad_3F62[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.SavedPosition
struct FSavedPosition
{
public:
	uint8                                        Pad_3F63[0x2C];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPlayerAthenaAttributeReplicationProxy
struct FFortPlayerAthenaAttributeReplicationProxy
{
public:
	float                                        WalkSpeed;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunSpeed;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintSpeed;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlySpeed;                                          // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchedRunSpeed;                                  // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchedSprintSpeed;                               // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.SharedRepMovement
struct FSharedRepMovement
{
public:
	struct FRepMovement                          RepMovement;                                       // 0x0(0x34)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RepTimeStamp;                                      // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurretYaw;                                         // 0x38(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurretPitch;                                       // 0x3C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       RemoteViewData32;                                  // 0x40(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                       AccelerationPack;                                  // 0x44(0x2)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                         AccelerationZPack;                                 // 0x46(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RepMovementMode;                                   // 0x47(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        JumpFlashCountPacked;                              // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LandingFlashCountPacked;                           // 0x49(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMovementStyle                CurrentMovementStyle;                              // 0x4A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProxyIsJumpForceApplied;                          // 0x4B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCrouched;                                       // 0x4C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSkydiving;                                      // 0x4D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsParachuteOpen;                                  // 0x4E(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSlopeSliding;                                   // 0x4F(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsProxySimulationTimedOut;                        // 0x50(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTargeting;                                      // 0x51(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWaterJump;                                      // 0x52(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWaterSprintBoost;                               // 0x53(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWaterSprintBoostPending;                        // 0x54(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F64[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.AthenaPawnReplayData
struct FAthenaPawnReplayData
{
public:
	float                                        HealthRatio;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldRatio;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                CipherText;                                        // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UWorld*                                World;                                             // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F65[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.PetStimuliRepData
struct FPetStimuliRepData
{
public:
	struct FGameplayTag                          Stimuli;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GameTimeEnd;                                       // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortVehicleUseTelemetryInfo
struct FFortVehicleUseTelemetryInfo
{
public:
	uint8                                        Pad_3F66[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswer
struct FFortPlayerSurveyAnalyticsAnswer
{
public:
	uint8                                        Pad_3F67[0x20];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsSurveyResponse
struct FFortPlayerSurveyAnalyticsSurveyResponse
{
public:
	class FString                                SurveyID;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortPlayerSurveyAnalyticsFinishReason FinishReason;                                      // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F68[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FJsonObjectWrapper                    MetaData;                                          // 0x18(0x20)(NativeAccessSpecifierPublic)
	TArray<struct FFortPlayerSurveyAnalyticsAnswer> Answers;                                           // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerBase
struct FFortPlayerSurveyAnalyticsAnswerBase
{
public:
	uint32                                       TimeTaken;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x18 - 0x4)
// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerFreeFormText
struct FFortPlayerSurveyAnalyticsAnswerFreeFormText : public FFortPlayerSurveyAnalyticsAnswerBase
{
public:
	uint8                                        Pad_3F69[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                AnswerText;                                        // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerMultipleSelectionSingleAnswer
struct FFortPlayerSurveyAnalyticsAnswerMultipleSelectionSingleAnswer
{
public:
	bool                                         Selected;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F6A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	uint32                                       TimeTaken;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x18 - 0x4)
// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerMultipleSelection
struct FFortPlayerSurveyAnalyticsAnswerMultipleSelection : public FFortPlayerSurveyAnalyticsAnswerBase
{
public:
	uint8                                        Pad_3F6B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortPlayerSurveyAnalyticsAnswerMultipleSelectionSingleAnswer> AnswerList;                                        // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x8 - 0x4)
// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerMultipleChoice
struct FFortPlayerSurveyAnalyticsAnswerMultipleChoice : public FFortPlayerSurveyAnalyticsAnswerBase
{
public:
	int32                                        AnswerIndex;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyAnswerBase
struct FFortPlayerSurveyAnswerBase
{
public:
	struct FTimespan                             TimeSpentAnswering;                                // 0x0(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortPlayerSurveyAnswerFreeFormText
struct FFortPlayerSurveyAnswerFreeFormText : public FFortPlayerSurveyAnswerBase
{
public:
	class FString                                AnswerText;                                        // 0x8(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct FortniteGame.FortPlayerSurveyAnswerMultipleChoice
struct FFortPlayerSurveyAnswerMultipleChoice : public FFortPlayerSurveyAnswerBase
{
public:
	int32                                        AnswerIndex;                                       // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F6C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyAnswerMultipleSelectionSingleAnswer
struct FFortPlayerSurveyAnswerMultipleSelectionSingleAnswer
{
public:
	bool                                         bSelected;                                         // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F6D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTimespan                             TimeTaken;                                         // 0x8(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortPlayerSurveyAnswerMultipleSelection
struct FFortPlayerSurveyAnswerMultipleSelection : public FFortPlayerSurveyAnswerBase
{
public:
	TArray<struct FFortPlayerSurveyAnswerMultipleSelectionSingleAnswer> AnswerList;                                        // 0x8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyCMSSurveyKey
struct FFortPlayerSurveyCMSSurveyKey
{
public:
	class FString                                ID;                                                // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyDescriptionMessage
struct FFortPlayerSurveyDescriptionMessage
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Message;                                           // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyDescription
struct FFortPlayerSurveyDescription
{
public:
	class FText                                  SurveyTitle;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFortPlayerSurveyDescriptionMessage   CancelConfirmationMessage;                         // 0x18(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        DefaultAnswer;                                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F6E[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyMcpDataSurveyMetadata
struct FFortPlayerSurveyMcpDataSurveyMetadata
{
public:
	int32                                        NumTimesCompleted;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F6F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             LastTimeCompleted;                                 // 0x8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyMcpDataRoot
struct FFortPlayerSurveyMcpDataRoot
{
public:
	struct FFortPlayerSurveyMcpDataSurveyMetadata AllSurveysMetadata;                                // 0x0(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFortPlayerSurveyMcpDataSurveyMetadata> MetaData;                                          // 0x10(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPlayerSurveyQuestionChoice
struct FFortPlayerSurveyQuestionChoice
{
public:
	class FText                                  ChoiceText;                                        // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.VehicleTrickLocalAxisRotInfo
struct FVehicleTrickLocalAxisRotInfo
{
public:
	float                                        Angle;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AccumulatedHalfSpinCount;                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccumulatedAngle;                                  // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleAtFurthestExtent;                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TrickOrder;                                        // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Points;                                            // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.QueryName
struct FQueryName
{
public:
	class FName                                  QueryName;                                         // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.NamedWeightTableRow
struct FNamedWeightTableRow : public FTableRowBase
{
public:
	struct FQueryName                            QueryName;                                         // 0x8(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Weight;                                            // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F70[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.RatingExpansion
struct FRatingExpansion
{
public:
	int32                                        Priority;                                          // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RatingDelta;                                       // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.AthenaScoreData
struct FAthenaScoreData
{
public:
	enum class EAthenaScoringEvent               ScoringEvent;                                      // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F71[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  ScoreNameText;                                     // 0x8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 EventInclusionTags;                                // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        NumOccurrencesForScore;                            // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOccurrencesPermitted;                           // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ScoreAwarded;                                      // 0x48(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.WinConditionScoreData
struct FWinConditionScoreData
{
public:
	struct FScalableFloat                        GoalScore;                                         // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BigScoreThreshold;                                 // 0x20(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAthenaScoreData>              ScoreDataList;                                     // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PlaylistUIExtension
struct FPlaylistUIExtension
{
public:
	enum class EPlaylistUIExtensionSlot          Slot;                                              // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F72[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftClassPtr<class UUserWidget>             WidgetClass;                                       // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.SupplyDropSubPhaseModifier
struct FSupplyDropSubPhaseModifier
{
public:
	enum class EAthenaGamePhase                  GamePhase;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F73[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        SubPhaseIndex;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnInPreviousZonePercentChance;                  // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SupplyDropModifierData
struct FSupplyDropModifierData
{
public:
	class FName                                  SupplyDropID;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSupplyDropSubPhaseModifier>   ModifierList;                                      // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPlaylistCuratedContent
struct FFortPlaylistCuratedContent
{
public:
	TArray<class FString>                        CuratedLinkCodes;                                  // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.PlaylistData
struct FPlaylistData
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TournamentId;                                      // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventWindowId;                                     // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RegionId;                                          // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlaylistFrontEndData
struct FPlaylistFrontEndData
{
public:
	class UFortPlaylistAthena*                   PlaylistData;                                      // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F74[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EPlaylistVisibilityState          Visibility;                                        // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayAsDefault;                                 // 0x19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaylistAdvertisementType        AdvertiseType;                                     // 0x1A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayAsLimitedTime;                             // 0x1B(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CategoryIndex;                                     // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             EndDateUTC;                                        // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PlaylistOverrideData
struct FPlaylistOverrideData
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F75[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        RegionsDisabled;                                   // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlaylistAccess
struct FPlaylistAccess
{
public:
	bool                                         bForcePlaylistOff;                                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVisibleWhenDisabled;                              // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvisibleWhenEnabled;                             // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDefaultPlaylist;                                // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaylistAdvertisementType        AdvertiseType;                                     // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayAsLimitedTime;                             // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F76[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        DisplayPriority;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CategoryIndex;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PlaylistAccessOverride
struct FPlaylistAccessOverride
{
public:
	TArray<class FString>                        Regions;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        Platforms;                                         // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPlaylistAccess                       OverrideAccess;                                    // 0x20(0x10)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlaylistFrontEndSettings
struct FPlaylistFrontEndSettings
{
public:
	class FName                                  PlaylistName;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlaylistAccess                       PlaylistAccess;                                    // 0x8(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FPlaylistAccessOverride>       AccessOverrides;                                   // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PlaylistOptionValue
struct FPlaylistOptionValue
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                OptionValueName;                                   // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x30 - 0x28)
// ScriptStruct FortniteGame.PlaylistOptionCollisionProfileValue
struct FPlaylistOptionCollisionProfileValue : public FPlaylistOptionValue
{
public:
	struct FCollisionProfileName                 Value;                                             // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x38 - 0x28)
// ScriptStruct FortniteGame.PlaylistOptionColorValue
struct FPlaylistOptionColorValue : public FPlaylistOptionValue
{
public:
	struct FLinearColor                          Value;                                             // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x38 - 0x28)
// ScriptStruct FortniteGame.PlaylistOptionStringValue
struct FPlaylistOptionStringValue : public FPlaylistOptionValue
{
public:
	class FString                                Value;                                             // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x48 - 0x28)
// ScriptStruct FortniteGame.PlaylistOptionFloatValue
struct FPlaylistOptionFloatValue : public FPlaylistOptionValue
{
public:
	struct FScalableFloat                        Value;                                             // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x8 (0x30 - 0x28)
// ScriptStruct FortniteGame.PlaylistOptionIntValue
struct FPlaylistOptionIntValue : public FPlaylistOptionValue
{
public:
	int32                                        Value;                                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F77[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortPOIAmbientAudioOneShot
struct FFortPOIAmbientAudioOneShot
{
public:
	TSoftObjectPtr<class USoundBase>             OneShotSound;                                      // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             RetriggerTimeRange;                                // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TriggerDistanceRange;                              // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EFortDayPhase>             AllowedDayPhases;                                  // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPOIAmbientAudioLoop
struct FFortPOIAmbientAudioLoop
{
public:
	TSoftObjectPtr<class USoundBase>             LoopingSound;                                      // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrossfadeTime;                                     // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F78[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortPoiGridInfo
struct FFortPoiGridInfo
{
public:
	struct FVector2D                             WorldGridStart;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WorldGridEnd;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WorldGridSpacing;                                  // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GridCountX;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GridCountY;                                        // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             WorldGridTotalSize;                                // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPoiVolumeGridCell
struct FFortPoiVolumeGridCell
{
public:
	uint8                                        Pad_3F79[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.ProfileGoCommand
struct FProfileGoCommand
{
public:
	class FString                                Group;                                             // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Command;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Wait;                                              // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Log;                                               // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CopyOutputToGameLog;                               // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F7B[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ProfileGoCollection
struct FProfileGoCollection
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Scenarios;                                         // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x90 - 0x50)
// ScriptStruct FortniteGame.ProfileGoGeneratedScenario
struct FProfileGoGeneratedScenario : public FProfileGoScenario
{
public:
	class FString                                Command;                                           // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Parameters;                                        // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Location;                                          // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Arguments;                                         // 0x80(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortProjectileCues
struct FFortProjectileCues
{
public:
	struct FGameplayCueTag                       Spawn;                                             // 0x0(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       HitPawn;                                           // 0x8(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       HitWorld;                                          // 0x10(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bOrientHitGCsToProjectileVelocity;                 // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F7C[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MaxSurfaceNormalDeviationAngle;                    // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       Bounce;                                            // 0x20(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       Explosion;                                         // 0x28(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PropertyOverridePropertyDataRedirect
struct FPropertyOverridePropertyDataRedirect
{
public:
	class FString                                PropertyKnobName;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OldPropertyData;                                   // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NewPropertyData;                                   // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PropertyOverrideRedirect
struct FPropertyOverrideRedirect
{
public:
	class FString                                OldPropertyScope;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OldPropertyName;                                   // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NewPropertyScope;                                  // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NewPropertyName;                                   // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x7C (0x88 - 0xC)
// ScriptStruct FortniteGame.PropertyOverrideRepl
struct FPropertyOverrideRepl : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3F7D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPropertyOverrideId                   PropertyId;                                        // 0x10(0x8)(Transient, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                PropertyScopedName;                                // 0x18(0x10)(Edit, ZeroConstructor, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PropertyData;                                      // 0x28(0x10)(Edit, ZeroConstructor, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F7E[0x50];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x130 - 0x108)
// ScriptStruct FortniteGame.PropertyOverrideDataRepl
struct FPropertyOverrideDataRepl : public FFastArraySerializer
{
public:
	UMulticastInlineDelegateProperty_            ReplNotifier;                                      // 0x108(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FPropertyOverrideRepl>         PropertyOverridesRepl;                             // 0x118(0x10)(Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F7F[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortPointOnCurveRange
struct FFortPointOnCurveRange
{
public:
	float                                        MinPercentage;                                     // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPercentage;                                     // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortPointsOnCurve
struct FFortPointsOnCurve
{
public:
	TSoftObjectPtr<class UCurveFloat>            Curve;                                             // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortPointOnCurveRange>        RangesForPointsOnCurve;                            // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortGameplayTagQueryPerDifficulty
struct FFortGameplayTagQueryPerDifficulty
{
public:
	struct FDataTableRowHandle                   DifficultyInfo;                                    // 0x0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     TagQueryToMatch;                                   // 0x10(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        Difficulty;                                        // 0x58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F80[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.GoalDistanceData
struct FGoalDistanceData
{
public:
	bool                                         bIgnoreScreeningDistance;                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F81[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FAIDataProviderFloatValue             ScreeningTestMaxDistance;                          // 0x8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            TestScoreCurve;                                    // 0x38(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             CurveDistanceScale;                                // 0x60(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortQuestAchievementTableRow
struct FFortQuestAchievementTableRow : public FTableRowBase
{
public:
	enum class EFortQuestState                   QuestState;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F82[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        XboxAchievementID;                                 // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PS4TrophyID;                                       // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F83[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FeatSeriesObjectiveStep
struct FFeatSeriesObjectiveStep
{
public:
	int32                                        Count;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FeatSeries
struct FFeatSeries
{
public:
	class FText                                  Description;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x18(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFeatSeriesObjectiveStep>      SeriesStepPerObjective;                            // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortQuestRewardTableRow
struct FFortQuestRewardTableRow : public FTableRowBase
{
public:
	class FString                                QuestTemplateId;                                   // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TemplateId;                                        // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Hidden;                                            // 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Feature;                                           // 0x25(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Selectable;                                        // 0x26(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F84[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortCategoryTableRow
struct FFortCategoryTableRow : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        SortPriority;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F85[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x130 (0x130 - 0x0)
// ScriptStruct FortniteGame.FortMcpQuestObjectiveInfo
struct FFortMcpQuestObjectiveInfo
{
public:
	class FName                                  BackendName;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ObjectiveStatHandle;                               // 0x8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>           AlternativeStatHandles;                            // 0x18(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortQuestObjectiveItemEvent      ItemEvent;                                         // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHidden : 1;                                       // Mask: 0x1, PropSize: 0x10x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequirePrimaryMissionCompletion : 1;              // Mask: 0x2, PropSize: 0x10x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanProgressInZone : 1;                            // Mask: 0x4, PropSize: 0x10x29(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayDynamicAnnouncementUpdate : 1;             // Mask: 0x8, PropSize: 0x10x29(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2A9 : 4;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	enum class EObjectiveStatusUpdateType        DynamicStatusUpdateType;                           // 0x2A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortInventoryFilter              LinkVaultTab;                                      // 0x2B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFrontendInventoryFilter      LinkToItemManagement;                              // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F86[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UFortItemDefinition>    ItemReference;                                     // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ItemTemplateIdOverride;                            // 0x58(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LinkSquadID;                                       // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LinkSquadIndex;                                    // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F87[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  Description;                                       // 0x78(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HudShortDescription;                               // 0x90(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             HudIcon;                                           // 0xA8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Stage;                                             // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DynamicStatusUpdatePercentInterval;                // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DynamicUpdateCompletionDelay;                      // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortScriptedAction>     ScriptedAction;                                    // 0xE0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortScriptedAction>     FrontendScriptedAction;                            // 0x108(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMcpQuestRewardInfo
struct FFortMcpQuestRewardInfo
{
public:
	TArray<struct FFortItemQuantityPair>         Rewards;                                           // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct FortniteGame.FortQuestMapCosmetic
struct FFortQuestMapCosmetic
{
public:
	enum class ECosmeticType                     CosmeticType;                                      // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F88[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FSlateBrush                           CosmeticBrush;                                     // 0x8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           CosmeticDataList;                                  // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector2D                             CosmeticPosition;                                  // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWidgetTransform                      CosmeticTransform;                                 // 0xB0(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F89[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x48 - 0x8)
// ScriptStruct FortniteGame.FortQuestMapPageCosmetics
struct FFortQuestMapPageCosmetics : public FTableRowBase
{
public:
	bool                                         bUseNodeArrowColorOverride;                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F8A[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FSlateColor                           NodeArrowColorOverride;                            // 0x10(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestMapCosmetic>         CosmeticList;                                      // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortQuestMapNode
struct FFortQuestMapNode
{
public:
	struct FPrimaryAssetId                       QuestItemDefinitionId;                             // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortQuestItemDefinition*              QuestItemDefinition;                               // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortQuestMapNodeType             NodeType;                                          // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestMapNodeLabelPosition    LabelPosition;                                     // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseHighContrastMode;                               // 0x1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F8B[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.FortQuestMapPage
struct FFortQuestMapPage : public FTableRowBase
{
public:
	class FText                                  PageTitle;                                         // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        PageIndex;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChapterPageCount;                                  // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                QuestEventFlag;                                    // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFrontEndCamera                   CameraMode;                                        // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F8C[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class UUserWidget>               QuestNodeLayout;                                   // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestMapNode>             QuestList;                                         // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB8 - 0x8)
// ScriptStruct FortniteGame.FortQuestObjectiveStatTableRow
struct FFortQuestObjectiveStatTableRow : public FTableRowBase
{
public:
	enum class EFortQuestObjectiveStatEvent      Type;                                              // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F8D[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 TargetTagContainer;                                // 0x10(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SourceTagContainer;                                // 0x30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ContextTagContainer;                               // 0x50(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                Condition;                                         // 0x70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TemplateId;                                        // 0x80(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        AlternateTemplateIds;                              // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIsCached;                                         // 0xA0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F8E[0x17];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC8 (0xD0 - 0x8)
// ScriptStruct FortniteGame.FortQuestObjectiveStatXPTableRow
struct FFortQuestObjectiveStatXPTableRow : public FTableRowBase
{
public:
	enum class EFortQuestObjectiveStatEvent      Type;                                              // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F8F[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 TargetTags;                                        // 0x10(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SourceTags;                                        // 0x30(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ContextTags;                                       // 0x50(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExcludeContextTags;                                // 0x70(0x20)(Edit, NativeAccessSpecifierPublic)
	class FString                                Condition;                                         // 0x90(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CountThreshhold;                                   // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCount;                                          // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetId                       AccoladePrimaryAssetId;                            // 0xA8(0x10)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnceOnly;                                         // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCached;                                         // 0xB9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F90[0x16];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.StatEventFilter
struct FStatEventFilter
{
public:
	enum class EFortQuestObjectiveStatEvent      StatEvent;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F91[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 TargetTagsQuery;                                   // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SourceTagsQuery;                                   // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ContextTagsQuery;                                  // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x98 (0xA0 - 0x8)
// ScriptStruct FortniteGame.FortQuestPoolTableRow
struct FFortQuestPoolTableRow : public FTableRowBase
{
public:
	class FString                                PrerequisiteCompletedQuests;                       // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PrerequisiteNotCompletedQuests;                    // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PrerequisiteEventChannel;                          // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PrerequisiteEventName;                             // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RefreshIntervalHours;                              // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F92[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                RefreshEvent;                                      // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LootTierGroup;                                     // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LootTier;                                          // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RerollLimit;                                       // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGlobalPull;                                       // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRollOnActivation;                                 // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeleteActiveOnRefresh;                            // 0x7A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F93[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MaxActive;                                         // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysToKeepClaimed;                                 // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysToKeepCompleted;                               // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxUnclaimed;                                      // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F94[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                LockoutName;                                       // 0x90(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.AthenaAccolades
struct FAthenaAccolades
{
public:
	class UFortAccoladeItemDefinition*           AccoladeDef;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TemplateId;                                        // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F95[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortChallengeBundleInfoLockedReason
struct FFortChallengeBundleInfoLockedReason
{
public:
	enum class EFortChallengeBundleInfoLockedReasonCode ReasonCode;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F96[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                EventName;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredTier;                                      // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F97[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTimespan                             UnlockTimespanAfterStart;                          // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortQuestPoolStats_PerPool
struct FFortQuestPoolStats_PerPool
{
public:
	class FString                                PoolName;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             NextRefresh;                                       // 0x10(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RerollsRemaining;                                  // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F98[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortQuestPoolStats
struct FFortQuestPoolStats
{
public:
	TArray<struct FFortQuestPoolStats_PerPool>   PoolStats;                                         // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortQuestManagerAttributes
struct FFortQuestManagerAttributes
{
public:
	struct FDateTime                             DailyLoginInterval;                                // 0x0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DailyQuestRerolls;                                 // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F99[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortQuestPoolStats                   QuestPoolStats;                                    // 0x10(0x10)(NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortQuestMissionCreationContext
struct FFortQuestMissionCreationContext
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTagContainer>         MissionCreationContextTags;                        // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bSetQuestOwnerAsMissionOwner;                      // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F9A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MaxNumberToSpawnInWorld;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.QuickBarAndSlot
struct FQuickBarAndSlot
{
public:
	enum class EFortQuickBars                    QuickBarType;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F9B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        QuickBarSlot;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.FortRarityItemData
struct FFortRarityItemData
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color1;                                            // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color2;                                            // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color3;                                            // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color4;                                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color5;                                            // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Falloff;                                           // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Brightness;                                        // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Roughness;                                         // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Glow;                                              // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F9C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortColorPalette
struct FFortColorPalette
{
public:
	struct FLinearColor                          Color1;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color2;                                            // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color3;                                            // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color4;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color5;                                            // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.ReflectedEngineVersion
struct FReflectedEngineVersion
{
public:
	int32                                        Major;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Minor;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Patch;                                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Changelist;                                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Branch;                                            // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortRecordVersion
struct FFortRecordVersion
{
public:
	int32                                        DataVersion;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PackageFileVersion;                                // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReflectedEngineVersion               EngineVersion;                                     // 0x8(0x20)(NativeAccessSpecifierPublic)
	uint8                                        Pad_3F9D[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortReleaseVersion
struct FFortReleaseVersion
{
public:
	class FName                                  VersionName;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortReplayPlaybackState
struct FFortReplayPlaybackState
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndTime;                                           // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeNow;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPaused;                                         // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F9E[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        PlaybackSpeedMultiplier;                           // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHudVisibilityState               HUDVisibility;                                     // 0x14(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLevelStreaming;                                   // 0x15(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasRelevancyZone;                                 // 0x16(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F9F[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortReplayEvent
struct FFortReplayEvent
{
public:
	uint8                                        Pad_3FA0[0x50];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct FortniteGame.ReplayKillSummary
struct FReplayKillSummary
{
public:
	struct FUniqueNetIdRepl                      Victim;                                            // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FA1[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            VictimLocation;                                    // 0x30(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      Instigator;                                        // 0x60(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FA2[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            InstigatorLocation;                                // 0x90(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Timestamp;                                         // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDownButNotOut;                                  // 0xC4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DeathCause;                                        // 0xC5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FA3[0xA];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x128 (0x128 - 0x0)
// ScriptStruct FortniteGame.GameStateInformation
struct FGameStateInformation
{
public:
	struct FGameMemberInfoArray                  PlayerInfos;                                       // 0x0(0x120)(NativeAccessSpecifierPublic)
	bool                                         bIsTeamBasedGame;                                  // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FA4[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x378 (0x378 - 0x0)
// ScriptStruct FortniteGame.FortReplayMetadata
struct FFortReplayMetadata
{
public:
	class FString                                ReplayName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlaylistName;                                      // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplayLength;                                      // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FA5[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      RecordingPlayer;                                   // 0x28(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<float, struct FUniqueNetIdRepl>         RelevancyList;                                     // 0x50(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FUniqueNetIdRepl, class FString> PlayerIds;                                         // 0xA0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>           PlayerMatchReportToName;                           // 0xF0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FUniqueNetIdRepl, class FString> PlayerIdToMatchReport;                             // 0x140(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FUniqueNetIdRepl, int32>         PlayerIdToWorldIdentifier;                         // 0x190(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FReplayKillSummary>            KillSummaries;                                     // 0x1E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FUniqueNetIdRepl, int32>         PlayerFinalRankings;                               // 0x1F0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameStateInformation                 GameInformation;                                   // 0x240(0x128)(NativeAccessSpecifierPublic)
	TArray<struct FAthenaTravelLogEntry>         WorldLogEntries;                                   // 0x368(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BaseReplayEventInfo
struct FBaseReplayEventInfo
{
public:
	uint8                                        Pad_3FA6[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        EventTime;                                         // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        VersionNumber;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FA8[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.MinimalHighlightShot
struct FMinimalHighlightShot
{
public:
	int32                                        VersionNumber;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartTimeStamp;                                    // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShotDuration;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FA9[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x10(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EHighlightFeatures, float>   FeatureScores;                                     // 0x48(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumEliminations;                                   // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHighlightSignificances           ClipSignificance;                                  // 0x9C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FAA[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        FinalScore;                                        // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FAB[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.ReplayServerHighlights
struct FReplayServerHighlights : public FBaseReplayEventInfo
{
public:
	TArray<struct FMinimalHighlightShot>         Shots;                                             // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x48 - 0x18)
// ScriptStruct FortniteGame.ReplayDataSinglePlayerMove
struct FReplayDataSinglePlayerMove : public FBaseReplayEventInfo
{
public:
	uint8                                        Pad_3FAC[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC8 (0xE0 - 0x18)
// ScriptStruct FortniteGame.ReplayEliminationEventInfo
struct FReplayEliminationEventInfo : public FBaseReplayEventInfo
{
public:
	uint8                                        Pad_3FAD[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            EventLocation;                                     // 0x20(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            InstigatorLocation;                                // 0x50(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      Victim;                                            // 0x80(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      Instigator;                                        // 0xA8(0x28)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DeathCause;                                        // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDBNO;                                             // 0xD1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortReplayEventType              EventType;                                         // 0xD2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FAE[0xD];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.ReplayDataActorPosition
struct FReplayDataActorPosition
{
public:
	struct FVector_NetQuantize                   Position;                                          // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.ReplayActorsPosition
struct FReplayActorsPosition : public FBaseReplayEventInfo
{
public:
	TArray<struct FReplayDataActorPosition>      Chests;                                            // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x28 - 0x18)
// ScriptStruct FortniteGame.ReplayZoneEventInfo
struct FReplayZoneEventInfo : public FBaseReplayEventInfo
{
public:
	struct FVector                               ZoneCenter;                                        // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoneRadius;                                        // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x40 - 0x18)
// ScriptStruct FortniteGame.ReplayTeamFlightEventInfo
struct FReplayTeamFlightEventInfo : public FBaseReplayEventInfo
{
public:
	struct FVector                               StartLocation;                                     // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              StartRotation;                                     // 0x24(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               EndLocation;                                       // 0x30(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IndexNum;                                          // 0x3C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FAF[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ReplayDataMoveSnapshotContainer
struct FReplayDataMoveSnapshotContainer
{
public:
	uint8                                        Pad_3FB0[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x68 - 0x18)
// ScriptStruct FortniteGame.ReplayDataPlayerMoves
struct FReplayDataPlayerMoves : public FBaseReplayEventInfo
{
public:
	TMap<class FString, struct FReplayDataMoveSnapshotContainer> PlayerPersistentIdToMoveSamples;                   // 0x18(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ReplayDataMoveSnapshot
struct FReplayDataMoveSnapshot
{
public:
	struct FVector_NetQuantize                   Position;                                          // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMovementStyle                MovementStyle;                                     // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB1[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	uint16                                       WorldTime;                                         // 0xE(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAlwaysRelevantActorInfo
struct FFortAlwaysRelevantActorInfo
{
public:
	class UNetConnection*                        Connection;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                LastPawn;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortRespawnDataRow
struct FFortRespawnDataRow : public FTableRowBase
{
public:
	struct FLinearColor                          FadeColor;                                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTime;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInTime;                                        // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafetyTime;                                        // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.CreativeIslandDescriptionTag
struct FCreativeIslandDescriptionTag
{
public:
	class FString                                Name;                                              // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayText;                                       // 0x10(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.ExperimentalCohortPercent
struct FExperimentalCohortPercent
{
public:
	int32                                        ExperimentNum;                                     // 0x0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CohortPercent;                                     // 0x4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionSpectateAPartyMemberOverride
struct FRuntimeOptionSpectateAPartyMemberOverride
{
public:
	class FName                                  PropertyName;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB2[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionLocalizableStringEntry
struct FRuntimeOptionLocalizableStringEntry
{
public:
	class FString                                Culture;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionLocalizableString
struct FRuntimeOptionLocalizableString
{
public:
	TArray<struct FRuntimeOptionLocalizableStringEntry> Entries;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionScheduledNotification
struct FRuntimeOptionScheduledNotification
{
public:
	struct FDateTime                             FireDateTime;                                      // 0x0(0x8)(ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LocalTime;                                         // 0x8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB3[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FRuntimeOptionLocalizableString       Title;                                             // 0x10(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       Body;                                              // 0x20(0x10)(Config, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaItemShopSectionPriority
struct FAthenaItemShopSectionPriority
{
public:
	enum class EFortItemShopSection              Section;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB4[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Priority;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.AthenaItemShopSectionOverrideDisplayData
struct FAthenaItemShopSectionOverrideDisplayData
{
public:
	enum class EFortItemShopSection              Section;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideTitle;                                        // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoSectionTab;                                     // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionDisabledGameplayMessage
struct FRuntimeOptionDisabledGameplayMessage
{
public:
	class FName                                  MessageOwnerClassName;                             // 0x0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MessageName;                                       // 0x8(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionPlaygroundKnobOverride
struct FRuntimeOptionPlaygroundKnobOverride
{
public:
	class FString                                KnobID;                                            // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                OverrideDefault;                                   // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionTabStateInfo
struct FRuntimeOptionTabStateInfo
{
public:
	class FName                                  TabName;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRuntimeOptionTabState        TabState;                                          // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB6[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PlayerMarkerConfig
struct FPlayerMarkerConfig
{
public:
	float                                        DoubleClickTime;                                   // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMarkerDetailsWidget;                          // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateMarkerActors;                               // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateMarkerWidgets;                              // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampEnemyMarkers;                                // 0x7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampItemMarkers;                                 // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLocationMarkersOnCompass;                     // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB7[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        LocalPlaceableMarkersPerRate;                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalPlaceableMarkersRechargeRate;                 // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemotePlayableMarkerSoundsPerRate;                 // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemotePlayableMarkerSoundsRechargeRate;            // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemotePlayableMarkerSoundsByPlayerIDPerRate;       // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemotePlayableMarkerSoundsByPlayerIDRechargeRate;  // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemotePlayableMarkerSoundsByPlayerIDRechargeRateCap; // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDoubleClickAction;                           // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableItemMarking;                                 // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableInteractionMarking;                          // 0x2A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB8[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ScreenPercentageDistanceToShowMarkerInfo;          // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnemyMarkerTLL;                                    // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ItemMarkerTTL;                                     // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxItemMarkers;                                    // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEnemyMarkers;                                   // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionReviewPromptCriteria
struct FRuntimeOptionReviewPromptCriteria
{
public:
	int32                                        MinutesPlayed;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GamesPlayed;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BestResult;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KillCount;                                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RequireAll;                                        // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB9[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.RuntimeOptionTournamentScoreThreshold
struct FRuntimeOptionTournamentScoreThreshold
{
public:
	int32                                        StartingPlacement;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointsIncrement;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortSafeZoneVolumeDefinition
struct FFortSafeZoneVolumeDefinition
{
public:
	class AVolume*                               Volume;                                            // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        RejectionChance;                                   // 0x8(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
};

// 0x238 (0x238 - 0x0)
// ScriptStruct FortniteGame.FortSafeZoneDefinition
struct FFortSafeZoneDefinition
{
public:
	struct FScalableFloat                        Count;                                             // 0x0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        Radius;                                            // 0x20(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ForceDistanceMin;                                  // 0x40(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ForceDistanceMax;                                  // 0x60(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        RejectRadius;                                      // 0x80(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        RejectOuterDistance;                               // 0xA0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        WaitTime;                                          // 0xC0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ShrinkTime;                                        // 0xE0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        MegaStormGridCellThickness;                        // 0x100(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PlayerCapSolo;                                     // 0x120(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PlayerCapDuo;                                      // 0x140(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PlayerCapSquad;                                    // 0x160(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FBA[0xB8];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortDestroyedActorRecord
struct FFortDestroyedActorRecord
{
public:
	struct FGuid                                 ActorGuid;                                         // 0x0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingActor>            ActorClass;                                        // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FBB[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            ActorTransform;                                    // 0x20(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortBuildingActorArray
struct FFortBuildingActorArray
{
public:
	TArray<struct FFortDestroyedActorRecord>     ActorRecords;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x358 (0x358 - 0x0)
// ScriptStruct FortniteGame.FortScoreStylingInfo
struct FFortScoreStylingInfo
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   Icon;                                              // 0x18(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortScriptedActionParams
struct FFortScriptedActionParams
{
public:
	class AFortPlayerController*                 Player;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortScriptedActionSource         SourceType;                                        // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FBC[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortItem*                             SourceItem;                                        // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   SourceData;                                        // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  SourceName;                                        // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortAvailableScriptedAction
struct FFortAvailableScriptedAction
{
public:
	struct FFortScriptedActionParams             Params;                                            // 0x0(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	class AFortScriptedAction*                   ActionDefaults;                                    // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortSearchPassState
struct FFortSearchPassState
{
public:
	int32                                        BestSessionIdx;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasCanceled;                                      // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortSessionHelperJoinResult      FailureType;                                       // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingState                 MatchmakingState;                                  // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPartyReservationResult           LastBeaconResponse;                                // 0x7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FBD[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortSearchPassParams
struct FFortSearchPassParams
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SessionName;                                       // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FBE[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                BestDatacenterId;                                  // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxProcessedSearchResults;                         // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FBF[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.MMAttemptState
struct FMMAttemptState
{
public:
	int32                                        BestSessionIdx;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSearchResults;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMatchmakingState                 State;                                             // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPartyReservationResult           LastBeaconResponse;                                // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC0[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTimedKeysState
struct FFortTimedKeysState
{
public:
	TArray<class FString>                        K;                                                 // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.FortMatchmakingRegionState
struct FFortMatchmakingRegionState
{
public:
	TSet<class FName>                            EventFlagsForcedOn;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class FName>                            EventFlagsForcedOff;                               // 0x50(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortMatchmakingEventsState
struct FFortMatchmakingEventsState
{
public:
	TMap<class FString, struct FFortMatchmakingRegionState> Region;                                            // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.FortRotationalContentEventsState
struct FFortRotationalContentEventsState
{
public:
	TSet<class FName>                            ActiveStorefronts;                                 // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class FName>                            ActiveEventFlags;                                  // 0x50(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, double>                    EventNamedWeights;                                 // 0xA0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<struct FDateTime>                       ExpirationTimes;                                   // 0xF0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x1A0 - 0x140)
// ScriptStruct FortniteGame.FortClientEventsState
struct FFortClientEventsState : public FFortRotationalContentEventsState
{
public:
	int32                                        SeasonNumber;                                      // 0x140(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC1[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                SeasonTemplateId;                                  // 0x148(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatchXpBonusPoints;                                // 0x158(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3FC2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             SeasonBegin;                                       // 0x160(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             SeasonEnd;                                         // 0x168(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             SeasonDisplayedEnd;                                // 0x170(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             WeeklyStoreEnd;                                    // 0x178(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             DailyStoreEnd;                                     // 0x180(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             StwDailyStoreEnd;                                  // 0x188(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             StwEventStoreEnd;                                  // 0x190(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             StwWeeklyStoreEnd;                                 // 0x198(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortStandaloneStoreState
struct FFortStandaloneStoreState
{
public:
	struct FDateTime                             StoreEnd;                                          // 0x0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortCommunityVotesState
struct FFortCommunityVotesState
{
public:
	class FString                                ElectionId;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCatalogOffer>                 Candidates;                                        // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                             ElectionEnds;                                      // 0x20(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumWinners;                                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WinnerStateHours;                                  // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.FortFeaturedIslandsState
struct FFortFeaturedIslandsState
{
public:
	TArray<class FString>                        IslandCodes;                                       // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, struct FFortPlaylistCuratedContent> PlaylistCuratedContent;                            // 0x10(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>           PlaylistCuratedHub;                                // 0x60(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        IslandTemplates;                                   // 0xB0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortServerBotInfo
struct FFortServerBotInfo
{
public:
	class AFortAthenaAIBotController*            BotController;                                     // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPoiVolume*                        SelectedPoiVolume;                                 // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3FC3[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ConstructionBuildingInfo
struct FConstructionBuildingInfo
{
public:
	TSubclassOf<class ABuildingSMActor>          BuildingActorClass[0x3];                           // 0x0(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.CachedSupplyDrop
struct FCachedSupplyDrop
{
public:
	class AFortAthenaSupplyDrop*                 SupplyDrop;                                        // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInOctree;                                         // 0x8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC4[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               LastLocation;                                      // 0xC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.CachedPOIVolumeLocations
struct FCachedPOIVolumeLocations
{
public:
	class AFortPoiVolume*                        POIVolume;                                         // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC5[0x18];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.NavigationPOI
struct FNavigationPOI
{
public:
	struct FScalableFloat                        IsEnabled;                                         // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     POIFilterQuery;                                    // 0x20(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class AFortPoiVolume*>                ValidPOIVolumeList;                                // 0x68(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.BattleBusPOI
struct FBattleBusPOI
{
public:
	struct FScalableFloat                        IsEnabled;                                         // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     POIFilterQuery;                                    // 0x20(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCurveFloat*                           TagQueryWeightChance;                              // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortPoiVolume*>                ValidPOIVolumeList;                                // 0x70(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC6[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UEnvQuery>              FindLocationsAroundPOIQuery;                       // 0x90(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x178 (0x178 - 0x0)
// ScriptStruct FortniteGame.FortGlobalMission
struct FFortGlobalMission
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EFortTheaterType>          AllowedTheaterTypes;                               // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     TheaterTagQuery;                                   // 0x38(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     RegionTagQuery;                                    // 0x80(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	TArray<enum class EFortZoneType>             AllowedZoneTypes;                                  // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     ZoneTagQuery;                                      // 0xD8(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     PrimaryMissionTagQuery;                            // 0x120(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	float                                        MaxDifficultyLevel;                                // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDifficultyLevel;                                // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPrototype;                                      // 0x170(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowInTestMaps;                                  // 0x171(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x172(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC7[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x180 - 0x178)
// ScriptStruct FortniteGame.FortQuestDrivenMission
struct FFortQuestDrivenMission : public FFortGlobalMission
{
public:
	class UFortQuestItemDefinition*              RequiredQuest;                                     // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.QuestDrivenMissionSubList
struct FQuestDrivenMissionSubList
{
public:
	class FName                                  MissionSubListName;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabled;                                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC8[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortQuestDrivenMission>       QuestDrivenMissionList;                            // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortMissionDistributionCategory
struct FFortMissionDistributionCategory
{
public:
	struct FGameplayTagQuery                     CategoryTagQuery;                                  // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FortNonPrimaryMission
struct FFortNonPrimaryMission
{
public:
	TSoftObjectPtr<class UFortMissionInfo>       MissionInfo;                                       // 0x0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     ContextTagQuery;                                   // 0x28(0x48)(Edit, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   MinDifficulty;                                     // 0x70(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   MaxDifficulty;                                     // 0x80(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bSatisfiesCurrentRequirement;                      // 0x90(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3FC9[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<int32>                                RequirementIndicesSatisfied;                       // 0x98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int32>                                DistributionCategoryIndicesSatisfied;              // 0xA8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SavedShopSectionState
struct FSavedShopSectionState
{
public:
	TArray<class FString>                        OfferIds;                                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC0 - 0x0)
// ScriptStruct FortniteGame.SkeletalAudioBoneInstance
struct FSkeletalAudioBoneInstance
{
public:
	uint8                                        Pad_3FCA[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class UAudioComponent*                       LoopInstance;                                      // 0x10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Delta;                                             // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FCB[0xA4];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SkeletalAudioBoneConfig
struct FSkeletalAudioBoneConfig
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundLoop;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundMediumDelta;                                  // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundHighDelta;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThresholdLoop;                                     // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThresholdMedium;                                   // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThresholdHigh;                                     // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RetriggerDelay;                                    // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkeletalAudioBoneSpace           TrackingSpace;                                     // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkeletalAudioBoneVelocityType    VelocityTrackingType;                              // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FCC[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPartySquadAssignment
struct FFortPartySquadAssignment
{
public:
	struct FUniqueNetIdRepl                      MemberId;                                          // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AbsoluteMemberIdx;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FCD[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortPartyMatchmakingInfo
struct FFortPartyMatchmakingInfo
{
public:
	int32                                        BuildId;                                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HotfixVersion;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RegionId;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlaylistName;                                      // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TournamentId;                                      // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventWindowId;                                     // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LinkCode;                                          // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x4D8 (0x558 - 0x80)
// ScriptStruct FortniteGame.FortPartyRepData
struct FFortPartyRepData : public FPartyRepData
{
public:
	class FString                                PrimaryGameSessionId;                              // 0x80(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FCE[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EFortPartyState                   PartyState;                                        // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FCF[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         LobbyConnectionStarted;                            // 0xF8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD0[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EMatchmakingCompleteResult        MatchmakingResult;                                 // 0x130(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD1[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EMatchmakingState                 MatchmakingState;                                  // 0x168(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD2[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         SessionIsCriticalMission;                          // 0x1A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD3[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        ZoneTileIndex;                                     // 0x1D8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD4[0x34];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ZoneInstanceId;                                    // 0x210(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD5[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                TheaterId;                                         // 0x250(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD6[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<bool>                                 TileStates;                                        // 0x290(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD7[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortPartyMatchmakingInfo             PartyMatchmakingInfo;                              // 0x2D0(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD8[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                CustomMatchKey;                                    // 0x350(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FD9[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPlaylistData                         PlaylistData;                                      // 0x390(0x38)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FDA[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         AllowJoinInProgress;                               // 0x3F8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FDB[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             LFGTime;                                           // 0x430(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FDC[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         AthenaSquadFill;                                   // 0x468(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FDD[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         PartyIsJoinedInProgress;                           // 0x4A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FDE[0x37];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                GameSessionKey;                                    // 0x4D8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FDF[0x30];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortPartySquadAssignment>     RawSquadAssignments;                               // 0x518(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FE0[0x30];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortPartySquad
struct FFortPartySquad
{
public:
	TArray<TWeakObjectPtr<class UFortPartyMember>> SquadMembers;                                      // 0x0(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.SpecialActorRepDataArray
struct FSpecialActorRepDataArray : public FFastArraySerializer
{
public:
	TArray<struct FSpecialActorRepData>          SpecialActorList;                                  // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.SpecialGameplayAreaOverrideBodyPartsExtraSpecial
struct FSpecialGameplayAreaOverrideBodyPartsExtraSpecial
{
public:
	TArray<class UCustomCharacterPart*>          OverrideBodyPartsForExtraSpecial;                  // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SkinMetaTagsForExtraSpecial;                       // 0x10(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SpecialGameplayAreaLootData
struct FSpecialGameplayAreaLootData
{
public:
	struct FGameplayTag                          LootSourceTag;                                     // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LootTierGroup;                                     // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x170 (0x170 - 0x0)
// ScriptStruct FortniteGame.FortChaseCameraHelper
struct FFortChaseCameraHelper
{
public:
	struct FTransform                            PivotToViewTarget;                                 // 0x0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            PivotToViewTarget_Crouching;                       // 0x30(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            MinCameraToPivot;                                  // 0x60(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            MaxCameraToPivot;                                  // 0x90(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FE1[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        CameraToPivotAlphaInterpSpeed;                     // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraCollisionSphereRadius;                       // 0xCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotLocationInterpSpeed;                          // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotRotationInterpSpeed;                          // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FE2[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class AActor*>                        IgnoreActors;                                      // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EThirdPersonAutoFollowMode        AutoFollowMode;                                    // 0xF0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FE3[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        CameraTruckRate;                                   // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFollowPitch;                                   // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LazyAutoFollowPitchMin;                            // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LazyAutoFollowPitchMax;                            // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FE4[0x6C];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.SphericalDriveParams
struct FSphericalDriveParams
{
public:
	float                                        Radius;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowSpeedAccelerationForce;                         // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighSpeedAccelerationForce;                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedKmh;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInclineDeg;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAirControlForce;                                // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAirControlSpeedKmh;                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoBrakeSpeedKmh;                                 // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DragCoefficient;                                   // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DragCoefficientAutoBrake;                          // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAutoBrakeSpeedKmh;                              // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContactRepulsionForce;                             // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContactThreshold;                                  // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassDirectionMaxAngleDeg;                          // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassDirectionStiffness;                            // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMassDirectionInvert;                              // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FE5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        ShellAngularDrag;                                  // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TractionMultiplier;                                // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortLinearSpline
struct FFortLinearSpline
{
public:
	uint8                                        Pad_3FE6[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSplineBase
struct FFortSplineBase
{
public:
	uint8                                        Pad_3FE7[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        StartTime;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Duration;                                          // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x10 (0x20 - 0x10)
// ScriptStruct FortniteGame.FortCatmullRomSpline
struct FFortCatmullRomSpline : public FFortSplineBase
{
public:
	TArray<struct FVector>                       ControlPoints;                                     // 0x10(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SplineWaterAudioZone
struct FSplineWaterAudioZone
{
public:
	struct FVector                               Position;                                          // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortSprayDecalRepPayload
struct FFortSprayDecalRepPayload
{
public:
	class UAthenaSprayItemDefinition*            SprayAsset;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BannerName;                                        // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BannerColor;                                       // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SavedStatValue;                                    // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FE8[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortEventConditional
struct FFortEventConditional
{
public:
	enum class EFortEventConditionType           ConditionalType;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FE9[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FName                                  StatToCompare;                                     // 0x4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatRecordingPeriod              RelevantPeriod;                                    // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCompare                      ComparisonType;                                    // 0xD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FEA[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Value;                                             // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FEB[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortSchematicItemDefinition*          CraftingItem;                                      // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanCraft;                                         // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FEC[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UStat*                                 Stat;                                              // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 FPC;                                               // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortStatEvent
struct FFortStatEvent
{
public:
	class FName                                  StatEventName;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEventRepeat                  RepeatType;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FED[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FName>                          StatsToMonitor;                                    // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortEventConditional>         Conditions;                                        // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortClientAnnouncement>   AnnouncementToDisplay;                             // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               NotificationParameter;                             // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStat*                                 AssociatedStat;                                    // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 FPC;                                               // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortStatEventSequence
struct FFortStatEventSequence
{
public:
	class FName                                  StatEventName;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEventRepeat                  RepeatType;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FEE[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortStatEvent>                EventSequence;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UStat*                                 AssociatedStat;                                    // 0x20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 FPC;                                               // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          StatsToMonitor;                                    // 0x30(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEventConditional>         Conditions;                                        // 0x40(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TransformableNavLinkClass
struct FTransformableNavLinkClass
{
public:
	struct FVector                               Translation;                                       // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              Rotation;                                          // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavLinkDefinition>        NavigationLinksClass;                              // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortSupplyDropSubPhaseData
struct FFortSupplyDropSubPhaseData
{
public:
	struct FScalableFloat                        SupplyDropMinCount;                                // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxCount;                                // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropCap;                                     // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x1A8 (0x1A8 - 0x0)
// ScriptStruct FortniteGame.FortSupplyDropGamePhaseData
struct FFortSupplyDropGamePhaseData
{
public:
	enum class EAthenaGamePhase                  GamePhase;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FEF[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FScalableFloat                        SupplyDropMinPlacementHeight;                      // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxPlacementHeight;                      // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropTimeInterval;                            // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropTimeDeviation;                           // 0x68(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropSpawnMinWaitTime;                        // 0x88(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropSpawnMaxWaitTime;                        // 0xA8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMinSpawnHeight;                          // 0xC8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxSpawnHeight;                          // 0xE8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMinSpeed;                                // 0x108(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxSpeed;                                // 0x128(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortSupplyDropSubPhaseData           SubPhaseData;                                      // 0x148(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortSurfaceTypeToSurfaceTypeTag
struct FFortSurfaceTypeToSurfaceTypeTag
{
public:
	enum class EFortFootstepSurfaceType          FootSurfaceType;                                   // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPhysicalSurface                  SurfaceType;                                       // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FF0[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTag                          SurfaceTypeTag;                                    // 0x4(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowsSurfaceRetriggerOfEvents;                   // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FF1[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.FortSurvivorNameData
struct FFortSurvivorNameData : public FTableRowBase
{
public:
	class FText                                  Name;                                              // 0x8(0x18)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// 0x368 (0x368 - 0x0)
// ScriptStruct FortniteGame.FortTagUIData
struct FFortTagUIData
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   Icon;                                              // 0x8(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x338(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x350(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortFinderProperty
struct FFortFinderProperty
{
public:
	class UProperty*                             Property;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Value;                                             // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortTaggedActorOctreeFilter
struct FFortTaggedActorOctreeFilter
{
public:
	struct FBoxSphereBounds                      Bounds;                                            // 0x0(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MinDistanceFromBoundsCenter;                       // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingActor>>    OptionalSubclasses;                                // 0x20(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FFortFinderProperty>           RequiredProperties;                                // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToLookFor;                                     // 0x40(0x20)(NativeAccessSpecifierPublic)
	bool                                         bHasAllTags;                                       // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FF2[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortTaggedSoundCue
struct FFortTaggedSoundCue
{
public:
	struct FGameplayTagQuery                     Requirements;                                      // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
	class USoundBase*                            Sound;                                             // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TaggedSoundBankResponseList
struct FTaggedSoundBankResponseList
{
public:
	TArray<struct FFortTaggedSoundCue>           CueList;                                           // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x20 - 0xC)
// ScriptStruct FortniteGame.TeamSpottedActorInfo
struct FTeamSpottedActorInfo : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3FF3[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerController*                 Spotter;                                           // 0x10(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpottedActor;                                      // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.TeamSpottedActorInfoArray
struct FTeamSpottedActorInfoArray : public FFastArraySerializer
{
public:
	TArray<struct FTeamSpottedActorInfo>         SpottedActorInfo;                                  // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class AFortTeamInfo*                         OwningTeam;                                        // 0x118(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortTeamPerkLoadoutCondition
struct FFortTeamPerkLoadoutCondition
{
public:
	int32                                        NumTimesSatisfiable;                               // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FF4[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagQuery                     RequiredTagQuery;                                  // 0x8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMinimumTier : 1;                          // Mask: 0x1, PropSize: 0x10x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMaximumTier : 1;                          // Mask: 0x2, PropSize: 0x10x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMinimumLevel : 1;                         // Mask: 0x4, PropSize: 0x10x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMaximumLevel : 1;                         // Mask: 0x8, PropSize: 0x10x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMinimumRarity : 1;                        // Mask: 0x10, PropSize: 0x10x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bConsiderMaximumRarity : 1;                        // Mask: 0x20, PropSize: 0x10x50(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2AA : 2;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_3FF5[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	enum class EFortItemTier                     MinimumHeroTier;                                   // 0x54(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortItemTier                     MaximumHeroTier;                                   // 0x55(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FF6[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        MinimumHeroLevel;                                  // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumHeroLevel;                                  // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinimumHeroRarity;                                 // 0x60(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MaximumHeroRarity;                                 // 0x61(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FF7[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x6C (0x78 - 0xC)
// ScriptStruct FortniteGame.LatentRepPlayerData
struct FLatentRepPlayerData : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_3FF8[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPawnNotRelevantTime;                           // 0x18(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPawnIsRelevant;                                   // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasPawnRelevantLastUpdate;                        // 0x1D(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FF9[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               CurrentLocation;                                   // 0x20(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CurrentYaw;                                        // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastLocationReplicationTime;                       // 0x30(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevLocationReplicatedTime;                        // 0x34(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                LastRepLocation;                                   // 0x38(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector_NetQuantize100                PrevRepLocation;                                   // 0x44(0xC)(RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LerpStartLocation;                                 // 0x50(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastYawReplicationTime;                            // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevYawReplicatedTime;                             // 0x60(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastRepYaw;                                        // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrevRepYaw;                                        // 0x68(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LerpStartYaw;                                      // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortPawnState                    PawnStateMask;                                     // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortPawnState                    CurrPawnStateMask;                                 // 0x71(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3FFA[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.LatentRepTeamDataArray
struct FLatentRepTeamDataArray : public FFastArraySerializer
{
public:
	TArray<struct FLatentRepPlayerData>          PlayerData;                                        // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CurrPlayerUpdateIndex;                             // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FFB[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x34 (0x40 - 0xC)
// ScriptStruct FortniteGame.PrivateTeamDataItem
struct FPrivateTeamDataItem : public FFastArraySerializerItem
{
public:
	float                                        Value;                                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x10(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FFC[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x78 (0x180 - 0x108)
// ScriptStruct FortniteGame.PrivateTeamDataArray
struct FPrivateTeamDataArray : public FFastArraySerializer
{
public:
	TArray<struct FPrivateTeamDataItem>          Items;                                             // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FFD[0x68];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SmokeTestResult
struct FSmokeTestResult
{
public:
	class FString                                TestStep;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TestSummary;                                       // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasExecuted;                                      // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassed;                                           // 0x21(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FFE[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ResultMessage;                                     // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.ScreenshotTransformPair
struct FScreenshotTransformPair
{
public:
	struct FTransform                            Left;                                              // 0x0(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            Right;                                             // 0x30(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x148 (0x148 - 0x0)
// ScriptStruct FortniteGame.CosmeticScreenshotTestConfig
struct FCosmeticScreenshotTestConfig
{
public:
	int32                                        ScreenshotResX;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScreenshotResY;                                    // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class FString>                          CosmeticIgnores;                                   // 0x8(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class FString>                          VariantIgnores;                                    // 0x58(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class FString>                          CosmeticWhitelist;                                 // 0xA8(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, struct FScreenshotTransformPair> IndividualOverrides;                               // 0xF8(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xD8 (0xD8 - 0x0)
// ScriptStruct FortniteGame.FortTheaterTileEditorData
struct FFortTheaterTileEditorData
{
public:
	int32                                        XCoordinate;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        YCoordinate;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortZoneTheme>            ZoneTheme;                                         // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortRegionInfo*                       Region;                                            // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x18(0x60)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortLinkedQuest>              LinkedQuests;                                      // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortTheaterMapTileType           TileType;                                          // 0x88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FFF[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 TileTags;                                          // 0x90(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterMissionWeight>     MissionWeightOverrides;                            // 0xB0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTheaterDifficultyWeight>  DifficultyWeightOverrides;                         // 0xC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bCanBeMissionAlert;                                // 0xD0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4000[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEditorTheaterMapRegionColor
struct FFortEditorTheaterMapRegionColor
{
public:
	class UFortRegionInfo*                       Region;                                            // 0x0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          RegionColor;                                       // 0x8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertAvailableData
struct FFortMissionAlertAvailableData
{
public:
	class FName                                  MissionAlertCategoryName;                          // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumMissionAlertsAvailable;                         // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortMissionAlertRegionData
struct FFortMissionAlertRegionData
{
public:
	TArray<class FString>                        RegionUniqueIds;                                   // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionAlertAvailableData> AvailabilityDataPerCategory;                       // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortTheaterMapMissionAlertData
struct FFortTheaterMapMissionAlertData
{
public:
	TArray<struct FFortMissionAlertRegionData>   AvailabilityDataPerRegion;                         // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortFoundQuestMissions
struct FFortFoundQuestMissions
{
public:
	class FString                                TheaterId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsValidForAllPlayableMissions;                    // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4001[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortAvailableMissionData>     LinkedMissions;                                    // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionData>     TagMatchingMissions;                               // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionData>     FallbackMatchingMissions;                          // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.FortWindImpulseHandle
struct FFortWindImpulseHandle
{
public:
	int32                                        UID;                                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x44 (0x50 - 0xC)
// ScriptStruct FortniteGame.StormWind
struct FStormWind : public FFastArraySerializerItem
{
public:
	struct FVector                               Location;                                          // 0xC(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Direction;                                         // 0x18(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Magnitude;                                         // 0x28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4002[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortThreatVisualsManager*             ThreatVisualsManager;                              // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAIEncounterInfo*>          Encounters;                                        // 0x38(0x10)(ZeroConstructor, Transient, RepSkip, NativeAccessSpecifierPublic)
	struct FFortWindImpulseHandle                WindHandle;                                        // 0x48(0x4)(Transient, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_4003[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.StormWindArray
struct FStormWindArray : public FFastArraySerializer
{
public:
	TArray<struct FStormWind>                    StormWinds;                                        // 0x108(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x54 (0x60 - 0xC)
// ScriptStruct FortniteGame.ThreatLocationInfo
struct FThreatLocationInfo : public FFastArraySerializerItem
{
public:
	struct FVector                               CloudLocation;                                     // 0xC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                  ThreatVolume;                                      // 0x18(0x1C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_4004[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortThreatVisualsManager*             ThreatVisualsManager;                              // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AThreatCloud>           CloudActor;                                        // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4005[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         bThreatActivated;                                  // 0x49(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortThreatDeactivationType       DeactivationType;                                  // 0x4A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4006[0x15];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.ThreatLocationArray
struct FThreatLocationArray : public FFastArraySerializer
{
public:
	TArray<struct FThreatLocationInfo>           Locations;                                         // 0x108(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.ThreatGridIndex
struct FThreatGridIndex
{
public:
	int32                                        X;                                                 // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Y;                                                 // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.TieredCollectionProgressionDataBase
struct FTieredCollectionProgressionDataBase
{
public:
	enum class ECollectionSelectionMethod        SelectionMethod;                                   // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x17 (0x18 - 0x1)
// ScriptStruct FortniteGame.CollectionLootSetData
struct FCollectionLootSetData : public FTieredCollectionProgressionDataBase
{
public:
	uint8                                        Pad_4007[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FName>                          LootSetNames;                                      // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RewardBadgesProgression
struct FRewardBadgesProgression
{
public:
	TArray<class UFortBadgeItemDefinition*>      RewardBadges;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x17 (0x18 - 0x1)
// ScriptStruct FortniteGame.RewardBadgesCollectionProgressionData
struct FRewardBadgesCollectionProgressionData : public FTieredCollectionProgressionDataBase
{
public:
	uint8                                        Pad_4008[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FRewardBadgesProgression>      BadgeCollections;                                  // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.DifficultyRowProgression
struct FDifficultyRowProgression
{
public:
	class FName                                  DifficultyRowName;                                 // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AdditiveDifficultyMod;                             // 0x8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x17 (0x18 - 0x1)
// ScriptStruct FortniteGame.DifficultyCollectionProgressionData
struct FDifficultyCollectionProgressionData : public FTieredCollectionProgressionDataBase
{
public:
	uint8                                        Pad_4009[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FDifficultyRowProgression>     DifficultyCollections;                             // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x17 (0x18 - 0x1)
// ScriptStruct FortniteGame.TieredNamedCollectionProgressionData
struct FTieredNamedCollectionProgressionData : public FTieredCollectionProgressionDataBase
{
public:
	uint8                                        Pad_400A[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FName>                          CollectionNames;                                   // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.WorldAmbientPropertiesMatchingGameContext
struct FWorldAmbientPropertiesMatchingGameContext
{
public:
	struct FGameplayTagQuery                     QueryToMatch;                                      // 0x0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTimeOfDayTheme                   TimeOfDayTheme;                                    // 0x48(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortGlobalWindInfo                   GlobalWindInfo;                                    // 0x88(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayEditorViewSettings
struct FTimeOfDayEditorViewSettings
{
public:
	uint8                                        Pad_400B[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.TimeOfDayDirectOverrides
struct FTimeOfDayDirectOverrides
{
public:
	uint8                                        bOverrideLightIntensity : 1;                       // Mask: 0x1, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideLightColor : 1;                           // Mask: 0x2, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideSkyLightIntensity : 1;                    // Mask: 0x4, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideSkyLightColor : 1;                        // Mask: 0x8, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideFogDensity : 1;                           // Mask: 0x10, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideFogColor : 1;                             // Mask: 0x20, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideFogStartDistance : 1;                     // Mask: 0x40, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2AB : 1;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_400C[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        OverriddenLightIntensity;                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          OverriddenLightColor;                              // 0x8(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverriddenSkyLightIntensity;                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          OverriddenSkyLightColor;                           // 0x1C(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverriddenFogDensity;                              // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverriddenFogStartDistance;                        // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          OverriddenFogColor;                                // 0x34(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_400D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UClass*                                OverriddenPostProcessActorClass;                   // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.SkyLightValues
struct FSkyLightValues
{
public:
	struct FLinearColor                          SkyLightColor;                                     // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SkyLightOcclusionTint;                             // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyLightMinOcclusion;                              // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricScatteringIntensity;                     // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureCube*                          Cubemap;                                           // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureCube*                          DestinationCubemap;                                // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.DirectionalLightValues
struct FDirectionalLightValues
{
public:
	struct FColor                                LightColor;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Brightness;                                        // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricScatteringIntensity;                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.CloudColorState
struct FCloudColorState
{
public:
	struct FLinearColor                          BottomEmissive;                                    // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TopEmissive;                                       // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BottomLightning;                                   // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TopLightning;                                      // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          InternalColor;                                     // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.ThreatCloudValues
struct FThreatCloudValues
{
public:
	struct FCloudColorState                      CloudActivated;                                    // 0x0(0x50)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCloudColorState                      CloudDeactivated;                                  // 0x50(0x50)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.ElementalCharValues
struct FElementalCharValues
{
public:
	struct FLinearColor                          FireCharColor;                                     // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElectricalCharEmissive;                            // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.ExponentialHeightFogValues
struct FExponentialHeightFogValues
{
public:
	float                                        FogDensity;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogHeightFalloff;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogMaxOpacity;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartDistance;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalInscatteringExponent;                   // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalInscatteringStartDistance;              // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DirectionalInscatteringColor;                      // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FogInscatteringColor;                              // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogScatteringDistribution;               // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VolumetricFogAlbedo;                               // 0x3C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogExtinctionScale;                      // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogDistance;                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogData             SecondFogData;                                     // 0x54(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x74 (0x74 - 0x0)
// ScriptStruct FortniteGame.SkyAtmosphereValues
struct FSkyAtmosphereValues
{
public:
	float                                        RayleighScatteringScale;                           // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          RayleighScattering;                                // 0x4(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RayleighExponentialDistribution;                   // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MieScatteringScale;                                // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MieScattering;                                     // 0x1C(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MieAbsorptionScale;                                // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MieAbsorption;                                     // 0x30(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MieAnisotropy;                                     // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MieExponentialDistribution;                        // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OtherAbsorptionScale;                              // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          OtherAbsorption;                                   // 0x4C(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SkyLuminanceFactor;                                // 0x5C(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AerialPespectiveViewDistanceScale;                 // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightFogContribution;                             // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x210 (0x210 - 0x0)
// ScriptStruct FortniteGame.DayPhaseInfo
struct FDayPhaseInfo
{
public:
	class FString                                PhaseStartAnnouncement;                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimePhaseBegins;                                   // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PhaseLengthInHours;                                // 0x14(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentageTransitionIn;                            // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionInTimeInMinutes;                         // 0x1C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PercentageTransitionOut;                           // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionOutTimeInMinutes;                        // 0x24(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSkyLightValues                       SkyLightValues;                                    // 0x28(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FThreatCloudValues                    ThreatCloudValues;                                 // 0x60(0xA0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FElementalCharValues                  ElementalCharValues;                               // 0x100(0x14)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDirectionalLightValues               DirectionalLightValues;                            // 0x114(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogValues           ExpHeightFogValues;                                // 0x120(0x60)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSkyAtmosphereValues                  SkyAtmosphereValues;                               // 0x180(0x74)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_400E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UPostProcessComponent*                 LowPriPostProcessComponent;                        // 0x1F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     SkyMaterialInstance;                               // 0x200(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     StarMapMaterialInstance;                           // 0x208(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.CameraAltitudeAdjustments
struct FCameraAltitudeAdjustments
{
public:
	float                                        Altitude;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogHeightFalloff;                                  // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightFogZOffset;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogDensity;                                        // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SkylightWeatherData
struct FSkylightWeatherData
{
public:
	class UCurveLinearColor*                     SkyLightColor;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SkyLightColorWeight;                               // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.DirectionalLightWeatherData
struct FDirectionalLightWeatherData
{
public:
	class UCurveLinearColor*                     DirectionalLightColor;                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           DirectionalLightColorWeight;                       // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           DirectionalLightColorBrightness;                   // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           VolumetricScatteringIntensity;                     // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.WindWeatherData
struct FWindWeatherData
{
public:
	class UCurveVector*                          WindDirection;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           WindStrength;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ExponentialHeightFogWeatherData
struct FExponentialHeightFogWeatherData
{
public:
	class UCurveFloat*                           FogDensityScale;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           FogHeightFalloffScale;                             // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SecondFogDensityScale;                             // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SecondFogHeightFalloffScale;                       // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SecondHeightFogOffsetBias;                         // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.HeightFogAltitudeWeatherData
struct FHeightFogAltitudeWeatherData
{
public:
	class UCurveFloat*                           HeightFogZOffset;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SkyAtmosphereWeatherData
struct FSkyAtmosphereWeatherData
{
public:
	class UCurveFloat*                           MieScatteringScaleScale;                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MieAbsorptionScaleScale;                           // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           HeightFogContributionScale;                        // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.MaterialWeatherData
struct FMaterialWeatherData
{
public:
	class UMaterialInstance*                     SkyMaterialInstance;                               // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              DynamicSkyMaterialInstance;                        // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x850 (0x850 - 0x0)
// ScriptStruct FortniteGame.GlobalWeatherData
struct FGlobalWeatherData
{
public:
	class FString                                WeatherEventName;                                  // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RequiredCalendarEvent;                             // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 WeatherEventTags;                                  // 0x20(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FrequencyMin;                                      // 0x40(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FrequencyMax;                                      // 0x60(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ChanceMin;                                         // 0x80(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ChanceMax;                                         // 0xA0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        IntensityMin;                                      // 0xC0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        IntensityMax;                                      // 0xE0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DurationMin;                                       // 0x100(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DurationMax;                                       // 0x120(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CooldownMin;                                       // 0x140(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CooldownMax;                                       // 0x160(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ChanceToRemainActiveMin;                           // 0x180(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ChanceToRemainActiveMax;                           // 0x1A0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BlendInMin;                                        // 0x1C0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BlendInMax;                                        // 0x1E0(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BlendOutMin;                                       // 0x200(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        BlendOutMax;                                       // 0x220(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 Tags;                                              // 0x240(0x20)(Edit, NativeAccessSpecifierPublic)
	class UCurveFloat*                           BotVisibilityScale;                                // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_400F[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x270(0x530)(Edit, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PostProcessBlendWeight;                            // 0x7A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSkylightWeatherData                  SkylightWeatherData;                               // 0x7A8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDirectionalLightWeatherData          DirectionalLightWeatherData;                       // 0x7B8(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogWeatherData      ExponentialHeightFogWeatherData;                   // 0x7D8(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSkyAtmosphereWeatherData             SkyAtmosphereWeatherData;                          // 0x800(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FHeightFogAltitudeWeatherData         HeightFogAltitudeWeatherData;                      // 0x818(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMaterialWeatherData                  MaterialWeatherData;                               // 0x820(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWindWeatherData                      WindWeatherData;                                   // 0x830(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TimeForNextAttempt;                                // 0x840(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4010[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortTokenContextInfo
struct FFortTokenContextInfo
{
public:
	struct FGameplayTagContainer                 RequiredContextTags;                               // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortTooltipTokenInfo
struct FFortTooltipTokenInfo
{
public:
	struct FGameplayTag                          Token;                                             // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTokenContextInfo>         ContextDetails;                                    // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortTooltipDisplayInfo
struct FFortTooltipDisplayInfo
{
public:
	class UClass*                                PrimaryObjectClass;                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                SecondaryObjectClass;                              // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DescriptionStatsTags;                              // 0x10(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortTooltipDisplayStatsList*          TooltipStatsList;                                  // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortTooltipDisplayStatInfo
struct FFortTooltipDisplayStatInfo
{
public:
	struct FGameplayTag                          Token;                                             // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                    Attribute;                                         // 0x8(0x20)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ContextTags;                                       // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bLowerIsBetter;                                    // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4011[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortTooltipDisplayStatsCategory
struct FFortTooltipDisplayStatsCategory
{
public:
	class FText                                  CategoryName;                                      // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortTooltipDisplayStatInfo>   TooltipStats;                                      // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortTooltipMapEntry
struct FFortTooltipMapEntry
{
public:
	class UClass*                                ObjectClass;                                       // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                SecondaryObjectClass;                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortTooltip>              TooltipClass;                                      // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortTooltipValueData
struct FFortTooltipValueData
{
public:
	class FText                                  DisplayName;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  FormattedValue;                                    // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ExplanationText;                                   // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        Value;                                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4012[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 StateTags;                                         // 0x50(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x240 (0x240 - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssist
struct FFortTouchAimAssist
{
public:
	struct FFortAimAssist2D_InputParams          InputParams;                                       // 0x0(0x40)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortAimAssist2D_OwnerInfo            OwnerInfo;                                         // 0x40(0x150)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAimAssist2D_Target>       TargetCache0;                                      // 0x190(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAimAssist2D_Target>       TargetCache1;                                      // 0x1A0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_4013[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                AutoFireTargetActor;                               // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4014[0x80];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortTouchAimAssistSettings
struct FFortTouchAimAssistSettings
{
public:
	float                                        AssistReticleWidth;                                // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AssistReticleHeight;                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireReticleWidth;                              // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireReticleHeight;                             // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireTrackingReticleWidth;                      // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireTrackingReticleHeight;                     // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingReticleWidth;                             // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingReticleHeight;                            // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetRange;                                       // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4015[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveFloat*                           TargetWeightCurve;                                 // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PullStrengthYawCurve;                              // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PullStrengthPitchCurve;                            // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PullMaxRate;                                       // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoTrackDuration;                                 // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoTrackPullStrength;                             // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileMinSpeedForAssist;                       // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileMaxLookAheadTime;                        // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4016[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.FortCompetitiveIdentityInfo
struct FFortCompetitiveIdentityInfo : public FTableRowBase
{
public:
	class FString                                RegionId;                                          // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             FlagAsset;                                         // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TournamentPayoutData
struct FTournamentPayoutData
{
public:
	enum class EPayoutRewardType                 RewardType;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4017[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                Value;                                             // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamSize;                                          // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TournamentPayoutThresholdData
struct FTournamentPayoutThresholdData
{
public:
	enum class EPayoutScoringType                ScoringType;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4018[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	double                                       Threshold;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTournamentPayoutData>         PayoutData;                                        // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortShowdownScoringRuleInfo
struct FFortShowdownScoringRuleInfo : public FTableRowBase
{
public:
	class FName                                  DisplayInfoId;                                     // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PointValue;                                        // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScoreRequirement;                                  // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.NetTowhookAttachState
struct FNetTowhookAttachState
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                LocalLocation;                                     // 0x8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                LocalNormal;                                       // 0x14(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.TowhookParams
struct FTowhookParams
{
public:
	float                                        MaxCableLength;                                    // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCableLength;                                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSpring;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseRope;                                          // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4019[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        SpringStiffness;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringDamping;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringMaxStiffnessForce;                           // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringMaxStiffnessVelocity;                        // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringDeformationRate;                             // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeGive;                                          // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeBreakForce;                                    // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeYankForce;                                     // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtendSpeedKmh;                                    // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ContractSpeedKmh;                                  // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplySpringToSelf;                                // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplySpringToOther;                               // 0x35(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTakeUpSlack;                                      // 0x36(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_401A[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TrackConnectorMeshConfig
struct FTrackConnectorMeshConfig
{
public:
	enum class ETrackIncline                     InclineSideA;                                      // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETrackIncline                     InclineSideB;                                      // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_401B[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UStaticMesh*                           Mesh;                                              // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.TrackPieceConfig
struct FTrackPieceConfig
{
public:
	enum class ETrackPieceType                   Type;                                              // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_401C[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FRotator                              Rotation;                                          // 0x4(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x10(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x3 (0x3 - 0x0)
// ScriptStruct FortniteGame.TrackSplineConfig
struct FTrackSplineConfig
{
public:
	bool                                         bUseSpline;                                        // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETrackDirection                   Start;                                             // 0x1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETrackDirection                   End;                                               // 0x2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.TrackSwitchStateConfig
struct FTrackSwitchStateConfig
{
public:
	struct FTrackPieceConfig                     TrackPiece;                                        // 0x0(0x1C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTrackSplineConfig                    SplineConfig1;                                     // 0x1C(0x3)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTrackSplineConfig                    SplineConfig2;                                     // 0x1F(0x3)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_401D[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.TrackConfiguration
struct FTrackConfiguration
{
public:
	TArray<bool>                                 NeighborsByDirection;                              // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTrackSwitchStateConfig>       SwitchStates;                                      // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRotator                              SwitchRotation;                                    // 0x20(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               SwitchOffset;                                      // 0x2C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TrackMovement
struct FTrackMovement
{
public:
	class USplineComponent*                      CurrentSpline;                                     // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceAlongSpline;                               // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseDirectionAlongSpline;                      // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_401E[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x18 - 0x10)
// ScriptStruct FortniteGame.RepTrackMovement
struct FRepTrackMovement : public FTrackMovement
{
public:
	float                                        Timestamp;                                         // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_401F[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.TransactionalAnalyticEvent
struct FTransactionalAnalyticEvent
{
public:
	uint8                                        Pad_4020[0x28];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x130 (0x138 - 0x8)
// ScriptStruct FortniteGame.FortBaseWeaponStats
struct FFortBaseWeaponStats : public FTableRowBase
{
public:
	int32                                        BaseLevel;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NamedWeightRow;                                    // 0xC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgPB;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgMid;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgLong;                                           // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgMaxRange;                                       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgPB;                                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgMid;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgLong;                                        // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgMaxRange;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgPB;                                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgMid;                                      // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgLong;                                     // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgMaxRange;                                 // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceControl;                                     // 0x44(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4021[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        RngPB;                                             // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RngMid;                                            // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RngLong;                                           // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RngMax;                                            // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveTable*                           DmgScaleTable;                                     // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DmgScaleTableRow;                                  // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DmgScale;                                          // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4022[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveTable*                           EnvDmgScaleTable;                                  // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EnvDmgScaleTableRow;                               // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnvDmgScale;                                       // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4023[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveTable*                           ImpactDmgScaleTable;                               // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ImpactDmgScaleTableRow;                            // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ImpactDmgScale;                                    // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SurfaceRatioRowName;                               // 0x9C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageZone_Light;                                  // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageZone_Normal;                                 // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageZone_Critical;                               // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageZone_Vulnerability;                          // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnockbackMagnitude;                                // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MidRangeKnockbackMagnitude;                        // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LongRangeKnockbackMagnitude;                       // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KnockbackZAngle;                                   // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StunTime;                                          // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StunScale;                                         // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4024[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UDataTable*                            Durability;                                        // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DurabilityRowName;                                 // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurabilityScale;                                   // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurabilityPerUse;                                  // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullChargeDurabilityPerUse;                        // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiceCritChance;                                    // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiceCritDamageMultiplier;                          // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReloadTime;                                        // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReloadScale;                                       // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortWeaponReloadType             ReloadType;                                        // 0xFC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowReloadInterrupt;                             // 0xFD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReloadInterruptIsImmediate;                       // 0xFE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4025[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        NumIndividualBulletsToReload;                      // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ClipSize;                                          // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClipScale;                                         // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InitialClips;                                      // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CartridgePerFire;                                  // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AmmoCostPerFire;                                   // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxAmmoCostPerFire;                                // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinChargeTime;                                     // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxChargeTime;                                     // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChargeDownTime;                                    // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinChargeDamageMultiplier;                         // 0x128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxChargeDamageMultiplier;                         // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquipAnimRate;                                     // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        QuickBarSlotCooldownDuration;                      // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x18 (0x150 - 0x138)
// ScriptStruct FortniteGame.FortTrapStats
struct FFortTrapStats : public FFortBaseWeaponStats
{
public:
	float                                        ArmTime;                                           // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireDelay;                                         // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageDelay;                                       // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlacementScore;                                    // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActivationScore;                                   // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4026[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x47 (0x48 - 0x1)
// ScriptStruct FortniteGame.FortInGameLeaderboardPlacementData
struct FFortInGameLeaderboardPlacementData : public FFortChangeMonitoringStruct
{
public:
	uint8                                        Pad_4027[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                DisplayName;                                       // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Score;                                             // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScoreToWin;                                        // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeamNum;                                           // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4028[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class AFortPlayerStateAthena*>        TeamMembers;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Placement;                                         // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortIndex;                                         // 0x3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRepresentsLocalPlayer;                            // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4029[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        PctToWin;                                          // 0x44(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.VehicleWeapon_RetainedData
struct FVehicleWeapon_RetainedData
{
public:
	int32                                        AmmoInClip;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastFireTime;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPrevious;                                      // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_402A[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.DrunkHomingConfig
struct FDrunkHomingConfig
{
public:
	class UCurveFloat*                           DrunkOverrideSpeedCurve;                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionChangeRate;                               // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookaheadDist;                                     // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnAngle;                                         // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnAngleBlendOut;                                 // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DrunkDuration;                                     // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPitch;                                          // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomTargetPositionRadius;                        // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassedTargetSlackTime;                             // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnAngleClamp;                                    // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DrunkBlendOutRange;                                // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DrunkBlendOutTimeThreshold;                        // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DrunkBlendOutTime;                                 // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DrunkBlendOutTurnSpeed;                            // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimPointMaxRange;                                  // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortGameHotfixUpdateResponse
struct FFortGameHotfixUpdateResponse
{
public:
	class FString                                Status;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortGameAnalyticsSessionResponse
struct FFortGameAnalyticsSessionResponse
{
public:
	class FString                                SessionId;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AppID;                                             // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AppVersion;                                        // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DeviceType;                                        // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DeviceModel;                                       // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OS;                                                // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.DamageDistanceTagEval
struct FDamageDistanceTagEval
{
public:
	float                                        DistanceLimit;                                     // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DistanceTag;                                       // 0x4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.CreativeDeviceMeshSettings
struct FCreativeDeviceMeshSettings
{
public:
	TSoftObjectPtr<class UStaticMesh>            Mesh;                                              // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x28(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          StatTag;                                           // 0x34(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_402B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UMaterialInterface>     Material;                                          // 0x40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RemoteViewRotSnapshot
struct FRemoteViewRotSnapshot
{
public:
	uint8                                        Pad_402C[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortCreativeItemListData
struct FFortCreativeItemListData : public FTableRowBase
{
public:
	enum class ECreativeItemCategory             Category;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_402D[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPrimaryAssetId                       ItemPrimaryAssetId;                                // 0xC(0x10)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SortPriority;                                      // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncluded;                                         // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_402E[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortGameFeatureSizeDetailed
struct FFortGameFeatureSizeDetailed
{
public:
	uint64                                       DownloadSize;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       InstallSize;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       InstallOverheadSize;                               // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       FreeSpace;                                         // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortGameFeatureSize
struct FFortGameFeatureSize
{
public:
	uint64                                       DownloadSize;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       InstallSize;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       FreeSpace;                                         // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.CombinedFeatureProgressSummary
struct FCombinedFeatureProgressSummary
{
public:
	enum class EFortGameFeature                  GameFeature;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_402F[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                PrimaryTextKey;                                    // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LocalizedPrimaryText;                              // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SecondaryTextKey;                                  // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LocalizedSecondaryText;                            // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombinedProgress;                                  // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPaused;                                         // 0x4C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBePaused;                                      // 0x4D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFinished;                                       // 0x4E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4030[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x140 (0x140 - 0x0)
// ScriptStruct FortniteGame.FortGameFeatureStatus
struct FFortGameFeatureStatus
{
public:
	enum class EFortGameFeature                  Feature;                                           // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGameFeatureState             CurrentState;                                      // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGameFeatureState             RequestedState;                                    // 0x2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4031[0x5];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ErrorCode;                                         // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ErrorText;                                         // 0x18(0x18)(NativeAccessSpecifierPublic)
	bool                                         bIsUsingBackgroundDownloads;                       // 0x30(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsProgressPaused;                                 // 0x31(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4032[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                PauseReason;                                       // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCombinedFeatureProgressSummary       ProgressSummary;                                   // 0x48(0x50)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FJsonObjectWrapper> BundleFullProgress;                                // 0x98(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, struct FJsonObjectWrapper> PreloadBundleFullProgress;                         // 0xE8(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsActive;                                          // 0x138(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPendingActive;                                   // 0x139(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4033[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortGameFeatureOptionalInstallStatus
struct FFortGameFeatureOptionalInstallStatus
{
public:
	enum class EFortGameFeature                  Feature;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bContentReady;                                     // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4034[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ErrorCode;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ErrorText;                                         // 0x18(0x18)(NativeAccessSpecifierPublic)
	bool                                         bIsUsingBackgroundDownloads;                       // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsProgressPaused;                                 // 0x31(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4035[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                PauseReason;                                       // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCombinedFeatureProgressSummary       ProgressSummary;                                   // 0x48(0x50)(NativeAccessSpecifierPublic)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortGameFeatureStatusList
struct FFortGameFeatureStatusList
{
public:
	struct FCombinedFeatureProgressSummary       ProgressSummary;                                   // 0x0(0x50)(NativeAccessSpecifierPublic)
	TArray<struct FFortGameFeatureStatus>        Features;                                          // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortGameFeatureOptionalInstallStatus> FeatureOptionalInstalls;                           // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bHasNetworkConnection;                             // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUsingCellularConnection;                        // 0x71(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoLaunchFullGame;                               // 0x72(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4036[0x5];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortGameFeatureResponse
struct FFortGameFeatureResponse
{
public:
	class FString                                ErrorCode;                                         // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ErrorText;                                         // 0x10(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class EFortErrorSeverity                ErrorSeverity;                                     // 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4037[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.AthenaPickResult
struct FAthenaPickResult
{
public:
	enum class EAthenaPickerType                 PickType;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4038[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class ABuildingActor*                        FoundBuildingActor;                                // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawnAthena*                 FoundPlayer;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DataTableRowHandleQuantityPair
struct FDataTableRowHandleQuantityPair
{
public:
	struct FDataTableRowHandle                   DataTableRowHandle;                                // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4039[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortEffectDistanceQuality
struct FFortEffectDistanceQuality
{
public:
	float                                        MinDistanceCinematic;                              // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceEpic;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceHigh;                                   // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceMedium;                                 // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceLow;                                    // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowCinematic : 1;                               // Mask: 0x1, PropSize: 0x10x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowEpic : 1;                                    // Mask: 0x2, PropSize: 0x10x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowHigh : 1;                                    // Mask: 0x4, PropSize: 0x10x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowMedium : 1;                                  // Mask: 0x8, PropSize: 0x10x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowLow : 1;                                     // Mask: 0x10, PropSize: 0x10x14(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_403A[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x14 (0x2C - 0x18)
// ScriptStruct FortniteGame.FortEffectDistanceQualityWithLOD
struct FFortEffectDistanceQualityWithLOD : public FFortEffectDistanceQuality
{
public:
	int32                                        MinLODCinematic;                                   // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinLODEpic;                                        // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinLODHigh;                                        // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinLODMedium;                                      // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinLODLow;                                         // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortParticleSystemParamBucket
struct FFortParticleSystemParamBucket
{
public:
	TArray<struct FParticleSysParam>             Parameters;                                        // 0x0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortAlterationSlotStatus
struct FFortAlterationSlotStatus
{
public:
	class UFortAlterationItemDefinition*         Alteration;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRequiredLevel;                                  // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       MinHostItemRarity;                                 // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_403B[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortClientEvent
struct FFortClientEvent
{
public:
	class FName                                  CategoryName;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               EventSource;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               EventFocus;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x0 (0x10 - 0x10)
// ScriptStruct FortniteGame.FortMissionEventName
struct FFortMissionEventName : public FFortEventName
{
public:
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortCatalogMetaPreload
struct FFortCatalogMetaPreload
{
public:
	TArray<TSoftObjectPtr<class UFortAccountItemDefinition>> ChaseItems;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortCardPackItemDefinition> PackDefinition;                                    // 0x10(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortCatalogMeta
struct FFortCatalogMeta
{
public:
	TArray<class UFortAccountItemDefinition*>    ChaseItems;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortCardPackItemDefinition*           PackDefinition;                                    // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortSpawnContext
struct FFortSpawnContext
{
public:
	uint8                                        Team;                                              // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_403C[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 Tags;                                              // 0x8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortQuestPackInfo
struct FFortQuestPackInfo
{
public:
	class FString                                Name;                                              // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultQuestPack;                                  // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxActiveDailyQuests;                              // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxRerollsPerDay;                                  // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysToKeepClaimedQuests;                           // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysToKeepCompletedQuests;                         // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxUnclaimedQuests;                                // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStreamingQuestPack;                              // 0x34(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_403D[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.FortNamedWeightRow
struct FFortNamedWeightRow : public FTableRowBase
{
public:
	TMap<class FString, float>                   NamedWeightMap;                                    // 0x8(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct FortniteGame.FortLoginReward
struct FFortLoginReward : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFortAccountItemDefinition> ItemDefinition;                                    // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_403E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  Description;                                       // 0x38(0x18)(Edit, NativeAccessSpecifierPublic)
	bool                                         bIsMajorReward;                                    // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_403F[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x38 - 0x8)
// ScriptStruct FortniteGame.CostOnlyRecipe
struct FCostOnlyRecipe : public FTableRowBase
{
public:
	TArray<struct FFortItemQuantityPair>         RecipeCosts;                                       // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredCatalysts;                                 // 0x18(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.FortEncounterSettingsFixedPace
struct FFortEncounterSettingsFixedPace
{
public:
	float                                        RiftSpawnInterval;                                 // 0x0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RiftSpawnCount;                                    // 0x4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AIMaxCount;                                        // 0x8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnAIIntervalTime;                               // 0xC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnAIIntervalCount;                              // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDayPhaseCallbackHandle
struct FFortDayPhaseCallbackHandle
{
public:
	uint8                                        Pad_4040[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x368 (0x368 - 0x0)
// ScriptStruct FortniteGame.ItemCategory
struct FItemCategory
{
public:
	struct FGameplayTagContainer                 TagContainer;                                      // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	class FText                                  CategoryName;                                      // 0x20(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   CategoryBrush;                                     // 0x38(0x330)(Edit, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.FortMultiSizeMargin
struct FFortMultiSizeMargin
{
public:
	struct FMargin                               Margin_XXS;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_XS;                                         // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_S;                                          // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_M;                                          // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_L;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                               Margin_XL;                                         // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x1E0 (0x1E0 - 0x0)
// ScriptStruct FortniteGame.FortMultiSizeFont
struct FFortMultiSizeFont
{
public:
	struct FSlateFontInfo                        Font_XXS;                                          // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_XS;                                           // 0x50(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_S;                                            // 0xA0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_M;                                            // 0xF0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_L;                                            // 0x140(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font_XL;                                           // 0x190(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.SpecialActorStatData
struct FSpecialActorStatData
{
public:
	struct FGameplayTag                          CategoryTag;                                       // 0x0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpecialActorSingleStatData>   Stats;                                             // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.PurchasedBattlePassInfo
struct FPurchasedBattlePassInfo
{
public:
	int32                                        Count;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4041[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ID;                                                // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortUIFeedback
struct FFortUIFeedback
{
public:
	class USoundBase*                            Audio;                                             // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLooping;                                          // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4042[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        FadeIn;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOut;                                           // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4043[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x0 (0x18 - 0x18)
// ScriptStruct FortniteGame.FortUIFeedbackBlueprintOnly
struct FFortUIFeedbackBlueprintOnly : public FFortUIFeedback
{
public:
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.FortUserCloudRequestPayload
struct FFortUserCloudRequestPayload
{
public:
	struct FFortUserCloudRequestHandle           RequestHandle;                                     // 0x0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      UserNetId;                                         // 0x8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Filename;                                          // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortUserCloudRequestType         RequestType;                                       // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4044[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<uint8>                                DataBuffer;                                        // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.FortUserCloudRequest
struct FFortUserCloudRequest
{
public:
	struct FFortUserCloudRequestPayload          RequestPayload;                                    // 0x0(0x58)(NativeAccessSpecifierPublic)
	uint8                                        bNeedsFileEnumeration : 1;                         // Mask: 0x1, PropSize: 0x10x58(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStartedProcessing : 1;                            // Mask: 0x2, PropSize: 0x10x58(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4045[0x17];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortUserCloudRequestQueue
struct FFortUserCloudRequestQueue
{
public:
	uint8                                        bFreezeIncomingRequests : 1;                       // Mask: 0x1, PropSize: 0x10x0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2AC : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_4046[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortUserCloudRequestHandle           FirstFrozenHandle;                                 // 0x8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          ProcessingTimerHandle;                             // 0x10(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortUserCloudRequest>         RequestQueue;                                      // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortVehicleAudioOneshotGate
struct FFortVehicleAudioOneshotGate
{
public:
	float                                        GateValue;                                         // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleAudioTriggerDir           Direction;                                         // 0x4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FadeWhenOutsideGate;                               // 0x5(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4047[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class USoundBase*                            Sound;                                             // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeSinceTrigger;                               // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterruptFadeTime;                                 // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4048[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UAudioComponent*                       AudioComp;                                         // 0x20(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortVehicleAudioParam
struct FFortVehicleAudioParam
{
public:
	float                                        Value;                                             // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleAudioInterpolationType    InterpType;                                        // 0x4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4049[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UCurveFloat*                           Curve;                                             // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackSpeed;                                       // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReleaseSpeed;                                      // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_404A[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.FortVehicleAudioFloatParam
struct FFortVehicleAudioFloatParam
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortVehicleAudioParam                Data;                                              // 0x8(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.VehicleCosmeticInfo
struct FVehicleCosmeticInfo
{
public:
	class AFortPlayerPawn*                       MostRecentCosmeticSourcePawn;                      // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaVehicleCosmeticItemDefinition*  ActiveCosmeticItem;                                // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       PawnAssociatedWithWrap;                            // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaItemWrapDefinition*             ActiveCosmeticWrap;                                // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USceneComponent*>               SpawnedCosmeticComponents;                         // 0x20(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class ACustomItemWrapModifier*               ItemWrapModifier;                                  // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.FortAthenaVehicleSessionTelemetryInfo
struct FFortAthenaVehicleSessionTelemetryInfo
{
public:
	uint8                                        Pad_404B[0x68];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.VehicleEffectsPontoonParamSet
struct FVehicleEffectsPontoonParamSet
{
public:
	class FName                                  PontoonName;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EffectsName;                                       // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ImpulseParamName;                                  // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LocationParamName;                                 // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RotationParamName;                                 // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WaterBodyIndex;                                    // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WaterHeightParamName;                              // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DepthParamName;                                    // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WaterPlaneLocation;                                // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WaterPlaneNormal;                                  // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SeatTransitionMontage
struct FSeatTransitionMontage
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FromSeatIndex;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ToSeatIndex;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaVehicleShootingCone
struct FAthenaVehicleShootingCone
{
public:
	float                                        YawConstraint;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchConstraint;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.ActionDefForUI
struct FActionDefForUI
{
public:
	class FName                                  InputAction;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GamepadInputAction;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ActionLabel;                                       // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct FortniteGame.AthenaCarPlayerSlot
struct FAthenaCarPlayerSlot
{
public:
	class FName                                  SeatSocket;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SeatChoiceSocket;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SeatIndicatorSocket;                               // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  SeatChoiceDisplayText;                             // 0x18(0x18)(Edit, NativeAccessSpecifierPublic)
	class FName                                  SeatCollision;                                     // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ExitSockets;                                       // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAthenaVehicleShootingCone            ShootingCone;                                      // 0x48(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundOnEnter;                                      // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundOnExit;                                       // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSelectable : 1;                                 // Mask: 0x1, PropSize: 0x10x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseGroundMotion : 1;                              // Mask: 0x2, PropSize: 0x10x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseVehicleIsOnGround : 1;                         // Mask: 0x4, PropSize: 0x10x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanEmote : 1;                                     // Mask: 0x8, PropSize: 0x10x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanCarryDBNOPlayer : 1;                           // Mask: 0x10, PropSize: 0x10x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceCrouch : 1;                                  // Mask: 0x20, PropSize: 0x10x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayEnterSoundForTransition : 1;                  // Mask: 0x40, PropSize: 0x10x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayExitSoundForTransition : 1;                   // Mask: 0x80, PropSize: 0x10x60(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPushDriver : 1;                                 // Mask: 0x1, PropSize: 0x10x61(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2AD : 7;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_404C[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               ActorSpaceCameraOffset;                            // 0x64(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VehicleSpaceCameraOffset;                          // 0x70(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeCompensationCameraOffset;                     // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StandingFiringOffset;                              // 0x80(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CrouchingFiringOffset;                             // 0x8C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EmoteOffset;                                       // 0x98(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_404D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AFortPlayerPawn*                       Player;                                            // 0xA8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerControllerZone*             Controller;                                        // 0xB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerEntryTime;                                   // 0xB8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnterSeatTime;                                     // 0xBC(0x4)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConstrainPawnToSeatTransform;                     // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOffsetPlayerRelativeAttachLocation;               // 0xC1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseExitTimer;                                     // 0xC2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_404E[0x5];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortVehicleSeatWeaponComponent*       WeaponComponent;                                   // 0xC8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraPitchConstraint;                             // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraYawConstraint;                               // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActionDefForUI>               ActionDefForUI;                                    // 0xD8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.WeaponSeatDefinition
struct FWeaponSeatDefinition
{
public:
	int32                                        SeatIndex;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_404F[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UFortWeaponItemDefinition*             VehicleWeapon;                                     // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             VehicleWeaponOverride;                             // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             LastEquippedVehicleWeapon;                         // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4050[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortVehicleIncrementTrick
struct FFortVehicleIncrementTrick
{
public:
	class FText                                  Name;                                              // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        HalfSpinsNeeded;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseScore;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Repeats;                                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RepeatsHalfSpinsPerTrick;                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MultiplierIncrement;                               // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4051[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct FortniteGame.VehicleTrickSequenceBasics
struct FVehicleTrickSequenceBasics : public FTableRowBase
{
public:
	float                                        TrickStartTime;                                    // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickStartDistance;                                // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickStartHeight;                                  // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickPointsPerAirSecond;                           // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickPointsPerAirDistance;                         // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrickPointsPerAirHeight;                           // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ActiveVehicleUI
struct FActiveVehicleUI
{
public:
	uint8                                        Pad_4052[0x10];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	class UUserWidget*                           ActiveWidget;                                      // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.VehicleSpecificUIDetails
struct FVehicleSpecificUIDetails
{
public:
	TSubclassOf<class UUserWidget>               WidgetClass;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlaylistUIExtensionSlot          Slot;                                              // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4053[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<enum class EVehicleSeats>             ValidSeats;                                        // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.AthenaCarPlayerSlotUnreplicated
struct FAthenaCarPlayerSlotUnreplicated
{
public:
	class UInputComponent*                       Input;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.MarshalledVFXRuntimeData
struct FMarshalledVFXRuntimeData
{
public:
	uint8                                        Pad_4054[0x50];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UFXSystemComponent*>            DynamicSystems;                                    // 0x50(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USceneComponent*                       BasedOn;                                           // 0x60(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.MarshalledVFXData
struct FMarshalledVFXData
{
public:
	struct FGameplayTagContainer                 ParameterGroups;                                   // 0x0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFXType                           Type;                                              // 0x20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4055[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UFXSystemAsset>         Asset;                                             // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachAtBone;                                      // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4056[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTransform                            RelativeOffset;                                    // 0x60(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EffectIdTag;                                       // 0x90(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoActivate;                                     // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4057[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ParameterNameMapping
struct FParameterNameMapping
{
public:
	class FName                                  CascadeName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NiagaraName;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.MarshalledVFXAuthoredData
struct FMarshalledVFXAuthoredData
{
public:
	TArray<struct FMarshalledVFXData>            NiagaraVFX;                                        // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMarshalledVFXData>            CascadeVFX;                                        // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, struct FParameterNameMapping> NameReplacements;                                  // 0x20(0x50)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x1C (0x28 - 0xC)
// ScriptStruct FortniteGame.VisibilityInfo
struct FVisibilityInfo : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_4058[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                Actor;                                             // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortVisibilityComponent*              VisibilityComponent;                               // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                       TeamVisibilityFlag;                                // 0x20(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4059[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x118 - 0x108)
// ScriptStruct FortniteGame.VisibiltyInfoArray
struct FVisibiltyInfoArray : public FFastArraySerializer
{
public:
	TArray<struct FVisibilityInfo>               VisibilityInfoArray;                               // 0x108(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortVolumeManagerBlackListObjects
struct FFortVolumeManagerBlackListObjects : public FTableRowBase
{
public:
	TSoftObjectPtr<class UObject>                ObjectPath;                                        // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortVolumeManagerBlackListClasses
struct FFortVolumeManagerBlackListClasses : public FTableRowBase
{
public:
	TSoftClassPtr<class UObject>                 ClassPath;                                         // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.PendingSpawnLevelSaveRecord
struct FPendingSpawnLevelSaveRecord
{
public:
	uint8                                        Pad_405A[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.Volume_Internal
struct FVolume_Internal
{
public:
	uint8                                        Pad_405B[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortVolumeTimeOfDayConfig
struct FFortVolumeTimeOfDayConfig
{
public:
	uint8                                        bShouldOverrideTimeOfDay : 1;                      // Mask: 0x1, PropSize: 0x10x0(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseRandomTimeOfDay : 1;                           // Mask: 0x2, PropSize: 0x10x0(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x34 (0x40 - 0xC)
// ScriptStruct FortniteGame.VolumePlayerStateInfo
struct FVolumePlayerStateInfo : public FFastArraySerializerItem
{
public:
	uint8                                        Pad_405C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      UniquePlayerId;                                    // 0x10(0x28)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortVolume*                           Volume;                                            // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x120 - 0x108)
// ScriptStruct FortniteGame.FortVolumeActiveUsers
struct FFortVolumeActiveUsers : public FFastArraySerializer
{
public:
	TArray<struct FVolumePlayerStateInfo>        Items;                                             // 0x108(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class AFortVolumeManager*                    Manager;                                           // 0x118(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PlayerWaypointContext
struct FPlayerWaypointContext
{
public:
	class APlayerState*                          PlayerState;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingTrapFloor_Waypoint*           Waypoint;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.WeaponHudData
struct FWeaponHudData
{
public:
	class FName                                  KeyActionName;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GamepadActionName;                                 // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ActionDescription;                                 // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bVisible;                                          // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_405D[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.FortWeaponDurabilityByRarityStats
struct FFortWeaponDurabilityByRarityStats : public FTableRowBase
{
public:
	int32                                        Common;                                            // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Uncommon;                                          // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Rare;                                              // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Epic;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Legendary;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Mythic;                                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Transcendent;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Unattainable;                                      // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.AttachedParticleComponentDef
struct FAttachedParticleComponentDef
{
public:
	struct FTransform                            Transform;                                         // 0x0(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  ParentSocket;                                      // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        Template;                                          // 0x38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDetailMode                       DetailMode;                                        // 0x60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_405E[0xF];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x28 (0x160 - 0x138)
// ScriptStruct FortniteGame.FortMeleeWeaponStats
struct FFortMeleeWeaponStats : public FFortBaseWeaponStats
{
public:
	float                                        RangeVSEnemies;                                    // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConeYawAngle;                                      // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConePitchAngle;                                    // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwingPlaySpeed;                                    // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SwingTime;                                         // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingConeAngle;                                 // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingConeAnglePitch;                            // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangeVSBuildings2D;                                // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangeVSBuildingsZ;                                 // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangeVSWeakSpots;                                  // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.HelperGameplayTagToAmmoCountMultiplier
struct FHelperGameplayTagToAmmoCountMultiplier
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CountMultiplier;                                   // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x0 (0x28 - 0x28)
// ScriptStruct FortniteGame.SourceToAmmoMultiplierOverrideData
struct FSourceToAmmoMultiplierOverrideData : public FHelperGameplayTagToAmmoCountMultiplier
{
public:
};

// 0x0 (0x28 - 0x28)
// ScriptStruct FortniteGame.WeaponPickupAmmoMultiplierOverrideData
struct FWeaponPickupAmmoMultiplierOverrideData : public FHelperGameplayTagToAmmoCountMultiplier
{
public:
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.WeaponPickupAmmoCountData
struct FWeaponPickupAmmoCountData
{
public:
	struct FGameplayTag                          AmmoItemDefinitionTag;                             // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpawnCount;                                        // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.FortBulletPatternEntry
struct FFortBulletPatternEntry
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RelativeRotation;                                  // 0x8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_405F[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x180 (0x2B8 - 0x138)
// ScriptStruct FortniteGame.FortRangedWeaponStats
struct FFortRangedWeaponStats : public FFortBaseWeaponStats
{
public:
	float                                        Spread;                                            // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpreadDownsights;                                  // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StandingStillSpreadMultiplier;                     // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaCrouchingSpreadMultiplier;                   // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaJumpingFallingSpreadMultiplier;              // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaSprintingSpreadMultiplier;                   // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpeedForSpreadMultiplier;                       // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpeedForSpreadMultiplier;                       // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpreadDownsightsAdditionalCooldownTime;            // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatX1;                                            // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatY1;                                            // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatX2;                                            // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatY2;                                            // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatX3;                                            // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatY3;                                            // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatXScale;                                        // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatYScale;                                        // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolX1;                                            // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolY1;                                            // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolX2;                                            // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolY2;                                            // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolX3;                                            // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolY3;                                            // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolXScale;                                        // 0x194(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolYScale;                                        // 0x198(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PerfectAimCooldown;                                // 0x19C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BulletsPerCartridge;                               // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FiringRate;                                        // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ROFScale;                                          // 0x1A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BurstFiringRate;                                   // 0x1AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FiringRateDownsightsMultiplier;                    // 0x1B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutofireRange;                                     // 0x1B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutofireAcquisitionDelay;                          // 0x1B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutofireAcquisitionRechargeTime;                   // 0x1BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutofireReleaseTime;                               // 0x1C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutofireCooldown;                                  // 0x1C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilVert;                                        // 0x1C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilVertScale;                                   // 0x1CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilVertScaleGamepad;                            // 0x1D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VertRecoilDownChance;                              // 0x1D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilHoriz;                                       // 0x1D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilHorizScale;                                  // 0x1DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilHorizScaleGamepad;                           // 0x1E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilInterpSpeed;                                 // 0x1E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilRecoveryInterpSpeed;                         // 0x1E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilRecoveryDelay;                               // 0x1EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilRecoveryFraction;                            // 0x1F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecoilDownsightsMultiplier;                        // 0x1F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilMagnitudeMin;                          // 0x1F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilMagnitudeMax;                          // 0x1FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilMagnitudeScale;                        // 0x200(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilAngleMin;                              // 0x204(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilAngleMax;                              // 0x208(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilRollMagnitudeMin;                      // 0x20C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilRollMagnitudeMax;                      // 0x210(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilInterpSpeed;                           // 0x214(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilRecoveryInterpSpeed;                   // 0x218(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilDownsightsMultiplier;                  // 0x21C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaRecoilHipFireMultiplier;                     // 0x220(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaAimAssistRange;                              // 0x224(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ADSTransitionInTime;                               // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ADSTransitionOutTime;                              // 0x22C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxSpareAmmo;                                      // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BulletsPerTracer;                                  // 0x234(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIDelayBeforeFiringMin;                            // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIDelayBeforeFiringMax;                            // 0x23C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIFireDurationMin;                                 // 0x240(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIFireDurationMax;                                 // 0x244(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIMinSpreadDuration;                               // 0x248(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIMaxSpreadDuration;                               // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIDurationSpreadMultiplier;                        // 0x250(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIAdditionalSpreadForTargetMovingLaterally;        // 0x254(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIAthenaHearFiringNoiseRange;                      // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EQSDensity;                                        // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinApproachRange;                                  // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinActualRange;                                    // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinPreferredRange;                                 // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinPreferredRangeEQS;                              // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPreferredRangeEQS;                              // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPreferredRange;                                 // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxActualRange;                                    // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxApproachRange;                                  // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RangeToAutomaticallyAddEnemyPawnGoals;             // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SweepRadius;                                       // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoReloadDelayOverride;                           // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverheatingMaxValue;                               // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverheatHeatingValue;                              // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullChargeOverheatHeatingValue;                    // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverheatingCoolingValue;                           // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeatingCooldownDelay;                              // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverheatedCooldownDelay;                           // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCoolOverheatWhileCharging;                        // 0x2A4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4060[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        FortHomingTurnSpeedMin;                            // 0x2A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FortHomingTurnSpeedMax;                            // 0x2AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FortHomingTimeUntilMaxTurnSpeed;                   // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4061[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.FortWindImpulseCylinderDelta
struct FFortWindImpulseCylinderDelta
{
public:
	struct FVector                               DeltaCenter;                                       // 0x0(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInitialized;                                      // 0xC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRippleOutward;                                    // 0xD(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4062[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        SectionWidth;                                      // 0x10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InnerSectionRadius;                                // 0x14(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OuterSectionRadius;                                // 0x18(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaximumRadius;                                     // 0x1C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DesiredOverallBlendTime;                           // 0x20(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SectionBlendTime;                                  // 0x24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SectionCurrentBlendTime;                           // 0x28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PreviousMagnitude;                                 // 0x2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SectionCurrentMagnitude;                           // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DesiredMagnitude;                                  // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBox                                  OuterWorldBounds;                                  // 0x38(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBox                                  InnerWorldBounds;                                  // 0x54(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBox                                  WindImpulseBounds;                                 // 0x70(0x1C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortWindImpulseHandle                WindImpulseHandleToModify;                         // 0x8C(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0x4C (0x4C - 0x0)
// ScriptStruct FortniteGame.FortWindImpulseRadius
struct FFortWindImpulseRadius
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Radius;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentRadius;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviousRadius;                                    // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Magnitude;                                         // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentMagnitude;                                  // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PreviousMagnitude;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlendTime;                                         // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentBlendTime;                                  // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  WorldBounds;                                       // 0x2C(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortWindImpulseHandle                Handle;                                            // 0x48(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0x3C (0x3C - 0x0)
// ScriptStruct FortniteGame.FortWindImpulseCylinderRadial
struct FFortWindImpulseCylinderRadial
{
public:
	struct FVector                               Location;                                          // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InnerRadius;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OuterRadius;                                       // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Magnitude;                                         // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  WorldBounds;                                       // 0x18(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsChanging;                                       // 0x34(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsChangePending;                                  // 0x35(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4063[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortWindImpulseHandle                Handle;                                            // 0x38(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
};

// 0xC (0x48 - 0x3C)
// ScriptStruct FortniteGame.FortWindImpulseCylinder
struct FFortWindImpulseCylinder : public FFortWindImpulseCylinderRadial
{
public:
	struct FVector                               WindDirection;                                     // 0x3C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct FortniteGame.WindScalarMaterialInterpolationData
struct FWindScalarMaterialInterpolationData
{
public:
	class FName                                  MaterialParameterName;                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialParameterIndex;                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LerpFromValue;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LerpToValue;                                       // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortMaterialParameterID
struct FFortMaterialParameterID
{
public:
	int32                                        VariableIndex;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VariableName;                                      // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct FortniteGame.FortWindMaterialParameterPairID
struct FFortWindMaterialParameterPairID
{
public:
	int32                                        PairIndex;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMaterialParameterID              SpeedParameter;                                    // 0x4(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	struct FFortMaterialParameterID              OffsetParameter;                                   // 0x10(0xC)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x2C (0x2C - 0x0)
// ScriptStruct FortniteGame.WindVectorMaterialInterpolationData
struct FWindVectorMaterialInterpolationData
{
public:
	class FName                                  MaterialParameterName;                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialParameterIndex;                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          LerpFromValue;                                     // 0xC(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          LerpToValue;                                       // 0x1C(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.FortWindMaterialData
struct FFortWindMaterialData
{
public:
	class UMaterialInstanceDynamic*              Mid;                                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              IntenseStateMID;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialParameterPairIndices;                      // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WindVectorParameterIndex;                          // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWindScalarMaterialInterpolationData> ScalarInterpolationData;                           // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWindVectorMaterialInterpolationData> VectorInterpolationData;                           // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortWindMaterialParameterPairID> ParametersToSet;                                   // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.FortWindResponderMaterialVariablePairData
struct FFortWindResponderMaterialVariablePairData
{
public:
	float                                        PreviousSpeed;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreviousOffset;                                    // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaterialsPreviousTime;                             // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeltaTimeModifiedByMaterialSpeed;                  // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaterialVariableIndex;                             // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpeedVariableName;                                 // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TimeOffsetVariableName;                            // 0x1C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.FortWindResponder
struct FFortWindResponder
{
public:
	class ABuildingSMActor*                      WindUpdatingBuildingSMActor;                       // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColor*                     WindSpeedCurve;                                    // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColor*                     WindPannerSpeedCurve;                              // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            WindAudio;                                         // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            MildWindMaterialInstances;                         // 0x20(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            IntenseWindMaterialInstances;                      // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortWindMaterialData>         MaterialsData;                                     // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        MaterialParameterPairIndices;                      // 0x50(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4064[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortWindResponderMaterialVariablePairData> PairedVariablesData;                               // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_4065[0x1C];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        WindSpeed;                                         // 0x84(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4066[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	bool                                         bHasSetupAnimatingMaterials;                       // 0x8C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4067[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.FortPIEMissionOverrideData
struct FFortPIEMissionOverrideData
{
public:
	uint8                                        Pad_4068[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortPlacementLocationTagHandler
struct FFortPlacementLocationTagHandler
{
public:
	class ABuildingActor*                        SpawnLocationBuildingActor;                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedActor;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToRemove;                                      // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortDeferredNewActorData
struct FFortDeferredNewActorData
{
public:
	class ABuildingActor*                        BuildingActor;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SavedLevelIndex;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4069[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.WorldTileSubArray
struct FWorldTileSubArray
{
public:
	TArray<class AWorldTileFoundation*>          X;                                                 // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.FortLevelStreamingInfo
struct FFortLevelStreamingInfo
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortLevelStreamingState          LevelState;                                        // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFailedToLoad;                                     // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_406A[0x2];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortPlayerEarnedItemCaches
struct FFortPlayerEarnedItemCaches
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemCacheItemDefinition*>  EarnedItemCaches;                                  // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortClientMarkerRequest
struct FFortClientMarkerRequest
{
public:
	int32                                        InstanceID;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortWorldMarkerType              MarkerType;                                        // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_406B[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FVector                               WorldPosition;                                     // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPositionOffset;                               // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldNormal;                                       // 0x20(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_406C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class AActor*                                MarkedActor;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8C (0x8C - 0x0)
// ScriptStruct FortniteGame.PlayerStatsRecord
struct FPlayerStatsRecord
{
public:
	int32                                        Stats[0x23];                                       // 0x0(0x8C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.StatRecord
struct FStatRecord
{
public:
	class FName                                  StatName;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatValue;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.StatManagerPeriodRecord
struct FStatManagerPeriodRecord
{
public:
	TArray<struct FStatRecord>                   StatRecords;                                       // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PinnedSchematicsRecord
struct FPinnedSchematicsRecord
{
public:
	TArray<class FString>                        PinnedSchematicInstances;                          // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xE0 (0xE0 - 0x0)
// ScriptStruct FortniteGame.FortPlayerRecord
struct FFortPlayerRecord
{
public:
	class FString                                DisplayName;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UniqueId;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                BackpackData;                                      // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bPlayerIsNew;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_406D[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FPlayerStatsRecord                    PlayerStatsData;                                   // 0x34(0x8C)(NoDestructor, NativeAccessSpecifierPublic)
	struct FStatManagerPeriodRecord              CampaignPeriodRecord;                              // 0xC0(0x10)(NativeAccessSpecifierPublic)
	struct FPinnedSchematicsRecord               PinnedSchematicsRecord;                            // 0xD0(0x10)(NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.PlaysetPropSettings
struct FPlaysetPropSettings
{
public:
	uint8                                        Pad_406E[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1 (0x1 - 0x0)
// ScriptStruct FortniteGame.PlaysetPropEntry
struct FPlaysetPropEntry
{
public:
	uint8                                        Pad_406F[0x1];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x1A0 (0x1A0 - 0x0)
// ScriptStruct FortniteGame.MapLocationRenderData
struct FMapLocationRenderData
{
public:
	uint8                                        Pad_4070[0x1A0];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.MapLocation
struct FMapLocation
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             Position;                                          // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font;                                              // 0x20(0x50)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x70(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          LocationTag;                                       // 0x80(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x190 (0x190 - 0x0)
// ScriptStruct FortniteGame.FortZoneStats
struct FFortZoneStats
{
public:
	uint8                                        Pad_4071[0x190];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.ContainerStatInfo
struct FContainerStatInfo
{
public:
	uint8                                        Pad_4072[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.EnemyNpcStatInfo
struct FEnemyNpcStatInfo
{
public:
	uint8                                        Pad_4073[0x10];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct FortniteGame.DefenderNPCStatInfo
struct FDefenderNPCStatInfo
{
public:
	uint8                                        Pad_4074[0xC];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortLevelRecord
struct FFortLevelRecord
{
public:
	int32                                        ParentLevelIndex;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 BoundActorGuid;                                    // 0x4(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PackageName;                                       // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4075[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortActorRecord>              SavedActors;                                       // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        X_Loc;                                             // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Y_Loc;                                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Rotation;                                          // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4076[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.DeployableBaseSupportSettings
struct FDeployableBaseSupportSettings
{
public:
	bool                                         bUseDeployableBases;                               // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4077[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UFortDeployableBaseCloudSaveItemDefinition> DeployableBaseCloudSaveItemDef;                    // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ADeployableBasePlot>     DeployableBasePlot;                                // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortDeployableBaseSkillTreeUnlocks> SupportedUnlocks;                                  // 0x58(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeployableBasesReadOnly;                          // 0x80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeployableBaseUseType            SupportedUseType;                                  // 0x81(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4078[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class UFortTieredCollectionLayout*>   TieredCollectionLayouts;                           // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.ZoneThemeDifficultyProperties
struct FZoneThemeDifficultyProperties
{
public:
	TArray<struct FDataTableRowHandle>           ValidDifficulties;                                 // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTimeOfDayTheme                   TimeOfDayTheme;                                    // 0x10(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortGlobalWindInfo                   GlobalWindInfo;                                    // 0x50(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.GameplayTagMessage
struct FGameplayTagMessage
{
public:
	struct FGameplayTagContainer                 Tags;                                              // 0x0(0x20)(Edit, NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x20(0x18)(Edit, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct FortniteGame.AthenaLevelUpData
struct FAthenaLevelUpData : public FTableRowBase
{
public:
	int32                                        Level;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpToNextLevel;                                     // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpTotal;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrencyReward;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ChaseRewardTemplateId;                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DefaultCharacterPartsForPawnClass
struct FDefaultCharacterPartsForPawnClass
{
public:
	struct FGameplayTag                          ClassTag;                                          // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UCustomCharacterPart>> CharacterParts;                                    // 0x8(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ConditionalFoundationQuotaTier
struct FConditionalFoundationQuotaTier
{
public:
	TArray<TSoftClassPtr<class ABuildingFoundation>> FoundationClasses;                                 // 0x0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        MinFoundations;                                    // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxFoundations;                                    // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.ConditionalFoundationQuota
struct FConditionalFoundationQuota
{
public:
	TArray<struct FConditionalFoundationQuotaTier> Tiers;                                             // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.TieredWaveCollectionLootSetData
struct FTieredWaveCollectionLootSetData
{
public:
	TArray<class FName>                          StartOfCollectionItemTierGroups;                   // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FName>                          SuccessfulWaveItemTierGroups;                      // 0x10(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.TieredWaveCollectionLootSet
struct FTieredWaveCollectionLootSet : public FTableRowBase
{
public:
	TArray<struct FTieredWaveCollectionLootSetData> LootSetData;                                       // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TieredModifierSetData
struct FTieredModifierSetData
{
public:
	int32                                        WaveNumber;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ModifierDuration;                                  // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ModifierLootTierGroup;                             // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.TieredModifierSet
struct FTieredModifierSet : public FTableRowBase
{
public:
	TArray<struct FTieredModifierSetData>        ModifierData;                                      // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.TieredWaveSet
struct FTieredWaveSet : public FTableRowBase
{
public:
	TArray<struct FTieredWaveSetData>            WaveData;                                          // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.TieredWaveSetCollectionData
struct FTieredWaveSetCollectionData
{
public:
	class FText                                  DefenseText;                                       // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  LevelText;                                         // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  WaveText;                                          // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                  BreatherText;                                      // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	int32                                        MinLvl;                                            // 0x60(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLvl;                                            // 0x64(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseWaveLengthRowName;                             // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseNumOfKillsRowName;                             // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BaseNumOfKillPointsRowName;                        // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WaveSet;                                           // 0x80(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.TieredWaveSetCollection
struct FTieredWaveSetCollection : public FTableRowBase
{
public:
	TArray<struct FTieredWaveSetCollectionData>  CollectionData;                                    // 0x8(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct FortniteGame.ScoreMultiplierRow
struct FScoreMultiplierRow : public FTableRowBase
{
public:
	float                                        CombatMultiplier;                                  // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingMultiplier;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UtilityMultiplier;                                 // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BadgeMultiplier;                                   // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MonsterKills;                                      // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MonsterDamagePoints;                               // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlayerKills;                                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WoodGathered;                                      // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StoneGathered;                                     // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MetalGathered;                                     // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Deaths;                                            // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BluGloActivity;                                    // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsBuilt;                                    // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsBuilt_Wood;                               // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsBuilt_Stone;                              // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsBuilt_Metal;                              // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Wood2;                           // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Wood3;                           // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Stone2;                          // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Stone3;                          // 0x54(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Metal2;                          // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsUpgraded_Metal3;                          // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BuildingsDestroyed;                                // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Repair_Wood;                                       // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Repair_Stone;                                      // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Repair_Metal;                                      // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FlagsCaptured;                                     // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FlagsReturned;                                     // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ContainersLooted;                                  // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CraftingPoints;                                    // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TrapPlacementPoints;                               // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TrapActivationPoints;                              // 0x84(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortReplicatedStatMapping
struct FFortReplicatedStatMapping
{
public:
	enum class EStatCategory                     StatCategory;                                      // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4079[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FText                                  DisplayName;                                       // 0x8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.WorldItemAndMinMaxCount
struct FWorldItemAndMinMaxCount
{
public:
	struct FCurveTableRowHandle                  MinCurveTable;                                     // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxCurveTable;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*              Item;                                              // 0x20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.ItemDefinitionAndCount
struct FItemDefinitionAndCount
{
public:
	int32                                        Count;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_407A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftObjectPtr<class UFortItemDefinition>    ItemDefinition;                                    // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortRewardQuantityPair
struct FFortRewardQuantityPair
{
public:
	class FString                                TemplateId;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Quantity;                                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_407B[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortPostMaxAccountLevelRewardData
struct FFortPostMaxAccountLevelRewardData : public FTableRowBase
{
public:
	TArray<struct FFortRewardQuantityPair>       Rewards;                                           // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.IronCityDifficultyInfo
struct FIronCityDifficultyInfo
{
public:
	int32                                        AccountLevel;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Difficulty;                                        // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LootLevel;                                         // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StatClamp;                                         // 0xC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_407C[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                MissionRewards;                                    // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RewardBadgeTag;                                    // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.IronCityRowToRating
struct FIronCityRowToRating
{
public:
	int32                                        Difficulty;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecommendedRating;                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRating;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxRating;                                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.IronCityMatchmakingBuckets
struct FIronCityMatchmakingBuckets
{
public:
	int32                                        Difficulty;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecommendedRating;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortIronCityDifficultyData
struct FFortIronCityDifficultyData : public FTableRowBase
{
public:
	int32                                        DifficultyLevel;                                   // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LootLevel;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SuggestedStatClamp;                                // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MissionRewards;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RewardBadgeTag;                                    // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortWeaponAlterationRarityMappingData
struct FFortWeaponAlterationRarityMappingData : public FTableRowBase
{
public:
	class FString                                SlotRarityValues;                                  // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct FortniteGame.FortLevelUpDataV2
struct FFortLevelUpDataV2 : public FTableRowBase
{
public:
	int32                                        XP;                                                // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DifficultyLevel;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        XPDisplayMultiplier;                               // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_407D[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortRewardQuantityPair>       Rewards;                                           // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        RestXPCap;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RestXPRechargeRate;                                // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BoostXPPerConsumable;                              // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_407E[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HUDLayoutUsageData
struct FHUDLayoutUsageData
{
public:
	int32                                        NumOfTimesOpened;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOfTimesReset;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOfTimesSaved;                                   // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOfTimesPanning;                                 // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x180 (0x180 - 0x0)
// ScriptStruct FortniteGame.HUDLayoutDataEntry
struct FHUDLayoutDataEntry
{
public:
	struct FGameplayTag                          VisualType;                                        // 0x0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnchorData                           AnchroData;                                        // 0x8(0x28)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        ZOrder;                                            // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBacchusHUDStateType              BuildVisibility;                                   // 0x34(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBacchusHUDStateType              CombatVisibility;                                  // 0x35(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBacchusHUDStateType              EditVisibility;                                    // 0x36(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBacchusHUDStateType              CreativeVisibility;                                // 0x37(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Property_0;                                        // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Property_1;                                        // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Property_2;                                        // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Property_3;                                        // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, float>                     FloatProperties;                                   // 0x48(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_407F[0xE8];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.HUDLayoutData
struct FHUDLayoutData
{
public:
	TArray<struct FHUDLayoutDataEntry>           LayoutEntries;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x5 (0x5 - 0x0)
// ScriptStruct FortniteGame.FireModeData
struct FFireModeData
{
public:
	bool                                         bAutoFireIsEnabled;                                // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         b3DTouchEnabled;                                   // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTapToShootEnabled;                                // 0x2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAlwaysShowDedicatedButton;                        // 0x3(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFireModeType                     FireModeType;                                      // 0x4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct FortniteGame.FortKeepAmmoStash
struct FFortKeepAmmoStash : public FTableRowBase
{
public:
	int32                                        Max1;                                              // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cooldown1;                                         // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max2;                                              // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cooldown2;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max3;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cooldown3;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max4;                                              // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cooldown4;                                         // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupTier;                                        // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4080[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.FortKeepItemGroup
struct FFortKeepItemGroup : public FTableRowBase
{
public:
	int32                                        Items;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTier;                                           // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseLevel;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4081[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct FortniteGame.FortKeepResourceGroup
struct FFortKeepResourceGroup : public FTableRowBase
{
public:
	class FName                                  Container;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4082[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                ResourceName;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortItemDefinition>    FullPath;                                          // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.LevelSaveRecordCollectionItem
struct FLevelSaveRecordCollectionItem
{
public:
	TSoftObjectPtr<class ULevelSaveRecord>       LevelSaveRecord;                                   // 0x0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RecordID;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            Transform;                                         // 0x30(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.RecordBucket
struct FRecordBucket
{
public:
	TArray<int32>                                RecordIndices;                                     // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.RecordBucketMap
struct FRecordBucketMap
{
public:
	TMap<struct FIntPoint, struct FRecordBucket> PositionToRecord;                                  // 0x0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int32>                                DuplicateRecords;                                  // 0x50(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct FortniteGame.StructRecord
struct FStructRecord
{
public:
	uint8                                        Pad_4083[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.SaveStructFile
struct FSaveStructFile
{
public:
	TArray<struct FStructRecord>                 StructRecords;                                     // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.DeleteActorRecord
struct FDeleteActorRecord
{
public:
	uint8                                        Pad_4084[0x38];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.LevelStreamedDeleteActorRecord
struct FLevelStreamedDeleteActorRecord
{
public:
	uint8                                        Pad_4085[0x90];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.ActorInstanceRecord
struct FActorInstanceRecord
{
public:
	uint8                                        Pad_4086[0x60];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct FortniteGame.ActorTemplateRecord
struct FActorTemplateRecord
{
public:
	uint8                                        Pad_4087[0x58];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x48 (0x48 - 0x0)
// ScriptStruct FortniteGame.ActorComponentRecord
struct FActorComponentRecord
{
public:
	class FName                                  ComponentName;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UActorComponent>         ComponentClass;                                    // 0x8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                ComponentData;                                     // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint32                                       DataHash;                                          // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4088[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ComponentRecordRedirect
struct FComponentRecordRedirect
{
public:
	class FString                                ClassName;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OldComponentClass;                                 // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OldComponentName;                                  // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NewComponentClass;                                 // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NewComponentName;                                  // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.VersionedMetricWrapper
struct FVersionedMetricWrapper
{
public:
	enum class ELevelSaveRecordVersion           IntroducedVersion;                                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELevelSaveRecordVersion           DeprecatedVersion;                                 // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4089[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSoftClassPtr<class UObjectMetric>           Class;                                             // 0x8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedEncounterSequence
struct FFortGeneratedEncounterSequence
{
public:
	struct FFortEncounterTransitionSettings      TransitionSettings;                                // 0x0(0x1)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_408A[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        StartingGeneratedEncounterProfileIndex;            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumEncountersInSequence;                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_408B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 EncounterSequenceTags;                             // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedMissionOption
struct FFortGeneratedMissionOption
{
public:
	class UFortDifficultyOptionCategoryMission*  MissionOptionCategory;                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortDifficultyOptionMission> MissionOption;                                     // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeLerpValue;                                    // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_408C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedEncounterOption
struct FFortGeneratedEncounterOption
{
public:
	class UFortDifficultyOptionCategoryEncounter* EncounterOptionCategory;                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortDifficultyOptionEncounter> EncounterOption;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDifficultyOptionEncounter*        EncounterOptionInstance;                           // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeLerpValue;                                    // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChangedSinceLastVLog;                             // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_408D[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x5 (0x5 - 0x0)
// ScriptStruct FortniteGame.FortEncounterModeSettings
struct FFortEncounterModeSettings
{
public:
	enum class EFortEncounterPacingMode          PacingMode;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLocationManagementMode SpawnLocationManagementMode;                       // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLocationPlacementMode SpawnLocationMode;                                 // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterUtilitiesMode       UtilitiesMode;                                     // 0x3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLimitType      SpawnLimitMode;                                    // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedEncounterProfile
struct FFortGeneratedEncounterProfile
{
public:
	float                                        EncounterDifficultyLevel;                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_408E[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortGeneratedEncounterOption> EncounterOptions;                                  // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortEncounterModeSettings            EncounterModeSettings;                             // 0x18(0x5)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_408F[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FGameplayTagContainer                 EncounterTypeTags;                                 // 0x20(0x20)(NativeAccessSpecifierPublic)
	int32                                        DifficultyOptionPointsAvailableAtGeneration;       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinDifficultyOptionPointsToUse;                    // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldReselectOptionsPerInstance;                 // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4090[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        GeneratedEncounterIndex;                           // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.FortGeneratedDifficultyOptions
struct FFortGeneratedDifficultyOptions
{
public:
	float                                        GameDifficultyAtGeneration;                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DifficultyOptionPointsAvailableAtGeneration;       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEncounterSpawnPointsAtGeneration;               // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinDifficultyOptionPointsToUse;                    // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGeneratedEncounterSequence> GeneratedEncounterSequences;                       // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortGeneratedMissionOption>   MissionOptions;                                    // 0x20(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortGeneratedEncounterProfile> GeneratedEncounterProfiles;                        // 0x30(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x78 (0x78 - 0x0)
// ScriptStruct FortniteGame.FortMissionPlacementItemLookupData
struct FFortMissionPlacementItemLookupData
{
public:
	struct FGameplayTagContainer                 ItemIdentifyingTags;                               // 0x0(0x20)(Transient, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsAddedToPlacementActors;                        // 0x20(0x20)(Transient, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    ActorToPlace;                                      // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                ActorToUseForSpawnLocation;                        // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnedActor;                                      // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocation;                                     // 0x58(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotation;                                     // 0x64(0xC)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bDontCreateSpawnRiftsNearby : 1;                   // Mask: 0x1, PropSize: 0x10x70(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldFreeLocationsOnDeath : 1;                   // Mask: 0x2, PropSize: 0x10x70(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4091[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x88 (0x88 - 0x0)
// ScriptStruct FortniteGame.FortMissionEntry
struct FFortMissionEntry
{
public:
	float                                        Weight;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldMinLevel;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldMaxLevel;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4092[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDataTableRowHandle                   MinDifficultyInfoRow;                              // 0x10(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UFortMissionGenerator*                 MissionGenerator;                                  // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMissionInfo*                      MissionInfo;                                       // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMissionGenerationCategory        GenerationCategory;                                // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4093[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FFortGeneratedDifficultyOptions       GeneratedDifficultyOptions;                        // 0x38(0x40)(NativeAccessSpecifierPublic)
	TArray<struct FFortMissionPlacementItemLookupData> BlueprintLookupData;                               // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortObjectiveRecord
struct FFortObjectiveRecord
{
public:
	TSubclassOf<class AFortObjectiveBase>        ObjectiveClass;                                    // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                ObjectiveData;                                     // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x138 (0x138 - 0x0)
// ScriptStruct FortniteGame.FortMissionRecord
struct FFortMissionRecord
{
public:
	struct FFortMissionEntry                     MissionEntry;                                      // 0x0(0x88)(NativeAccessSpecifierPublic)
	class UFortMissionGenerator*                 MissionGenerator;                                  // 0x88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGeneratedDifficultyOptions       GeneratedMissionOptions;                           // 0x90(0x40)(Transient, NativeAccessSpecifierPublic)
	int32                                        DayGenerated;                                      // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UIIndex;                                           // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      QuestOwnerAccount;                                 // 0xD8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMissionStatus                MissionStatus;                                     // 0x100(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4094[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FFortObjectiveRecord>          ObjectiveRecords;                                  // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                MissionData;                                       // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGuid                                 MissionGuid;                                       // 0x128(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.FortMissionManagerRecord
struct FFortMissionManagerRecord
{
public:
	TSubclassOf<class AFortMissionManager>       MissionManagerClass;                               // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionRecord>            MissionRecords;                                    // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumRequiredMissionsOfType[0x4];                    // 0x18(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                MissionManagerData;                                // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMissionInstancedConfigDataBucket
struct FFortMissionInstancedConfigDataBucket
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMissionConfigData*                ConfigData;                                        // 0x8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMissionInstancedConfigData
struct FFortMissionInstancedConfigData
{
public:
	TArray<struct FFortMissionInstancedConfigDataBucket> ConfigDataBuckets;                                 // 0x0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.FortMissionConfigDataBucket
struct FFortMissionConfigDataBucket
{
public:
	struct FGameplayTag                          Tag;                                               // 0x0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortMissionConfigData>  ConfigDataClass;                                   // 0x8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.FortMissionConfigDataParams
struct FFortMissionConfigDataParams
{
public:
	TArray<struct FFortMissionConfigDataBucket>  ConfigParams;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// 0xB8 (0xB8 - 0x0)
// ScriptStruct FortniteGame.FortPlacementActorFinderEntry
struct FFortPlacementActorFinderEntry
{
public:
	TSoftClassPtr<class AActor>                  BuildingToSpawn;                                   // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingActor>            BuildingClassToFind;                               // 0x28(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingActor>>    BuildingClassesToFind;                             // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredTags;                                      // 0x40(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PreferredTags;                                     // 0x60(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExlusionTags;                                      // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortFinderProperty>           RequiredProperties;                                // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCollisionCheck;                             // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSnapToGrid;                                       // 0xB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4095[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.FortPlacementActorFinderInfo
struct FFortPlacementActorFinderInfo
{
public:
	float                                        DistanceRangeMin;                                  // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceRangeMax;                                  // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortPlacementActorFinderEntry> BuildingData;                                      // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.FortPlacementDistanceRequirements
struct FFortPlacementDistanceRequirements
{
public:
	float                                        DistanceRangeMin;                                  // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceRangeMax;                                  // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.FortMissionEvent
struct FFortMissionEvent
{
public:
	class FName                                  EventType;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ObjectiveHandle;                                   // 0x8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UObject*                               EventFocus;                                        // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataAsset*                            EventContent;                                      // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                EventInstigator;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GenericInt;                                        // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GenericFloat;                                      // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  GenericText;                                       // 0x48(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x60(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGuid                                 MissionGuid;                                       // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMissionEventParams*               Params;                                            // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.MyTownWorkerSetBonusData
struct FMyTownWorkerSetBonusData
{
public:
	struct FGameplayTagContainer                 SetBonusTypeTag;                                   // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        RequiredWorkersCount;                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4096[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSubclassOf<class UGameplayEffect>           SetBonusEffect;                                    // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4097[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.MyTownWorkerPortraitData
struct FMyTownWorkerPortraitData
{
public:
	TSoftObjectPtr<class UFortItemIconDefinition> Portrait;                                          // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4098[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.MyTownWorkerGenderData
struct FMyTownWorkerGenderData
{
public:
	enum class EFortCustomGender                 Gender;                                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4099[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        SelectionWeight;                                   // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMyTownWorkerPortraitData>     PotraitData;                                       // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.MyTownWorkerPersonalityData
struct FMyTownWorkerPersonalityData
{
public:
	struct FGameplayTagContainer                 PersonalityTypeTag;                                // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  PersonalityName;                                   // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        SelectionWeight;                                   // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_409A[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FMyTownWorkerGenderData>       GenderData;                                        // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.ObjectCostVersion
struct FObjectCostVersion
{
public:
	int32                                        MajorVersion;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_409B[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int64                                        Timestamp;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       MinorVersionStringHash;                            // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_409C[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.ObjectIdentifier
struct FObjectIdentifier
{
public:
	TArray<class FString>                        ObjectTags;                                        // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TMap<uint32, uint32>                         ContainedIdentifierHashes;                         // 0x10(0x50)(Edit, ZeroConstructor, EditConst, RepSkip, NativeAccessSpecifierPrivate)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.ObjectCostData
struct FObjectCostData
{
public:
	TMap<uint32, int32>                          PerMetricCosts;                                    // 0x0(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.ObjectCostCollection
struct FObjectCostCollection
{
public:
	TMap<uint32, struct FObjectIdentifier>       HashToIdentifier;                                  // 0x0(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TMap<struct FObjectIdentifier, struct FObjectCostData> ObjectIdentifiersToCostData;                       // 0x50(0x50)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB0 - 0x0)
// ScriptStruct FortniteGame.ObjectCostContainer
struct FObjectCostContainer
{
public:
	uint8                                        Pad_409D[0x60];                                    // Fixing Size After Last Property  [ Dumper-8 ]
	TMap<struct FObjectCostVersion, struct FObjectCostCollection> VersionedObjectCostCollections;                    // 0x60(0x50)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.VersionedBudget
struct FVersionedBudget
{
public:
	enum class ELevelSaveRecordVersion           Version;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_409E[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Value;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.VersionedCostOverride
struct FVersionedCostOverride
{
public:
	TSoftClassPtr<class UObjectMetric>           ClassPtr;                                          // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELevelSaveRecordVersion           IntroducedVersion;                                 // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELevelSaveRecordVersion           DeprecatedVersion;                                 // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_409F[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        OverrideCost;                                      // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x68 - 0x8)
// ScriptStruct FortniteGame.FortTrackedObjectCostOverrideListData
struct FFortTrackedObjectCostOverrideListData : public FTableRowBase
{
public:
	TSoftObjectPtr<class UObject>                ObjectPtr;                                         // 0x8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  ClassPtr;                                          // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVersionedCostOverride>        Overrides;                                         // 0x58(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x0 (0x8 - 0x8)
// ScriptStruct FortniteGame.FortTrackedObjectListData
struct FFortTrackedObjectListData : public FTableRowBase
{
public:
};

// 0x170 (0x170 - 0x0)
// ScriptStruct FortniteGame.HeroSlotInfo
struct FHeroSlotInfo
{
public:
	uint8                                        Pad_40A0[0x170];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x2C0 (0x2C0 - 0x0)
// ScriptStruct FortniteGame.ClipInfo
struct FClipInfo
{
public:
	float                                        StartTimeStamp;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x8(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                S3KeyName;                                         // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                S3Bucket;                                          // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DatabaseId;                                        // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DatabaseParitionKey;                               // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpectatorCameraType              CameraType;                                        // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EClipMessageSettings              MessageSettings;                                   // 0x71(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECameraShotNotificationTypes      MessageNotificationType;                           // 0x72(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A1[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        MessageDisplayTime;                                // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MessageString;                                     // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EHighlightFeatures, float>   FeatureScores;                                     // 0x88(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0xD8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A2[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FSavedSpectatorCameraShot             CameraShotPrefab;                                  // 0xF0(0x1D0)(NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PegasusJob
struct FPegasusJob
{
public:
	class FString                                ReplayId;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExportShotsIndividually;                          // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A3[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FClipInfo>                     ClipsToExport;                                     // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bGenerateTimelineEventData;                        // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bJobAllowsFailure;                                 // 0x29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A4[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.PegasusJobMeta
struct FPegasusJobMeta
{
public:
	class FString                                PGS_RenderingJobId;                                // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        PGS_AdditionalTags;                                // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BackendJobsPayload
struct FBackendJobsPayload
{
public:
	TArray<struct FPegasusJob>                   JobsToRun;                                         // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPegasusJobMeta                       PayloadMeta;                                       // 0x10(0x20)(NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.BackendExportedClipInfo
struct FBackendExportedClipInfo
{
public:
	class FString                                PGS_DatabaseId;                                    // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PGS_DatabaseIdPartitionKey;                        // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PGS_S3Bucket;                                      // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PGS_S3key;                                         // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PegasusAdditionalTagInfo
struct FPegasusAdditionalTagInfo
{
public:
	float                                        PGS_ScalarValue;                                   // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                PGS_StringValue;                                   // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PGS_TagKeyContext;                                 // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.PegasusTimelineEventHit
struct FPegasusTimelineEventHit
{
public:
	int32                                        PGS_HitCount;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PGS_ScalarValue;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PGS_ReplayStartTimeStamp;                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PGS_ReplayEndTimeStamp;                            // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FPegasusAdditionalTagInfo> PGS_AdditionalTags;                                // 0x10(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        PGS_ClipRelativeStartTime;                         // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PGS_ClipRelativeEndTime;                           // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct FortniteGame.PegasusTimelineEvent
struct FPegasusTimelineEvent
{
public:
	class FString                                PGS_TagName;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PGS_IsScalarValueRelevant;                         // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A6[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class FString                                PGS_ScalarValueDescription;                        // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPegasusTimelineCategories        PGS_Category;                                      // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A7[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FPegasusTimelineEventHit>      EventHits;                                         // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.BackendExportedTimelineEvents
struct FBackendExportedTimelineEvents
{
public:
	class FString                                PGS_DatabaseId;                                    // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PGS_DatabaseIdPartitionKey;                        // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPegasusTimelineEvent>         PGS_TimelineEvents;                                // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.BackendJobCompletePayload
struct FBackendJobCompletePayload
{
public:
	class FString                                PGS_RenderJobMessageHandle;                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBackendExportedClipInfo>      PGS_ExportedVideos;                                // 0x10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FBackendExportedTimelineEvents> PGS_ExportedTimelines;                             // 0x20(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPegasusJobMeta                       PGS_PayloadMeta;                                   // 0x30(0x20)(NativeAccessSpecifierPublic)
};

// 0x98 (0x98 - 0x0)
// ScriptStruct FortniteGame.BackendAlarmPayload
struct FBackendAlarmPayload
{
public:
	class FString                                PGS_Message;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBackendJobsPayload                   PGS_ReceivedJobPayload;                            // 0x10(0x30)(NativeAccessSpecifierPublic)
	struct FBackendJobCompletePayload            PGS_JobProgress;                                   // 0x40(0x50)(NativeAccessSpecifierPublic)
	bool                                         PGS_bIsVideoManagerFinished;                       // 0x90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PGS_bIsShuttingDown;                               // 0x91(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A8[0x6];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x24 (0x24 - 0x0)
// ScriptStruct FortniteGame.PhysicsObjectInitialParameters
struct FPhysicsObjectInitialParameters
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverrideMassInKG;                                  // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverrideAngularDampening;                          // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverrideLinearDampening;                           // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerForceMultiplier;                             // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnKnockbackMultiplier;                           // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableGravity : 1;                                // Mask: 0x1, PropSize: 0x10x20(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableGravityOnHit : 1;                           // Mask: 0x2, PropSize: 0x10x20(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldKillPawnOnHit : 1;                          // Mask: 0x4, PropSize: 0x10x20(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40A9[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct FortniteGame.HitData
struct FHitData
{
public:
	float                                        PingOfHitter;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class APawn*                                 HittingPawn;                                       // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitNormal;                                         // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40AB[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTimeStampedPhysicsPawnState          ObjectState;                                       // 0x20(0x50)(NoDestructor, NativeAccessSpecifierPublic)
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.PlayerReportingInfoContainer
struct FPlayerReportingInfoContainer
{
public:
	class UFortLocalPlayer*                      Owner;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UReportablePlayerInfo*>         AllPlayerInfo;                                     // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UReportablePlayerInfo*>         AllIslandInfo;                                     // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_40AC[0x38];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.CachedPlayerReportingMatchInfoAnalytics
struct FCachedPlayerReportingMatchInfoAnalytics
{
public:
	class FString                                GameSessionId;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlaylistName;                                      // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TournamentId;                                      // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EventWindowId;                                     // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.PairedWeightEntry
struct FPairedWeightEntry
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        Value;                                             // 0x8(0x20)(Edit, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.PairedWeightContainer
struct FPairedWeightContainer
{
public:
	TArray<struct FPairedWeightEntry>            Weights;                                           // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct FortniteGame.PreviewWorldSetup
struct FPreviewWorldSetup
{
public:
	TSubclassOf<class AGameModeBase>             DefaultGameMode;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                 DefaultLevel;                                      // 0x8(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct FortniteGame.CreativePerfCost
struct FCreativePerfCost
{
public:
	uint8                                        Pad_40AD[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct FortniteGame.AnimClassStats
struct FAnimClassStats
{
public:
	class FString                                AnimClassName;                                     // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, float>                   StatValues;                                        // 0x10(0x50)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct FortniteGame.QuickHealPriority
struct FQuickHealPriority
{
public:
	float                                        MinHealth;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealth;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinShields;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxShields;                                        // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  GameplayTags;                                      // 0x10(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.WatchedReplayShotInfo
struct FWatchedReplayShotInfo
{
public:
	int32                                        ShotIndex;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FPegasusTimelineEvent>         TimelineEvents;                                    // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct FortniteGame.VideoManagerExtractionJob
struct FVideoManagerExtractionJob
{
public:
	uint8                                        Pad_40AF[0xD0];                                    // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x150 (0x150 - 0x0)
// ScriptStruct FortniteGame.SolarisPrototype
struct FSolarisPrototype
{
public:
	class FString                                SolarisString;                                     // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B0[0x140];                                   // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct FortniteGame.StatNamesToTrack
struct FStatNamesToTrack : public FTableRowBase
{
public:
	class FName                                  StatName;                                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatRecordingPeriod              Period;                                            // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B1[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.DevHeroClassInfo
struct FDevHeroClassInfo
{
public:
	class FString                                Name;                                              // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B2[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.BaseSample
struct FBaseSample
{
public:
	uint8                                        Pad_40B3[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Timestamp;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Location;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x30 - 0x18)
// ScriptStruct FortniteGame.PawnSample
struct FPawnSample : public FBaseSample
{
public:
	struct FRotator                              Rotation;                                          // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Health;                                            // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Shield;                                            // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsJumping : 1;                                    // Mask: 0x1, PropSize: 0x10x2C(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInVehicle : 1;                                  // Mask: 0x2, PropSize: 0x10x2C(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUsingUmbrella : 1;                              // Mask: 0x4, PropSize: 0x10x2C(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDBNO : 1;                                       // Mask: 0x8, PropSize: 0x10x2C(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDead : 1;                                       // Mask: 0x10, PropSize: 0x10x2C(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_2AE : 3;                                    // Fixing Bit-Field Size  [ Dumper-8 ]
	uint8                                        Pad_40B4[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int16                                        PoiTag;                                            // 0x2E(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xC8 - 0x18)
// ScriptStruct FortniteGame.DeathEvent
struct FDeathEvent : public FBaseSample
{
public:
	uint8                                        Pad_40B5[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUniqueNetIdRepl                      Instigator;                                        // 0x20(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      Victim;                                            // 0x48(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDBNO;                                           // 0x70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasDBNOOnDeath;                                   // 0x71(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDeathCause                       DeathCause;                                        // 0x72(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B6[0x1];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        DeathDistance;                                     // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPawnSample                           PawnSampleBeforeDeath;                             // 0x78(0x30)(NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DeathTags;                                         // 0xA8(0x20)(NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct FortniteGame.GameLogPlayerSampleBase
struct FGameLogPlayerSampleBase
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x58 - 0x28)
// ScriptStruct FortniteGame.GameLogPawnSample
struct FGameLogPawnSample : public FGameLogPlayerSampleBase
{
public:
	struct FPawnSample                           TheSample;                                         // 0x28(0x30)(NativeAccessSpecifierPublic)
};

// 0x8 (0x20 - 0x18)
// ScriptStruct FortniteGame.BuildEvent
struct FBuildEvent : public FBaseSample
{
public:
	bool                                         bIsEdit;                                           // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B7[0x7];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x48 - 0x28)
// ScriptStruct FortniteGame.GameLogBuildSample
struct FGameLogBuildSample : public FGameLogPlayerSampleBase
{
public:
	struct FBuildEvent                           TheSample;                                         // 0x28(0x20)(NativeAccessSpecifierPublic)
};

// 0x8 (0x20 - 0x18)
// ScriptStruct FortniteGame.StormSample
struct FStormSample : public FBaseSample
{
public:
	float                                        Radius;                                            // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsValid;                                          // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B8[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x8 (0x20 - 0x18)
// ScriptStruct FortniteGame.PlayerMetaInfo
struct FPlayerMetaInfo : public FBaseSample
{
public:
	int32                                        MatchPlacement;                                    // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B9[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x20 (0x48 - 0x28)
// ScriptStruct FortniteGame.GameLogPlayerMetaSample
struct FGameLogPlayerMetaSample : public FGameLogPlayerSampleBase
{
public:
	struct FPlayerMetaInfo                       TheSample;                                         // 0x28(0x20)(NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct FortniteGame.UnicornDancePartyInfo
struct FUnicornDancePartyInfo
{
public:
	float                                        StartTimeStamp;                                    // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndTimestamp;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PeakMembers;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeakStartTimestamp;                                // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeakEndTimestamp;                                  // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEndsBecauseOfUs;                                  // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMovingEmote;                                    // 0x15(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40BA[0x2];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TSet<struct FUniqueNetIdRepl>                LatestMembers;                                     // 0x18(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x80 - 0x18)
// ScriptStruct FortniteGame.PlayerDancePartySample
struct FPlayerDancePartySample : public FBaseSample
{
public:
	struct FUnicornDancePartyInfo                DancePartyInfo;                                    // 0x18(0x68)(NativeAccessSpecifierPublic)
};

// 0x80 (0xA8 - 0x28)
// ScriptStruct FortniteGame.GameLogDancePartySample
struct FGameLogDancePartySample : public FGameLogPlayerSampleBase
{
public:
	struct FPlayerDancePartySample               TheSample;                                         // 0x28(0x80)(NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.GameLogStream
struct FGameLogStream
{
public:
	TArray<struct FDeathEvent>                   DeathEvents;                                       // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_40BB[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FGameLogPawnSample>            PawnSamples;                                       // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_40BC[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FGameLogBuildSample>           BuildEvents;                                       // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_40BD[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FStormSample>                  StormSamples;                                      // 0x48(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_40BE[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FGameLogPlayerMetaSample>      PlayerMetaInfoSamples;                             // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_40BF[0x8];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FGameLogDancePartySample>      PlayerDancePartySamples;                           // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C0[0x8];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct FortniteGame.HighlightsPayloadMeta
struct FHighlightsPayloadMeta
{
public:
	class FString                                UCRN_ReplayId;                                     // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UCRN_BuildVersion;                                 // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UCRN_McpDeployment;                                // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UCRN_PayloadVersion;                               // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C1[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FDateTime                             UCRN_GenerationDate;                               // 0x38(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UCRN_McpBackendEnvironment;                        // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UCRN_McpAppName;                                   // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UCRN_McpGameBackendName;                           // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UCRN_PlaylistName;                                 // 0x70(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.CosmeticLoadoutPayload
struct FCosmeticLoadoutPayload
{
public:
	TMap<enum class EFortItemType, class FString> UCRN_CharacterVarients;                            // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct FortniteGame.HighlightReelPlayerInfoPayload
struct FHighlightReelPlayerInfoPayload
{
public:
	struct FCosmeticLoadoutPayload               UCRN_CosmeticInfo;                                 // 0x0(0x50)(NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct FortniteGame.UnicornSocialMetaPayload
struct FUnicornSocialMetaPayload
{
public:
	TMap<enum class EUnicornSocialFeatures, float> UCRN_FeatureScores;                                // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<struct FUniqueNetIdRepl>                UCRN_FriendsInvolved;                              // 0x50(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        UCRN_SocialScore;                                  // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C2[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.EliminationTagsPayload
struct FEliminationTagsPayload
{
public:
	TSet<enum class EDeathCause>                 UCRN_DeathCauses;                                  // 0x0(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<class FString>                          UCRN_Tags;                                         // 0x50(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x268 (0x268 - 0x0)
// ScriptStruct FortniteGame.HighlightClipPayload
struct FHighlightClipPayload
{
public:
	int32                                        UCRN_HighlightId;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UCRN_StartTimestamp;                               // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UCRN_Duration;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C3[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TMap<enum class EHighlightFeatures, float>   UCRN_GameplayFeatures;                             // 0x10(0x50)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        UCRN_GameplayScore;                                // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FUnicornSocialMetaPayload             UCRN_SocialMeta;                                   // 0x68(0xA8)(NativeAccessSpecifierPublic)
	float                                        UCRN_NetworkingFidelityAverage;                    // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<class FString>                        UCRN_POITags;                                      // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FEliminationTagsPayload               UCRN_FollowingPlayerKillTags;                      // 0x128(0xA0)(NativeAccessSpecifierPublic)
	struct FEliminationTagsPayload               UCRN_FollowingPlayerDeathTags;                     // 0x1C8(0xA0)(NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct FortniteGame.HighlightReelPayload
struct FHighlightReelPayload
{
public:
	struct FUniqueNetIdRepl                      UCRN_PlayerId;                                     // 0x0(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UCRN_PlayerName;                                   // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHighlightReelPlayerInfoPayload       UCRN_PlayerInfo;                                   // 0x38(0x50)(NativeAccessSpecifierPublic)
	enum class EHighlightReelIds                 UCRN_HighlightReelId;                              // 0x88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C6[0x7];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	TArray<struct FHighlightClipPayload>         UCRN_Clips;                                        // 0x90(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x90 (0x90 - 0x0)
// ScriptStruct FortniteGame.HighlightsPayload
struct FHighlightsPayload
{
public:
	struct FHighlightsPayloadMeta                UCRN_Meta;                                         // 0x0(0x80)(NativeAccessSpecifierPublic)
	TArray<struct FHighlightReelPayload>         UCRN_HighlightReels;                               // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct FortniteGame.TileGroupInfo
struct FTileGroupInfo
{
public:
	class UWorldTileGroup*                       TileGroup;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Weight;                                            // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinTiles;                                          // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTiles;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlaceAdjacent : 1;                                // Mask: 0x1, PropSize: 0x10x14(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C7[0x3];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct FortniteGame.TileGroupSelection
struct FTileGroupSelection
{
public:
	TArray<struct FTileGroupInfo>                TileGroupOptions;                                  // 0x0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct FortniteGame.TileGroupMapInfo
struct FTileGroupMapInfo
{
public:
	TSoftObjectPtr<class UWorld>                 GroupWorld;                                        // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Weight;                                            // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  QuotaCategory;                                     // 0x2C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40C8[0x4];                                     // Fixing Size Of Struct [ Dumper-8 ]
};

// 0x318 (0x318 - 0x0)
// ScriptStruct FortniteGame.FortTileLootData
struct FFortTileLootData
{
public:
	struct FFortLootQuotaData                    LootQuotas[0x12];                                  // 0x0(0x2D0)(NativeAccessSpecifierPublic)
	int32                                        LootDrops[0x12];                                   // 0x2D0(0x48)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
