#pragma once

// Dumped by Twin1dev || Dumper-8

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x238 (0xD58 - 0xB20)
// BlueprintGeneratedClass BP_Creative_Device_Teleporter.BP_Creative_Device_Teleporter_C
class ABP_Creative_Device_Teleporter_C : public AFortCreativeTeleporter
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xB20(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                       Portal_InWorld_Loop_Cue;                           // 0xB28(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCreative_Enabled_Component_C*         EnabledComponent;                                  // 0xB30(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_EnergyComponent_C*                 EnergyComponent;                                   // 0xB38(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                      HoverOverSphere;                                   // 0xB40(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortMinigameLogicComponent*           FortMinigameLogic;                                 // 0xB48(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UToyOptionsComponent_C*                ToyOptionsComponent;                               // 0xB50(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortGameplayTriggerMessageComponent*  TriggerOnTeleportedTo;                             // 0xB58(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortGameplayTriggerMessageComponent*  TriggerOnEntered;                                  // 0xB60(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortGameplayReceiverMessageComponent* DisableWhenReceived;                               // 0xB68(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*              P_Rift_ClosingUp;                                  // 0xB70(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*              P_Rift_Idle_Loop;                                  // 0xB78(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                     OverlapCapsule;                                    // 0xB80(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortGameplayReceiverMessageComponent* EnableWhenReceived;                                // 0xB88(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                        TPDisabledFXTimeline_Linear_33082A284455666A90E47AAB1A6DF1B0; // 0xB90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                TPDisabledFXTimeline__Direction_33082A284455666A90E47AAB1A6DF1B0; // 0xB94(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BA7[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UTimelineComponent*                    TPDisabledFXTimeline;                              // 0xB98(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TPEnabledFXTimeline_Linear_D89DE44C465390DD74946C89C54154CE; // 0xBA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                TPEnabledFXTimeline__Direction_D89DE44C465390DD74946C89C54154CE; // 0xBA4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BA8[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UTimelineComponent*                    TPEnabledFXTimeline;                               // 0xBA8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TPEffectsTimeLine_Linear_4D8B0BEF43A49EF50570AF98BE017A79; // 0xBB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class ETimelineDirection                TPEffectsTimeLine__Direction_4D8B0BEF43A49EF50570AF98BE017A79; // 0xBB4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UTimelineComponent*                    TPEffectsTimeLine;                                 // 0xBB8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                Knob_TeleporterName;                               // 0xBC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                        Knob_TeleporterEnergyCapacity;                     // 0xBD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Knob_bShowNameOnEntrance;                          // 0xBD4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_5BAA[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        Knob_EnergyCostPerUse;                             // 0xBD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Knob_RechargeRatePerSecond;                        // 0xBDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Knob_DelayBeforeRecharge;                          // 0xBE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Knob_ChargeToEnable;                               // 0xBE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Knob_ChangeTarget;                                 // 0xBE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BAB[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UParticleSystem*                       EnterRiftPS;                                       // 0xBF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                            EnteredRiftSound;                                  // 0xBF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EFortCreativeTeleporterGroup      LastChannel;                                       // 0xC00(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BAC[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        TeleporterUseCounter;                              // 0xC04(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Knob_bSFXEnabled;                                  // 0xC08(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	bool                                         Knob_bVFXEnabled;                                  // 0xC09(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	bool                                         Knob_bTeleporterVisible;                           // 0xC0A(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	bool                                         bAllowVehciles;                                    // 0xC0B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                         Knob_bConserveMomentum;                            // 0xC0C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_5BAD[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	int32                                        Knob_AllowedTeamIdx;                               // 0xC10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BAE[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class ABP_Creative_Device_Teleporter_C*      DestinationTeleporter;                             // 0xC18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                       PawnToTeleport;                                    // 0xC20(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                 TeleporterBlockingTags;                            // 0xC28(0x20)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*              RiftMID;                                           // 0xC48(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DesiredEnergyLevel;                                // 0xC50(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        PreviousEnergyLevel;                               // 0xC54(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                          TeleporterLowEnergyColor;                          // 0xC58(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                          TeleporterMaxEnergyColor;                          // 0xC68(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*              SharpFlareMID;                                     // 0xC78(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*              RoundFlareMID;                                     // 0xC80(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*              CoronaMID;                                         // 0xC88(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                    CurrentEnergyAttribute;                            // 0xC90(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                    EnergyCapacityAttribute;                           // 0xCB0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                    EnergyCostAttribute;                               // 0xCD0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                               FragmentMaskVector;                                // 0xCF0(0xC)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bChargeGainShown;                                  // 0xCFC(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_5BAF[0x3];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	float                                        NewEnergyLevel;                                    // 0xD00(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        CurrentEnergyCapacity;                             // 0xD04(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        CurrentEnergyCost;                                 // 0xD08(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                          NewTeleporterEnergyColor;                          // 0xD0C(0x10)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Knob_EnabledIndex;                                 // 0xD1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        TeleporterEventFlash;                              // 0xD20(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	enum class EFortCreativeTeleporterEvent      TeleporterEventType;                               // 0xD21(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BB0[0x6];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	struct FTimerHandle                          TeleportEventResetTimer;                           // 0xD28(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                        CurrentTimeSelectedTargetIndex;                    // 0xD30(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BB1[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class ABP_Creative_Device_Teleporter_C*      CurrentTimeSelectedTarget;                         // 0xD38(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        RiftCenterBrightnessScalar;                        // 0xD40(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        RiftEdgeBrightnessScalar;                          // 0xD44(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Knob_bFacePlayerInDirectionOfTeleporter;           // 0xD48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5BB2[0x4];                                     // Fixing Size After Last Property  [ Dumper-8 ]
	class UParticleSystem*                       ExitRiftPS;                                        // 0xD50(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass()
	{
		static class UClass* Clss = UObject::FindClassFast("BP_Creative_Device_Teleporter_C");
		return Clss;
	}

	void GetTeleportedPawnPitch(class AFortPlayerPawn* PawnToTeleport, class ABP_Creative_Device_Teleporter_C* SourceTeleporter, float* OutPitch, int32 Temp_int_Variable, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, class AController* CallFunc_GetController_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_1, float CallFunc_BreakRotator_Roll_2, float CallFunc_BreakRotator_Pitch_2, float CallFunc_BreakRotator_Yaw_2, float CallFunc_Add_FloatFloat_ReturnValue, float K2Node_Select_Default);
	void GetTeleportedPawnYaw(class AFortPlayerPawn* PawnToTeleport, class ABP_Creative_Device_Teleporter_C* SourceTeleporter, float* OutYaw, int32 Temp_int_Variable, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_1, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_2, float CallFunc_BreakRotator_Roll_2, float CallFunc_BreakRotator_Pitch_2, float CallFunc_BreakRotator_Yaw_2, float CallFunc_Add_FloatFloat_ReturnValue, float K2Node_Select_Default);
	void ResetTeleportEventState(bool CallFunc_HasAuthority_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void OnRep_TeleporterUsedFlash(bool CallFunc_IsDedicatedServer_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1);
	void OnReceivedPawn(class AFortPlayerPawn* PawnReceived, class AFortPlayerPawn* PlayerPawn, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, UDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, uint8 CallFunc_Add_ByteByte_ReturnValue);
	void IsMinigameInCreationMode(bool* bInCreationMode, bool bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void InitializeFX(bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable_1, bool CallFunc_IsEnabled_Enabled, float K2Node_Select_Default);
	void UpdateEnergyAttributes();
	void SelectDestinationTeleporter(class AFortPlayerPawn* PawnToTeleport, class ABP_Creative_Device_Teleporter_C** SelectedTeleporter, class AFortPlayerPawn* LocalPawnToTeleport, class AFortCreativeTeleporter* CurrentTeleporterCandidate, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, int32 Temp_int_Variable, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, class ABP_Creative_Device_Teleporter_C* K2Node_DynamicCast_AsBP_Creative_Device_Teleporter, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetTeleportedPawnYaw_OutYaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue, bool CallFunc_IsEnabled_Enabled, bool CallFunc_IsTeleporterBlocked_ReturnValue, int32 Temp_int_Variable_1, float CallFunc_Conv_IntToFloat_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_3, float CallFunc_GetRuntime_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int32 CallFunc_FFloor_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_4, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UFortCreativeTeleporterManagerComponent* CallFunc_GetTeleporterManager_TeleporterManagerComponent, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, TSet<class AFortCreativeTeleporter*> CallFunc_GetTeleportersInGroup_ReturnValue, TArray<class AFortCreativeTeleporter*>& CallFunc_Set_ToArray_Result, int32 CallFunc_Array_Length_ReturnValue, class AFortCreativeTeleporter* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_Percent_IntInt_ReturnValue, int32 CallFunc_Percent_IntInt_ReturnValue_1, class AFortCreativeTeleporter* CallFunc_Array_Get_Item_1, class AFortCreativeTeleporter* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue);
	void IsMinigameInProgress(bool* bInProgress, bool bLocalInProgress, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void TeleportPlayerPawnTo(class AFortPlayerPawn* PawnToTeleport, class ABP_Creative_Device_Teleporter_C* TargetTeleporter, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn, enum class EInteractionBeingAttempted InteractionBeingAttempted, bool bInteractSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_HasStarted_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class AFortPlayerControllerAthena* K2Node_DynamicCast_AsFort_Player_Controller_Athena, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_2, class AFortVolume* CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume, bool CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue);
	void GetTeleporterManager(class UFortCreativeTeleporterManagerComponent** TeleporterManagerComponent, class AFortVolumeManager* CallFunc_GetVolumeManager_OutVolumeManager, enum class EVolumeValidityResult CallFunc_GetVolumeManager_OutIsValid, class AFortVolume* CallFunc_GetVolumeForActor_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class AFortMinigame* CallFunc_GetMinigameForVolume_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void CanTeleportActor(class AFortPawn* PawnToTeleport, bool* bCanTeleportActor, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsEnabled_Enabled, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue, uint8 CallFunc_GetActorTeam_ReturnValue, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, uint8 CallFunc_MakeLiteralByte_ReturnValue, uint8 CallFunc_Subtract_ByteByte_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue);
	void TPEffectsTimeLine__FinishedFunc();
	void TPEffectsTimeLine__UpdateFunc();
	void TPEnabledFXTimeline__FinishedFunc();
	void TPEnabledFXTimeline__UpdateFunc();
	void TPDisabledFXTimeline__FinishedFunc();
	void TPDisabledFXTimeline__UpdateFunc();
	void UpdateTeleporterFX();
	void PortalEnabledFX();
	void PortalDisabledFX();
	void PlayTeleportExitedFX(const struct FVector& Location);
	void BndEvt__EnableWhenReceived_K2Node_ComponentBoundEvent_0_OnGameplayMessageReceived__DelegateSignature(class AController* TriggerInstigator);
	void BndEvt__DisableWhenReceived_K2Node_ComponentBoundEvent_1_OnGameplayMessageReceived__DelegateSignature(class AController* TriggerInstigator);
	void BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BndEvt__DrainEnergyWhenReceived_K2Node_ComponentBoundEvent_1_OnGameplayMessageReceived__DelegateSignature(class AController* TriggerInstigator);
	void BndEvt__RechargeWhenReceived_K2Node_ComponentBoundEvent_4_OnGameplayMessageReceived__DelegateSignature(class AController* TriggerInstigator);
	void BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_5_AnyPropertyChangedDelegate__DelegateSignature();
	void PlayTeleportEnteredFX(const struct FVector& Location);
	void BndEvt__FortMinigameLogic_K2Node_ComponentBoundEvent_8_SimpleDynamicMulticastDelegate__DelegateSignature();
	void BndEvt__FortMinigameLogic_K2Node_ComponentBoundEvent_9_SimpleDynamicMulticastDelegate__DelegateSignature();
	void UpdateRiftVisibility();
	void BndEvt__FortMinigameLogic_K2Node_ComponentBoundEvent_6_OnMinigameStateChanged__DelegateSignature(class AFortMinigame* Minigame, enum class EFortMinigameState NewMinigameState);
	void ReceiveBeginPlay();
	void BndEvt__EnergyComponent_K2Node_ComponentBoundEvent_11_EnergyLevelsUpdated__DelegateSignature();
	void BndEvt__EnabledComponent_K2Node_ComponentBoundEvent_12_On_Enabled_State_Changed__DelegateSignature(bool Enabled);
	void BndEvt__FortMinigameLogic_K2Node_ComponentBoundEvent_13_OnMinigameAssignmentChanged__DelegateSignature(class AFortMinigame* Minigame);
	void BndEvt__TeleportToWhenReceived_K2Node_ComponentBoundEvent_7_OnGameplayMessageReceived__DelegateSignature(class AController* TriggerInstigator);
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_Creative_Device_Teleporter(int32 EntryPoint, bool Temp_bool_Variable, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue, bool CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1, float CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_2, float CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_2, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue_2, float CallFunc_Divide_FloatFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue_2, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_3, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue_3, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_1, float CallFunc_FClamp_ReturnValue_2, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_2, bool CallFunc_Greater_FloatFloat_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_3, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_4, bool CallFunc_Greater_FloatFloat_ReturnValue_2, const struct FVector& K2Node_CustomEvent_Location_1, bool CallFunc_IsValid_ReturnValue, float Temp_float_Variable, bool CallFunc_IsValid_ReturnValue_1, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class AController* K2Node_ComponentBoundEvent_TriggerInstigator_4, class AController* K2Node_ComponentBoundEvent_TriggerInstigator_3, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class AController* K2Node_ComponentBoundEvent_TriggerInstigator_2, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, class AController* K2Node_ComponentBoundEvent_TriggerInstigator_1, class ABP_Creative_Device_Teleporter_C* CallFunc_SelectDestinationTeleporter_SelectedTeleporter, bool CallFunc_CanTeleportActor_bCanTeleportActor, bool CallFunc_IsDedicatedServer_ReturnValue, class UFortCreativeTeleporterManagerComponent* CallFunc_GetTeleporterManager_TeleporterManagerComponent, bool CallFunc_IsValid_ReturnValue_3, class UFortCreativeTeleporterManagerComponent* CallFunc_GetTeleporterManager_TeleporterManagerComponent_1, bool CallFunc_IsValid_ReturnValue_4, const struct FVector& K2Node_CustomEvent_Location, bool Temp_bool_Variable_1, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_1, float K2Node_Select_Default, bool CallFunc_isMinigameInProgress_bInProgress, bool CallFunc_IsDedicatedServer_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, class UFortCreativeTeleporterManagerComponent* CallFunc_GetTeleporterManager_TeleporterManagerComponent_2, bool CallFunc_IsValid_ReturnValue_5, const struct FGameplayTagContainer& CallFunc_GetChannelId_ReturnValue, class UFortCreativeTeleporterManagerComponent* CallFunc_GetTeleporterManager_TeleporterManagerComponent_3, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsDedicatedServer_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue, const struct FVector& Temp_struct_Variable, bool CallFunc_HasAuthority_ReturnValue_1, bool CallFunc_IsDedicatedServer_ReturnValue_3, class AController* CallFunc_GetController_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, bool Temp_bool_Variable_2, bool CallFunc_HasAuthority_ReturnValue_2, class UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, class AFortMinigame* K2Node_ComponentBoundEvent_Minigame_1, enum class EFortMinigameState K2Node_ComponentBoundEvent_NewMinigameState, bool CallFunc_IsDedicatedServer_ReturnValue_4, bool CallFunc_IsDedicatedServer_ReturnValue_5, float CallFunc_Lerp_ReturnValue, bool CallFunc_IsValid_ReturnValue_7, const struct FVector& CallFunc_Conv_LinearColorToVector_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue_4, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, const struct FLinearColor& CallFunc_LinearColorLerp_ReturnValue, const struct FLinearColor& CallFunc_Multiply_LinearColorFloat_ReturnValue, bool K2Node_ComponentBoundEvent_Enabled, bool CallFunc_IsEnabled_Enabled, bool CallFunc_IsValid_ReturnValue_8, const struct FVector& Temp_struct_Variable_1, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_isMinigameInCreationMode_bInCreationMode, int32 Temp_int_Variable, bool CallFunc_BooleanOR_ReturnValue, const struct FVector& Temp_struct_Variable_2, class AFortMinigame* K2Node_ComponentBoundEvent_Minigame, uint8 CallFunc_Add_ByteByte_ReturnValue, uint8 CallFunc_Add_ByteByte_ReturnValue_1, bool Temp_bool_Variable_3, class AController* K2Node_ComponentBoundEvent_TriggerInstigator, class AFortPlayerController* K2Node_DynamicCast_AsFort_Player_Controller, bool K2Node_DynamicCast_bSuccess_1, const struct FVector& K2Node_Select_Default_1, class AFortPlayerPawn* CallFunc_GetPlayerPawn_ReturnValue, bool CallFunc_CanTeleportActor_bCanTeleportActor_1, bool CallFunc_RequestPermissionToTeleportPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue_10, UDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FVector& Temp_struct_Variable_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_1, bool Temp_bool_Variable_4, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, enum class EEndPlayReason K2Node_Event_EndPlayReason, float Temp_float_Variable_1, bool Temp_bool_Variable_5, float Temp_float_Variable_2, float K2Node_Select_Default_2, float K2Node_Select_Default_3, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& K2Node_Select_Default_4, const struct FVector& K2Node_Select_Default_5);
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
